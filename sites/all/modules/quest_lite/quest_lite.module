<?php
function quest_lite_perm() {

  return array('Question Lite','Question Save', 'Add Resource' , 'Save Resource','Flag Question','Question Report Percent','Question Report Time','Question Report Map');

} // function newmodule_perm
function quest_lite_menu() {	
 
  $quest['qlite/view'] = array(
    'title' => 'Question Lite',
    'page callback' => 'qlite_view',
    'access arguments' => array('Question Lite'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
 
 
 $quest['qlite/save'] = array(
    'title' => 'Question Lite',
    'page callback' => 'qlite_save',
    'access arguments' => array('Question Save'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
  
  
  $quest['qlite/resource'] = array(
    'title' => 'Resources',
    'page callback' => 'add_resources',
    'access arguments' => array('Add Resource'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
  
  
   $quest['qlite/ajaxadd'] = array(
    'title' => 'Resources',
    'page callback' => 'save_resources',
    'access arguments' => array('Save Resource'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
  
   $quest['qlite/flag'] = array(
    'title' => 'Flag Question',
    'page callback' => 'flag_question',
    'access arguments' => array('Flag Question'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
   $quest['qlite/questionmenu'] = array(
    'title' => 'tab',
    'page callback' => 'tab_list',
    'access arguments' => array('Question Lite'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
  
   $quest['qlite/panel'] = array(
    'title' => 'panel',
    'page callback' => 'panel_content',
    'access arguments' => array('Question Lite'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
  
   $quest['qlite/flagreport'] = array(
    'title' => 'Flag Report',
    'page callback' => 'flag_report',
    'access arguments' => array('Question Lite'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
  
  $quest['qlite/suggest'] = array(
    'title' => 'Suggest Answer',
    'page callback' => 'suggest_answer',
    'access arguments' => array('Question Lite'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
   $quest['qlite/answersubmit'] = array(
    'title' => 'Suggest Answer',
    'page callback' => 'suggest_answer_save',
    'access arguments' => array('Question Lite'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
  
   $quest['qlite/innews'] = array(
    'title' => 'News',
    'page callback' => 'question_news',
    'access arguments' => array('Question Lite'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
    $quest['qlite/media'] = array(
    'title' => 'Media',
    'page callback' => 'question_media',
    'access arguments' => array('Question Lite'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
  
    $quest['qlite/facts'] = array(
    'title' => 'Facts',
    'page callback' => 'question_facts',
    'access arguments' => array('Question Lite'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
  
  
   $quest['qlite/percent'] = array(
    'title' => 'Suggest Answer',
    'page callback' => 'qlite_percent',
    'access arguments' => array('Question Report Percent'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
  $quest['qlite/graph'] = array(
    'title' => 'Suggest Answer',
    'page callback' => 'qlite_graph',
    'access arguments' => array('Question Report Time'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
  $quest['qlite/map'] = array(
    'title' => 'Suggest Answer',
    'page callback' => 'qlite_map',
    'access arguments' => array('Question Report Map'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
  
  
    
   $quest['qlite/answervote'] = array(
    'title' => 'Suggest Answer',
    'page callback' => 'answer_vote',
    'access arguments' => array('Question Lite'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
  
    $quest['qlite/Details'] = array(
    'title' => 'Question Information',
    'page callback' => 'qusetion_info',
    'access arguments' => array('Question Lite'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
   $quest['admin/qlite/percentage'] = array(
    'title' => 'Percentage',
    'page callback' => 'percent_info',
    'access arguments' => array('Question Lite'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
  
  $quest['admin/qlite/percentsave'] = array(
    'title' => 'Percentage',
    'page callback' => 'percent_save',
    'access arguments' => array('Question Lite'),
	   'type' => MENU_SUGGESTED_ITEM,
    'file' => 'quest_lite.pages.inc',
  );
  
  return $quest;
  
 
  
}

 function getAnsweredUsers( $question_id = NULL){
   global $user;
   $user->uid=1;
   $question_id = 24;
   /*$query = "SELECT pav.*,  u.*,sav.*
			 from suggest_answer_vote sav
			 INNER JOIN possible_answer_vote pav on sav.qid=pav.qid
			 LEFT JOIN users u on  u.uid = sav.uid 
			 where 1=1 AND pav.qid = '".$question_id."' AND  sav.qid = '".$question_id."'
			 order by  u.uid";*/

   $query = "SELECT pav.uid, sav.uid
			 from suggest_answer_vote sav
			 INNER JOIN possible_answer_vote pav on sav.qid=pav.qid
			 where 1=1 AND pav.qid = '".$question_id."' AND  sav.qid = '".$question_id."'
			 order by  pav.uid";

   $userids = ExecuteQuery($query, "select");
   $Ids= array();
   foreach($userids as $userid){
	 $Ids[]= $userid ['uid'];

   }
   $separated = implode(",", $Ids);
   $separated='( '. $separated.')';
   $query = "SELECT bt.name as badgename, pb.uid, pb.badge_type_id 	,u.name
			from profile_badges pb
			INNER JOIN users u on pb.uid=u.uid
			LEFT JOIN badge_types bt on  bt.id = pb.badge_type_id
			WHERE 1=1 AND u.uid  IN".$separated;
   $profileBadges = ExecuteQuery($query, "select");
   return $profileBadges;


	}