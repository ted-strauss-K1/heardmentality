<?php
function qlite_perm() {
    
    return array('QLite', 'Report', 'Report Content', 'Ajax Content');

} // function newmodule_perm
function qlite_menu() {
    
    $item['qmini'] = array('title'=>'Question Lite', 'page callback'=>'qlitemini', 'access arguments'=>array('QLite'), 'type'=>MENU_CALLBACK, 'file'=>'qlite.pages.inc', );
    
    $item['qmini/report'] = array('title'=>'Question Lite', 'page callback'=>'qlite_report', 'type'=>MENU_CALLBACK, 'access arguments'=>array('Report'), 'file'=>'qlite.pages.inc', );
    $item['qmini/repcontent'] = array('title'=>'Question Lite', 'page callback'=>'report_content', 'type'=>MENU_CALLBACK, 'access arguments'=>array('Report Content'), 'file'=>'qlite.pages.inc', );
    $item['qmini/ajax'] = array('title'=>'Question Lite', 'page callback'=>'load_ajax', 'type'=>MENU_CALLBACK, 'access arguments'=>array('Ajax Content'), 'file'=>'qlite.pages.inc', );
    
    return $item;


}

//      $voutput .= '	  <div>
//              <h2>' . rtrim($oListquest->question, "?") . '? </h2>
//            </div>          <div class="quesin">
//              <div class="quesinner">
//                <div class="quesinnerr">
//<form id="answer_frm" name="answer_frm" method="post" action="' . $gSitePath . 'qlite/save"  >
//		 <input type="hidden" name="txt_act" id="txt_act" value=""/>
//	 <input type="hidden" name="mid" value="' . $qid . '"/>
//		<!--<div class=""><div class="lft_view"> <h4 class="cmt_name"><a></a></h4>-->
//
//		<!--<div>' . $shortdesc . ' ' . $linkj . '--><div>';
   // a{ text-decoration:none; color:#CC6600; font: normal Georgia, "Times New Roman", Times, serif;outline:none;}

function top_list() {
    drupal_add_js(drupal_get_path('module', 'qlite').'/scripts/qmini.js');
    $output = '';
    
    $query = "SELECT * from {category} where parent_id='0' ORDER BY cat_name ASC";
    $list = ExecuteQuery($query, "select");
    $output .= '  <p>COMMUNITY DISCUSSION</p>
            <div><select id="tcat" onchange="get_toplist(this.value,1)"><option value="" >Select</option>';
    foreach ($list as $cat) {
        
        $output .= '    
          <option value='.$cat['cat_id'].'> '.$cat['cat_name'].' </option> ';
    }
    
    $output .= '</select> &nbsp;  <span id="res_scat"><select name="" disabled="disabled">
                <option>selecct a sub-category</option>
              </select> </span></div> </div>  <div class="inner"><div id="res_top">';
    
    $output .= get_top_list();
    
    $output .= get_hot_list();
    
    $output .= get_local_list();
    
    $output .= get_top_pundits();
    
    echo "</div>";

    
    return $output;


}

  ////vijay filter
function get_top_pundits() {

    global $gSitePath,$user,$gDocPath,$base_root;
    $output = '';
   $cat_id = $_REQUEST['cid'];

    $output .= '
     <div class="commutop-profile" align="center">PUNDITS</div>
      <div class="hm-cen-pun">';
//   $output .= '<div class="pun">
//           <ul>
//           <li><img src="images/pu-1.jpg" alt="img" /></li>
//           <li><img src="images/pu-2.jpg" alt="img" width="60" height="54" /></li>
//           <li><img src="images/pu-3.jpg" alt="img" /></li>
//           <li><img src="images/pu-4.jpg" alt="img" /></li>
//           <li><img src="images/pu-5.jpg" alt="img" /></li>
//           </ul>
//           </div><br />
//           </div>
//           ';
   $output .= '<div class="pun">
           <ul>';
    if($cat_id!='')
    {
    $query = "select * from {follower} where cat_id='".$cat_id."' limit 0,4";
   
    $list = ExecuteQuery($query, "select");
     
    foreach ($list as $quest) {

            //$output .= '<li><a title="'. htmlentities(wordwrap($quest['question'], 40,'<br/>')).'" href="'.$gSitePath.$quest['url'].'" style="'.drupal_link_color($user->uid,$quest['qid']).'">'.htmlentities(myTruncate($quest['question'], '40', '', '..')).'</a></li>';

         $user_qry = "select * from users where uid='".$quest['uid']."'";
        $db_query =  db_query($user_qry);
         $oListquest = db_fetch_object($db_query);
         //$output .= $oListquest->name;
         $prof_qry = "select * from user_profile where uid='".$oListquest->uid."'";
         $prof_fet = db_query($prof_qry);
           $prof_exe = db_fetch_object($prof_fet);
           if($prof_exe->image=='')
           {
               $image = "noimage.jpg";
           }
           else
           {
                $image = $prof_exe->image;
           }
          $output .= '<li><img src="'.$gSitePath.'sites/all/modules/profile/snap/"'.$image.'" alt="img" /></li>';
        }
        
    }
    else
    {


        $query = "select * from {follower} as f join {users} as u on f.uid=u.uid where f.cat_id!='' limit 0,4";
    $list = ExecuteQuery($query, "select");
    foreach ($list as $quest) {

            //$output .= '<li><a title="'. htmlentities(wordwrap($quest['question'], 40,'<br/>')).'" href="'.$gSitePath.$quest['url'].'" style="'.drupal_link_color($user->uid,$quest['qid']).'">'.htmlentities(myTruncate($quest['question'], '40', '', '..')).'</a></li>';

         $user_qry = "select * from users where uid='".$quest['uid']."'";
        $db_query =  db_query($user_qry);
         $oListquest = db_fetch_object($db_query);
       //  $output .= $oListquest->name;
         $prof_qry = "select * from user_profile where uid='".$oListquest->uid."'";
         $prof_fet = db_query($prof_qry);
           $prof_exe = db_fetch_object($prof_fet);
           //$prof_exe->image;
           if($prof_exe->image=='')
           {
               $image = "noimage.jpg";
           }
           else
           {
                $image = $prof_exe->image;
           }
        $output .= '<li><img src="'.$gSitePath.'sites/all/modules/profile/snap/"'.$image.'" alt="img" /></li>';
        }
        
    }
    $output .= '</ul>
           </div>';
    $output .= '</div>';

//    $cond = '';
//
//
//    $cond = load_condition();
////$style = "color:red";
//
// // echo  $query = "SELECT * from {question} as q join {user_profile} as u on u.uid=q.uid  where q.status='1' $cond order by q.active_rate  DESC LIMIT 0,10";
//
//    $query = "SELECT * from {question} as q join {user_profile} as u on u.uid=q.uid join question_cat as qcat on qcat.qid=q.qid where q.status='1' $cond group by qcat.qid order by q.active_rate  DESC LIMIT 0,10";
//
//    $list = ExecuteQuery($query, "select");
//    $output .= '<div>
//              <h3><strong>Top pundits</strong></h3><div class="innerbox" ><ul class="menu">';
//    if (! empty($list)) {
//        foreach ($list as $quest) {
//
//            $output .=  '<li><a title="'. htmlentities(wordwrap($quest['question'], 40,'<br/>')).'" href="'.$gSitePath.$quest['url'].'" style="'.drupal_link_color($user->uid,$quest['qid']).'">'.htmlentities(myTruncate($quest['question'], '40', '', '..')).'</a></li>';
//
//
//        }
//    } else {
//
//        $output .= '<div><b>No Top List Found</b></div>';
//
//    }
//    $output .= '</ul></div> </div><div class="clr"></div>';
    
    return $output;
}

function get_top_list() {
  
    global $gSitePath,$user,$gDocPath,$base_root;
    $output = '';
    $cond = '';

   
    $cond = load_condition();
//$style = "color:red";
    
 // echo  $query = "SELECT * from {question} as q join {user_profile} as u on u.uid=q.uid  where q.status='1' $cond order by q.active_rate  DESC LIMIT 0,10";

    $query = "SELECT * from {question} as q join {user_profile} as u on u.uid=q.uid join question_cat as qcat on qcat.qid=q.qid where q.status='1' $cond group by qcat.qid order by q.active_rate  DESC LIMIT 0,10";
    
    $list = ExecuteQuery($query, "select");
    $output .= '<div>
              <h3><strong>Top questions</strong></h3><div class="innerbox" ><ul class="menu">';
    if (! empty($list)) {
        foreach ($list as $quest) {
            
            $output .=  '<li><a title="'. htmlentities(wordwrap($quest['question'], 40,'<br/>')).'" href="'.$gSitePath.$quest['url'].'" style="'.drupal_link_color($user->uid,$quest['qid']).'">'.htmlentities(myTruncate($quest['question'], '40', '', '..')).'</a></li>';

        
        }
    } else {
        
        $output .= '<div><b>No Top List Found</b></div>';
    
    }
    $output .= '</ul></div> </div><div class="clr"></div>';
    return $output;
}

function get_hot_list() {
    
    global $gSitePath,$user,$gDocPath,$base_root;
    $output = '';
    $cond = '';

    
    $cond = load_condition();
    
    $m = date("m");
    $de = date("d");
    $y = date("Y");
    $date = date('Y-m-d', mktime(0, 0, 0, $m, ($de - 7), $y));


  $query = "SELECT * from {question} as q join {user_profile} as u on u.uid=q.uid join question_cat as qcat on qcat.qid=q.qid where q.status='1' AND date(q.date_added) >= '$date' $cond group by qcat.qid order by q.active_rate  DESC LIMIT 0,10 ";


//  $query = "SELECT * from {question} as q join {user_profile} as u on u.uid=q.uid   where q.status='1' AND date(q.date_added) >= '$date' $cond order by q.active_rate  DESC LIMIT 0,10 ";
    $list = ExecuteQuery($query, "select");
    $output .= '<div>
              <h3><strong>Hot questions</strong></h3><div class="innerbox" ><ul class="menu">';
    if (! empty($list)) {
        foreach ($list as $quest) {
            
            $output .= '<li><a title="'. htmlentities(wordwrap($quest['question'], 40,'<br/>')).'" href="'.$gSitePath.$quest['url'].'" style="'.drupal_link_color($user->uid,$quest['qid']).'">'.htmlentities(myTruncate($quest['question'], '40', '', '..')).'</a></li>';

        
        }
    } else {
        
        $output .= '<div><b>No Hot List Found</b></div>';
    
    }
      $output .= '</ul></div> </div><div class="clr"></div>';
    return $output;


}

function get_local_list() {
    global $gSitePath,$user,$gDocPath,$base_root;
    $output = '';
    $cond = '';

    
    $cond = load_condition();
    
$country=my_country();
if(!empty($country)){
    if(!empty($country['cn'])){
       $query = array('query'=>$country['cn'],'maxRows'=>'1','featureclass'=>'S');
                $result = geonames_query('search', $query);
                $cc=$result->results[0]['countrycode'];
$cond.="AND q.country='".trim($cc)."'";
    }
if(!empty($country['state'])){

   $cond.="OR q.state='".trim($country['state'])."'";
}
if(!empty($country['city'])){

   $cond.="OR q.city='".trim($country['city'])."'";
}
}
// $homepage = file_get_contents('http://api.hostip.info/country.php');
  //  echo get_real_ip_addr();

 $query = "SELECT * from {question} as q join {user_profile} as u on u.uid=q.uid join question_cat as qcat on qcat.qid=q.qid where q.status='1'  $cond group by qcat.qid order by q.active_rate  ASC LIMIT 0,10 ";
    
   //$query = "SELECT * from {question} as q join {user_profile} as u on u.uid=q.uid  where q.status='1'  $cond order by q.active_rate  ASC LIMIT 0,10 ";
    $list = ExecuteQuery($query, "select");
    $output .= '<div>
              <h3><strong>Local questions</strong></h3>
              <div class="innerbox"><ul class="menu">';
    
    if (! empty($list)) {
        foreach ($list as $quest) {
            
            $output .=  '<li><a title="'.  htmlentities(wordwrap($quest['question'], 40,'<br/>')).'" href="'.$gSitePath.$quest['url'].'" style="'.drupal_link_color($user->uid,$quest['qid']).'">'.htmlentities(myTruncate($quest['question'], '40', '', '..')).'</a></li>';
        
        }
    } else {
        
        $output .= '<div><b>No Local List Found</b></div>';
    
    }
	   $output .= '</ul></div> </div><div class="clr"></div>';
    return $output;


}

function my_country(){
 global $gSitePath,$user,$gDocPath,$base_root,$base_path;
         $url= 'http://ipinfodb.com/ip_query_country.php?ip='.get_real_ip_addr();
     $curl = curl_init();
     $list=array();
// Setup the curl settings
curl_setopt($curl, CURLOPT_URL, $url);
curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 0);

// grab the XML file
$raw_xml = curl_exec($curl);

curl_close($curl);

// Setup the xml object
$xml =(array)simplexml_load_string( $raw_xml );
//print_r($xml);
if(!empty($user)){

  $details=load_user($user->uid);

}
$list['cc']=(!empty($details->country))?$details->country:$xml['CountryCode'];
$list['cn']=(!empty($details->country))?$details->country:$xml['CountryName'];
$list['state']=(!empty($details->state))?$details->state:$xml['RegionName'];
$list['city']=(!empty($details->city))?$details->city:$xml['City'];
/*
 *
 * <Ip>74.125.45.100</Ip>
    <Status>OK</Status>
    <CountryCode>US</CountryCode>
    <CountryName>United States</CountryName>
    <RegionCode>06</RegionCode>
    <RegionName>California</RegionName>
    <City>Mountain View</City>
    <ZipPostalCode>94043</ZipPostalCode>
    <Latitude>37.4192</Latitude>
    <Longitude>-122.057</Longitude>
    <Timezone>0</Timezone>
    <Gmtoffset>0</Gmtoffset>
    <Dstoffset>0</Dstoffset> 
 */

return $list;
}


function get_real_ip_addr()
{
if(!empty($_SERVER['HTTP_CLIENT_IP']))   //check ip from share internet
{
$ip=$_SERVER['HTTP_CLIENT_IP'];
}
else if(!empty($_SERVER['HTTP_X_FORWARDED_FOR']))   //to check ip is pass from proxy
{
$ip=$_SERVER['HTTP_X_FORWARDED_FOR'];
}
else
{
$ip=$_SERVER['REMOTE_ADDR'];
}

return $ip;
}
function cal_active_rate() {

    
    global $gSitePath,$user,$gDocPath,$base_root;
    $j = 5;
    $k = 5;
    $l = 5;
    $fcnt = array();
    $gvote = array();
    $query = "SELECT * from {question}";
    $list = ExecuteQuery($query, "select");
    
    foreach ($list as $quest) {

        
        $query1 = "select IFNULL((select count(*) from {possible_answer_vote} as pa where q.qid=pa.qid group by pa.qid ),0) as pvote,(select count(*) from {suggest_answer_vote} as sa where q.qid=sa.qid group by sa.qid ) as svote from {question} as q where q.qid='".$quest['qid']."'";
        $gvote = ExecuteQuery($query1, "select");
        $m1 = $gvote[0]['pvote'];
        $m2 = $gvote[0]['svote'];
        
    $tvote = $m1 + $m2;
        
        $query2 = "select IFNULL((select count(*) from {forum_wavelets} as w where w.wid=f.fid group by w.wid),0) as wcnt,IFNULL((select count(*) from {resource} where qid='".$quest['qid']."' group by qid),0) as rcnt from {forum_wave} as f where f.qid_rid='".$quest['qid']."' ";
       echo $fcnt = db_fetch_object(db_query($query2));
        
        //The value �active� will be calculated as follows (j,k,l are constant values that will be hard-coded):
        //Active =  (j * #_of_votes_for_question) + (k * #_of_forum_posts) + (l * #_of_posted_resources)
        if (! empty($fcnt)) {
            $cntr = $fcnt->wcnt;
            $wcnt = $fcnt->rcnt;
            $active = (($j * $tvote) + ($k * $cntr) + ($l * $wcnt));
            db_query("update {question} set active_rate='".$active."' where qid='".$quest['qid']."'");
        }

    
    }

}
function load_condition() {
    $cond = '';
    //print_r($_REQUEST);
    if (isset($_REQUEST['cid']) && isset($_REQUEST['action'])) {
        extract($_REQUEST);
        if (! empty($cid)) {
            
            //$cond .= " AND q.cid='$cid'";
            $cond .= " AND qcat.cat='$cid'";
           //$cond .= " AND qcat.cat IN()";
        }
        
        if (! empty($scid)) {
            
            //$cond .= " AND q.scid='$scid'";
           $cond .= " AND qcat.scat='$scid'";
        }
    
    }
    
    return $cond;

}