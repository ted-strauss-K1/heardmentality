<?php

/**
 * Implementation of hook_perm().
 */
function gurupoints_perm() {
  return array('Add Points', 'list Points', 'Home List', 'Add Coins', 'List Coins', 'List Pundits');
}

/**
 * Implementation of hook_menu().
 */
function gurupoints_menu() {

  $search_result['admin/addpoints'] = array('title' => ' Add Points', 'page callback' => 'add_points', 'access arguments' => array('Add Points'), 'type' => MENU_SUGGESTED_ITEM, 'file' => 'gurupoints.pages.inc',);

  $search_result['admin/point/save'] = array('title' => ' Add Points', 'page callback' => 'save_points', 'access arguments' => array('Add Points'), 'type' => MENU_SUGGESTED_ITEM, 'file' => 'gurupoints.pages.inc',);

  $search_result['admin/userpoints'] = array('title' => 'User Points', 'page callback' => 'user_points', 'access arguments' => array('list Points'), 'type' => MENU_SUGGESTED_ITEM, 'file' => 'gurupoints.pages.inc',);
  $search_result['pundit/ajax'] = array('title' => 'Ajax Listing', 'page callback' => 'ajax_pundits', 'access arguments' => array('Home List'), 'type' => MENU_SUGGESTED_ITEM, 'file' => 'gurupoints.pages.inc',);
  $search_result['admin/addcoins'] = array(
    'title' => ' Add Coins',
    'page callback' => 'add_coins',
    'access arguments' => array('Add Coins'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'gurupoints.pages.inc',);
  $search_result['admin/coin/save'] = array(
    'title' => ' Add Coins',
    'page callback' => 'save_coins',
    'access arguments' => array('Add Coins'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'gurupoints.pages.inc',
  );
  $search_result['admin/user/coins'] = array('title' => 'User Coin List', 'page callback' => 'user_coins', 'access arguments' => array('List Coins'), 'type' => MENU_SUGGESTED_ITEM, 'file' => 'gurupoints.pages.inc',);
  $search_result['pundits'] = array('title' => 'Pundit Lists', 'page callback' => 'pundit_lists', 'access callback' => TRUE);

  return $search_result;
}

function increasepoints($ptype, $qid, $idm) {
  global $gSitePath, $user, $gDocPath, $base_root, $base_path;


  $queryuser = "SELECT * FROM user_profile where uid=$user->uid ";
  $query_result = db_query($queryuser);
  $userresult = db_fetch_object($query_result);

  if ($idm == '0') {
    $numpt = db_result(db_query("SELECT COUNT(*) from {tbl_user_points} where point_id='$ptype' and qid='$qid' and uid='$user->uid'"));
    $query_pt = "SELECT * FROM tbl_points where id='$ptype' ";
    $query_ptinfo = db_query($query_pt);
    $fetuserpts = db_fetch_object($query_ptinfo);

    if ($numpt == 0) {
      $insert_pts = "insert into tbl_user_points (uid,qid,point_id,points,vote_point_id) values($user->uid,$qid,$ptype,$fetuserpts->points,$idm)";
      $qus = db_query($insert_pts);
      $totpts = $userresult->points + $fetuserpts->points;
      $uppts = "update user_profile set points=$totpts where uid=$user->uid";
      $quspts = db_query($uppts);
    }
  }
  else {
    //echo $idm;


    $cntr = db_result(db_query("SELECT COUNT(*) from {tbl_user_points} where vote_point_id='$idm' and qid='$qid' and uid='$user->uid'"));

    $query_ptm = "select * from tbl_vote_gurupoints where id='" . $idm . "'";
    $query_ptinfo = db_query($query_ptm);
    $fetuserpts = db_fetch_object($query_ptinfo);


    if ($cntr == 0) {
      $insert_pts = "insert into tbl_user_points (uid,qid,point_id,points,vote_point_id) values($user->uid,$qid,$ptype,$fetuserpts->points,$idm)";
      $qus = db_query($insert_pts);
      $totpts = $userresult->points + $fetuserpts->points;
      $uppts = "update user_profile set points=$totpts where uid=$user->uid";
      $quspts = db_query($uppts);
    }
  }
}

/*
  function ajax_pundits(){
  global $gSitePath,$user,$gDocPath,$base_root,$base_path;
  $output =array();
  extract($_REQUEST);
  $first=(!empty($first))?(($first==1)?'0':$first):'0';
  $last=(!empty($last))?$last-1:'4';
  $query = "select * from {gurulist} limit $first,4";
  $list = ExecuteQuery($query, "select");
  $total=db_result(db_query('select count(*) from {gurulist}'));
  $page_incr = 0;
  $pager = 1;
  //$output.='<total>'.$total.'</total>';
  $i = 0;
  foreach ($list as $quest) {

  $udetails=load_user($quest['uid']);
  $bubble = load_bubble($udetails->uid);

  //  $output.= '<li><a  href="'.$gSitePath.'/profile/'.$udetails->name.'">'.UserPicture($quest['uid']).'</a></li>';
  $output[$i]['total']=$total;
  $output[$i]['title']=$udetails->real_name;
  $output[$i]['url']=$gSitePath.'/profile/'.$udetails->name;
  $output[$i]['image']=UserPicture($quest['uid']);
  // $output[$i]['rel']=$bubble;
  $i++;
  }


  echo json_encode($output);
  }
 */

function create_guru_view() {
  global $gSitePath, $user, $gDocPath, $base_root, $base_path;
  db_query("DROP VIEW IF EXISTS {gurulist}");
  $cond = '';
  $wher = '';
  // $view = "CREATE VIEW {gurulist} (SELECT (select ifnull(sum(points),0) as qpt from {tbl_user_points} where uid=a.uid group by uid) as tpoints,a.uid, a.name,u.real_name, a.mail, SUM(b.points) AS point FROM users as a join {user_profile} as u on u.uid=a.uid  LEFT OUTER JOIN tbl_user_points as b ON a.uid = b.uid GROUP BY uid) ";
  if (!empty($_REQUEST['cid'])) {
    extract($_REQUEST);


    $cond = " join {follower} as f on f.uid=u.uid";
    if (!empty($scid))
      $wher = " AND (f.cat_id='" . $cid . "' OR f.cat_id='" . $scid . "') group by u.uid";
    else
      $wher = " AND f.cat_id='" . $cid . "' group by u.uid";
  }

  $view = "CREATE VIEW gurulist as (SELECT (select ifnull(sum(points),0) as qpt from {tbl_user_points} where uid=u.uid group by uid) as tpoints,a.uid as uid, a.name,u.real_name FROM {users} as a join {user_profile} as u on u.uid=a.uid $cond where a.status='1' $wher)";
  db_query($view);
}

function ajax_pundits() {
  global $gSitePath, $user, $gDocPath, $base_root, $base_path;
  $cond = '';
  extract($_REQUEST);
  $first = (!empty($first)) ? (($first == 1) ? '0' : $first) : '0';
  $last = (!empty($last)) ? $last - 1 : '4';
  $catid = (!empty($scid)) ? $scid : $cid;
  if (!empty($catid))
    $cond = " AND cat_id='$catid' ";

  //   print_r($_REQUEST);
  //  create_guru_view();
  if (!empty($cond))
    $user_pt = "select * from {pundit_section} where score !='NULL' $cond  order by score desc limit $first,4  ";
  else
    $user_pt = "select * from {pundit_section} where score !='NULL'  group by uid order by score desc limit $first,4  ";
  $list = ExecuteQuery($user_pt, "select");



  if (count($list) > 0) {

    $output.= '<ul>';
    foreach ($list as $quest) {

      $udetails = load_user($quest['uid']);
      $bubble = load_bubble($udetails->uid);

      $output.= '<li><a rel=\'' . $bubble . '\'  href="' . $gSitePath . '/profile/' . $udetails->name . '">' . UserPicture($quest['uid']) . '</a></li>';
    }
    $output.= '</ul>';
  }
  else {
    $output.= '<center><small>' . t('No Pundits Found') . ' </small></center>';
  }


  echo $output;
}

function insertpoints($action = '', $nodeid = '') {
  global $gSitePath, $user, $gDocPath, $base_root, $base_path;

  if (!empty($nodeid) && !empty($action)) {
    $set = $action . "='1'";
    //points
    $query_pt = "SELECT * FROM tbl_points where id='3' ";
    $query_ptinfo = db_query($query_pt);
    $fetuserpts = db_fetch_object($query_ptinfo);
    $queryuser = "SELECT count(*) FROM {tbl_user_points}  where uid='$user->uid' AND $set AND nodeid='$nodeid' ";
    $rcnt = db_result(db_query($queryuser));

    if ($rcnt == 0) {

      db_query("insert into {tbl_user_points} set point_id='$fetuserpts->id',points='$fetuserpts->points',uid='$user->uid',$set,nodeid='$nodeid'");
      /* New SET NOTIFY LOG */
      $variable = array('points' => $fetuserpts->points, 'uid' => $user->uid, 'nid' => $nodeid);
      set_notify_log($user->uid, $nodeid, 'add_points', $variable);
      /* New SET NOTIFY LOG */
    }
  }
}

function guru_points($switch = '', $uid = '') {

  global $gSitePath, $user, $gDocPath, $base_root, $base_path;
  switch ($switch) {
    case 'user':

      $view = "SELECT (select ifnull(sum(points),0) as qpt from {tbl_user_points} where uid=u.uid group by uid) as tpoints FROM {users} as a join {user_profile} as u on u.uid='$uid' where a.status='1'";
      $outputppt = db_result(db_query($view));

      break;
    default:


      create_guru_view();

      $user_pt = "select * from {gurulist} where tpoints !='NULL' order by tpoints desc ";
      $point_list = ExecuteQuery($user_pt, "select");

      $outputppt = '<table width="60%" border="0" cellspacing="0" cellpadding="0">
   
   
  <tr>
    <td><h2>User</h2></td>
   <td><h2>Total Points</h2></td>
  </tr>';
      for ($p = 0; $p < count($point_list); $p++) {

        $puid = $point_list[$p]['uid'];

        /*
          $qptstd="select (select SUM(points) AS qpt   FROM tbl_user_points where  uid=u.uid and point_id='2' group by uid) as a,
          (select SUM(points) AS qpt   FROM tbl_user_points where  uid=u.uid and point_id='1' group by uid) as b,
          (select SUM(points) AS qpt   FROM tbl_user_points where uid=u.uid and point_id='3' group by uid) as c,
          (select SUM(points) AS qpt   FROM tbl_user_points where  uid=u.uid and point_id='4' group by uid) as d,
          (select SUM(points) AS qpt   FROM tbl_user_points where  uid=u.uid and point_id='5' group by uid) as e,
          (select SUM(points) AS qpt   FROM tbl_user_points where  uid=u.uid and point_id='6' group by uid) as f from {users} as u where u.status='1'  order by uid DESC";

         */


        $sump = $point_list[$p]['tpoints'];
        $tpoint = (!empty($sump)) ? $sump : 0;

        $bubble = load_bubble($puid);
        $outputppt .= ' <tr>
	<td height="40"><a rel=\'' . $bubble . '\' href="' . $gSitePath . 'profile/' . $point_list[$p]['name'] . '">' . $point_list[$p]['real_name'] . '</a></td>
	<td>' . $tpoint . '</td>
  </tr>';
      }
      $outputppt .= '</table>';



      break;
  }
  return $outputppt;
}

function gurupoints_cron() {

  global $gSitePath, $user, $gDocPath, $base_root, $base_path;

  $user_pt = "SELECT uid FROM {users} where status='1'  ";

  $point_list = ExecuteQuery($user_pt, "select");

  foreach ($point_list as $list) {
    db_query("DROP VIEW IF EXISTS {temp_scores}");
    //  $sel="CREATE VIEW {temp_scores} AS (select sum(score) as score,qid,1 as type,did as nid  from {debate} where uid='".$list['uid']."' group by did) union (select sum(dr.score)  as score,d.qid,2 as type,d.did as nid from {debate_reply} as dr join {debate} as d on d.did=dr.did where dr.uid='".$list['uid']."'  group by dr.rid) ";

    $sel = "CREATE VIEW {temp_scores} AS (select sum(c.field_score_value) as score,c.field_ref_qid_nid AS qid,1 as type,c.nid as nid  from {content_type_forum} c JOIN {node} n ON n.nid = c.nid where n.uid='" . $list['uid'] . "' AND c.field_type_value = '2' group by c.nid) union (select sum(cm.score) as score,cf.field_ref_qid_nid as qid,2 as type,cf.nid as nid from {comments} as cm join {content_type_forum} as cf on cf.nid=cm.nid JOIN {node} AS n ON cm.nid = n.nid where cm.uid='" . $list['uid'] . "' AND cf.field_type_value = '2'  group by cm.cid) ";

    $point_list = db_query($sel);

    $query = "select *,sum(score) as tscore from {temp_scores} group by qid";
    $tscore = ExecuteQuery($query, "select");
    foreach ($tscore as $final) {

      if ($final['tscore'] != 0) {
        if (db_result(db_query("select count(*) from  {pundit_scores} where qid='" . $final['qid'] . "'  and uid='" . $list['uid'] . "'")))
          db_query("update {pundit_scores} set score='" . $final['tscore'] . "' where qid='" . $final['qid'] . "' AND uid='" . $list['uid'] . "'");
        else
          db_query("insert into {pundit_scores} set qid='" . $final['qid'] . "',uid='" . $list['uid'] . "',score='" . $final['tscore'] . "' ");
      }
    }
    update_ranking($list['uid']);
  }
}

function update_ranking($uid = '') {
  $total_points = db_result(db_query("SELECT SUM(points) as total_points FROM {tbl_user_points} WHERE uid = '$uid'"));
  $sql = "SELECT rank_id, ranking, points FROM tbl_ranking";
  $ranking[] = ExecuteQuery($sql, 'select');
  // Citizen 200
  if ($total_points < 200) {
    $rank_id = '1';
  }
  // Active Citizen 200 499
  if ($total_points >= 200 && $total_points < 499) {
    $rank_id = '2';
  }
  // Judge 500 999
  if ($total_points >= 500 && $total_points < 999) {
    $rank_id = '3';
  }
  // Senator 1000
  if ($total_points >= 1000) {
    $rank_id = '4';
  }
  db_query("UPDATE {users} SET rank_id = '$rank_id' WHERE uid = '$uid'");
}

function initial_coins() {
  $coins = db_result(db_query("SELECT coin_count FROM {tbl_coins} WHERE key_name = 'initial'"));
  return $coins;
}

// phase VI

function pundit_lists() {
  $output .= '<div class="pundit-wrapper">';
  $output .= '<div class="left-area">
                <p>' . t('Pundits are users who descriptive text tk tk in a
certain subject descriptive text tk. Filter the pundits
by expertise below.') . '</p><br />
                ' . drupal_get_form('filter_pundits') . '
                </div>';
  $output .= '<div class="right-area">
                <h3>' . t('PUNDITS') . '</h3>
                ' . pundits_load() . '
                </div><div class="clr"></div>';
  $output .= '</div>';
  return $output;
}

// pundit lists
function pundits_load() {
  global $gSitePath, $user, $gDocPath, $base_root, $base_path;
  $cond = '';
  drupal_add_css(drupal_get_path('module', 'gurupoints') . '/scripts/pundits.css');


  $cid = arg(1) != 0 ? arg(1) : '';
  $scid = arg(2) != 0 ? arg(2) : '';
  $sscid = arg(3) != 0 ? arg(3) : '';

  $catid = (!empty($scid)) ? $scid : $cid;
  if (!empty($catid))
    $cond = " AND cat_id='$catid' ";
  if (!empty($cond))
    $user_pt = "select * from {pundit_section} where score !='NULL' $cond  order by score desc";
  else
    $user_pt = "select * from {pundit_section} where score !='NULL'  group by uid order by score desc";
  $list = ExecuteQuery($user_pt, "select");
  if (count($list) > 0) {
    foreach ($list as $quest) {
      $udetails = load_user($quest['uid']);
      $items = load_pundit_details($quest['uid']);
      //$output.= '<a rel=\'' . $bubble . '\'  href="' . $gSitePath . '/profile/' . $udetails->name . '">' . UserPicture($quest['uid']) . '</a>';
      $output .= theme('single_pundit', $items);
    }
  }
  else {
    $output.= '<center><small>' . t('No Pundits Found') . ' </small></center>';
  }
  return $output;
}

// load pundit details
function load_pundit_details($uid) {
  $pund = load_user($uid);
  $pundits = array();

  $pundits['name'] = $pund->name;
  $pundits['real_name'] = $pund->real_name;
  $pundits['first_name'] = $pund->first_name;
  $pundits['last_name'] = $pund->last_name;
  $pundits['member_since'] = date("M d, Y", $pund->created);

  $total_votes = db_result(db_query("SELECT COUNT(*) FROM {poll_votes} WHERE uid = %d", $uid));
  $pundits['total_votes'] = $total_votes;
  $total_comments = db_result(db_query("SELECT COUNT(*) FROM {comments} WHERE uid = %d AND (nid = tcid OR tcid = 0)", $uid));
  $pundits['total_comments'] = $total_comments;
  $total_references = db_result(db_query("SELECT COUNT(*) FROM {node} n JOIN {content_type_forum} f ON n.nid = f.nid WHERE n.type='%s' AND n.uid = %d AND f.field_type_value = %d", 'forum', $uid, 2));
  $pundits['total_references'] = $total_references;
  $total_followers = db_result(db_query("SELECT COUNT(*) FROM {user_relationships} WHERE requestee_id = %d", $uid));
  $pundits['total_followers'] = $total_followers;

  $sql = db_query("SELECT * FROM {user_profile} WHERE uid = %d", $uid);
  $profiles = db_fetch_object($sql);
  foreach ($profiles as $profile) {
    $pundits['city'] = $pund->city;
    $pundits['state'] = $pund->state;
    $pundits['country'] = $pund->country;
    $pundits['religion'] = $pund->religion;
    $pundits['ethnic'] = $pund->ethnic;
    $pundits['gender'] = $pund->gender == 1 ? 'Male' : 'Female';
    $pundits['sorient'] = $pund->sorient;
    $pundits['edu'] = $pund->edu;

    // age
    $dob = $pund->dob;
    $pundits['age'] = date("Y") - $dob;
    $pundits['pundit_id'] = $uid;
  }
  return $pundits;
  //echo '<pre>';print_r($pundits);    exit;
}

function gurupoints_theme($existing, $type, $theme, $path) {
  return array(
    'single_pundit' => array(
      'arguments' => array('punditItems' => array()),
    ),
  );
}

function theme_single_pundit($punditItems) {
  global $gSitePath, $theme;

  $output = '';
  $output .= '<div class="pundit-area">';
  $output .= '<div class="top-p">';
  $output .= UserPicture($punditItems['pundit_id']);
  $output .= l($punditItems['name'], 'profile/' . $punditItems['name']) . '<br />';
  $output .= t('Member Since') . '<br />' . $punditItems['member_since'];
  $output .= '</div><div class="clr"></div>';
  $output .= '<div class="bottom">
                    <div><span><b>' . t('votes') . ':</b>' . $punditItems['total_votes'] . '</span><span><b>' . t('Comments') . ':</b>' . $punditItems['total_comments'] . '</span></div>
                    <div><span><b>' . t('References') . ':</b>' . $punditItems['total_references'] . '</span><span><b>' . t('Followers') . ':</b>' . $punditItems['total_followers'] . '</span></div>
                    <div class="det">' . t('Real Name') . ':&nbsp;' . $punditItems['real_name'] . '<br />
                    ' . t('Location') . ':&nbsp;' . $punditItems['state'] . ', ' . $punditItems['country'] . '<br />
                    ' . t('Age') . ':&nbsp;' . $punditItems['age'] . '<br />
                    ' . t('Gender') . ':&nbsp;' . $punditItems['gender'] . '<br />
                    ' . t('Religion') . ':&nbsp;' . $punditItems['religion'] . '<br />
                    ' . t('Ethnicity') . ':&nbsp;' . $punditItems['ethnic'] . '<br />
                    ' . t('Sexual Orientation') . ':&nbsp;' . $punditItems['sorient'] . '<br />
                    ' . t('Education') . ':&nbsp;' . $punditItems['edu'] . '<br />
                    </div>
                </div>';
  $output .= '</div>';
  return $output;
}

// filter pundits

function filter_pundits($form) {
  $vid = db_result(db_query("SELECT vid FROM {vocabulary} WHERE name = '%s' AND module = '%s'", 'Sections', 'taxonomy'));
  $client_select = db_query("SELECT t.tid AS cat_id, t.name AS cat_name FROM term_data t RIGHT JOIN term_hierarchy h ON t.tid = h.tid where h.parent='0' AND t.vid = '$vid'");
  $options[''] = 'SUBJECT';
  while ($list = db_fetch_object($client_select)) {
    //$cnt = taxonomy_term_count_nodes($list->cat_id);

    $options[$list->cat_id] = t(stripslashes($list->cat_name));
  }

  $subject = check_plain(arg(1));
  $area = check_plain(arg(2));
  $detail = check_plain(arg(3));

  $form['title'] = array('#type' => 'markup', '#value' => '<b>' . t('FILTER PUNDITS') . '</b>', '#suffix' => '<div class="clr"></div>');
  $form['subject'] = array('#type' => 'select',
    '#options' => $options,
    '#prefix' => '<div style="float:left;">',
    '#suffix' => '</div>',
    '#ahah' => array('wrapper' => 'sub-cat-wrapper',
      'event' => 'change',
      'path' => 'issue/ahah/category/scat',
      'effect' => 'fade',
      'method' => 'replace'),
    '#attributes' => array('class' => 'selectbox-sm'),
    '#default_value' => $subject,
    '#id' => 'subject');
  // get first level category
  $form['defarea'] = array('#type' => 'hidden', '#default_value' => $area);
  $form['defdetail'] = array('#type' => 'hidden', '#default_value' => $detail);
  $form['sub_categories'] = array('#type' => 'markup',
    '#value' => '<div id="sub-cat-wrapper" style="float:left"></div>',
  );

  $form['sub_sub_categories'] = array('#type' => 'markup',
    '#value' => '<div id="sub-sub-cat-wrapper" style="float:left">
                                                </div>',
    '#suffix' => '<br /><div class="clr"></div>');
  $form['filter'] = array('#type' => 'submit', '#value' => t('SUBMIT'));

  return $form;
}

function filter_pundits_submit($form, &$form_state) {
  //echo '<pre>'; print_r($form); exit;
  $cid = $form['#post']['subject'] != '' ? $form['#post']['subject'] : 0;
  $scid = $form['#post']['area'] != '' ? $form['#post']['area'] : 0;
  $sscid = $form['#post']['detail'] != '' ? $form['#post']['detail'] : 0;
  $path = 'pundits/' . $cid . '/' . $scid . '/' . $sscid;
  drupal_goto($path);
}
