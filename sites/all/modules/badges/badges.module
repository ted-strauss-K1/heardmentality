<?php
/**
 * Implementation of hook_perm().
 */
function badges_perm() {
    return array('Badges list', 'User list');
}


/**
 * Implementation of hook_menu().
 */

function badges_menu() {
    $items['badges'] = array('title'=>' Badges', 'page callback'=>'badges_list', 'access arguments'=>array('Badges list'), 'type'=>MENU_SUGGESTED_ITEM, 'file'=>'badges.pages.inc', );
    $items['badges/user'] = array('title'=>'Users Badges', 'page callback'=>'user_list', 'access arguments'=>array('User list'), 'type'=>MENU_SUGGESTED_ITEM, 'file'=>'badges.pages.inc', );

    
    return $items;
}

function set_badges() {

    
    $query = "select uid from {users} where status='1'";
    $fetch = ExecuteQuery($query, "select");
    
    foreach ($fetch as $list) {
        
        $uid = $list['uid'];
        
        biographer($uid);
        citizen_patrol($uid);
        civic_duty($uid);
        cleanup($uid);
        commentator($uid);
        supporter($uid);
        pundit($uid);
        generalist($uid);
        legendary($uid);
    }


}
// fill profile get the biographer badge
function biographer($uid = '') {
    global $gSitePath,$user,$gDocPath,$base_root;
    $i = 0;
    
    if ( empty($uid)) {
        $uid = $user->uid;
    }

    
    $data = db_fetch_object(db_query('SELECT * FROM {user_profile} WHERE uid=%d LIMIT 1', $uid));
    //print_r($data);
    if (! empty($data->real_name))
        $i++;
    
    if (! empty($data->bio))
        $i++;
    
    if ($data->gender > 0)
        $i++;
    
    if (! empty($data->zip))
        $i++;
    
    if (! empty($data->country))
        $i++;
    
    if (! empty($data->religion))
        $i++;
    
    if (! empty($data->ethnic))
        $i++;
    
    if (! empty($data->slant))
        $i++;
    
    if (! empty($data->facebook))
        $i++;
    
    if (! empty($data->twitter))
        $i++;
    
    if (! empty($data->dob))
        $i++;
    
	$badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='1'"));
    if ($i == 11&&$badgecnt==0) {
        db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 1, $uid);
    }
}


function citizen_patrol($uid = '') {
    global $gSitePath,$user,$gDocPath,$base_root;

    
    if ( empty($uid)) {
        $uid = $user->uid;
    }
    
    $count = db_result(db_query("SELECT COUNT(uid) FROM {question_flags} where uid='$uid'"));
    $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='2'"));
    
    if ($count == 1 && $badgecnt == 0) {
        
        db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)",2, $uid);
    }

}

function civic_duty($uid = '') {
    global $gSitePath,$user,$gDocPath,$base_root;

    
    if ( empty($uid)) {
        $uid = $user->uid;
    }
    
    $count1 = db_result(db_query("SELECT COUNT(*) FROM {possible_answer_vote} where uid='$uid' group by uid"));
    
    $count2 = db_result(db_query("SELECT COUNT(*) FROM {suggest_answer_vote} where uid='$uid' group by uid"));
    $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='3'"));
    $count = $count1 + $count2;
    
    if ($count >= 300 && $badgecnt == 0) {
        
        db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 3, $uid);
    }


}

function cleanup($uid = '') {
    
    global $gSitePath,$user,$gDocPath,$base_root;

    
    if ( empty($uid)) {
        $uid = $user->uid;
    }
    
    $count = db_fetch_object(db_query("SELECT * FROM {answer_withdraw} where uid='$uid' AND status='0' LIMIT 0,1"));

    
    if (! empty($count)) {
        
        db_query("update {answer_withdraw} set status='1' where uid='$uid' AND pid_sid='$count->pid_sid' ");
        db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 4, $uid);
    }


}

function commentator($uid = '') {

    
    global $gSitePath,$user,$gDocPath,$base_root;

    
    if ( empty($uid)) {
        $uid = $user->uid;
    }
    
    $count = db_result(db_query("SELECT COUNT(uid) FROM {forum_wavelets} where uid='$uid'"));
    $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='5'"));
    
    if ($count >= 10 && $badgecnt == 0) {
        
        db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 5, $uid);
    }


}

function critic($uid = '') {


}
function discipline($uid = '', $qid = '') {

    
    global $gSitePath,$user,$gDocPath,$base_root;

    
    if ( empty($uid)) {
        $uid = $user->uid;
    }
    
    $count = db_result(db_query("SELECT COUNT(*) FROM {possible_answer_vote} where qid='$qid'"));

    
    if ($count >= 3) {
        
        db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 7, $uid);
    }


}

function first_edit($uid = '', $qid = '') {
    
    global $gSitePath,$user,$gDocPath,$base_root;
    if ( empty($uid)) {
        $uid = $user->uid;
    }
}

function electorate($uid = '', $qid = '') {
    
    global $gSitePath,$user,$gDocPath,$base_root;
    if ( empty($uid)) {
        $uid = $user->uid;
    }

    
    $count = db_result(db_query("SELECT COUNT(*) FROM {possible_answer_vote} where qid='$qid'"));
    
    if ($count >= 10) {
        
        db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 9, $uid);
    }
}

function enthusiast($uid = '') {
    global $gSitePath,$user,$gDocPath,$base_root;
    if ( empty($uid)) {
        $uid = $user->uid;
    }
    
    $query = "SELECT date(daily_start_date) as sdate,date(now()) as nowdate,date(daily_todays_date) as tdate,date(daily_end_date) as edate  from {user_profile} where uid='$uid'";
    $list = ExecuteQuery($query, "select");

    
    $diff1 = db_result(db_query("SELECT DATEDIFF('".$list[0]['nowdate']."','".$list[0]['tdate']."') as ddiff"));
    
    if ($diff1 == 1) {
        
        $query = "update {user_profile} set daily_todays_date=now() where uid='$uid'";
        db_query($query);
        
        if ($list[0]['nowdate'] == $list[0]['edate']) {
            
            $diff2 = db_result(db_query("SELECT DATEDIFF('".$list[0]['nowdate']."','".$list[0]['edate']."') as ddiff"));
            
            if ($diff2 == 0 || $diff2 == '') {
                
                $diff3 = db_result(db_query("SELECT DATEDIFF('".$list[0]['nowdate']."','".$list[0]['sdate']."') as ddiff"));
                
                //11 Enthusiast Badges
                if ($diff3 >= 30) {
                    
                    db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 11, $uid);
                    $query = "update {user_profile} set daily_start_date=now(),daily_todays_date=now(),daily_end_date=TIMESTAMPADD(DAY,30,NOW()) where uid='$uid'";
                    db_query($query);
                }

            
            }
        }
    
    } else {
        
        // not consecutive so check its today
        
        $diffa = db_result(db_query("SELECT DATEDIFF('".$list[0]['tdate']."','".$list[0]['nowdate']."') as ddiff"));
        
        // if not today then reset the consecutive 30 days
        if ($diffa != 0 || $diffa == '') {
            
            $query = "update {user_profile} set daily_start_date=now(),daily_todays_date=now(),daily_end_date=TIMESTAMPADD(DAY,30,NOW()) where uid='$uid'";
            db_query($query);
        }

    
    }


}


function yearling() {

    
    $selusers = "SELECT * FROM users as a ,user_profile as b where a.status='1' and a.uid=b.uid";
    $listmuser = db_query($selusers);
    while ($userlist = db_fetch_object($listmuser)) {
        //echo "<br>";
        //echo $userlist->points;
        //echo "<br>";
        
        $dtint = date("Y-m-d h:i:s", $userlist->created);
        
        $date1 = $dtint;
        $date2 = date("Y-m-d h:i:s");
        
        $diff = abs(strtotime($date2) - strtotime($date1));
        $months = floor(($diff - $years * 365 * 60 * 60 * 24) / (30 * 60 * 60 * 24));
        //echo "<br>";
        //echo $months;
      //  $b = "12";
         $b = "1";
		//  if ($months >= 12) 
        /////////////////check for month////////////////////////////////
        if ($months >= 1) {
            $mval = $months % $b;
            //echo $mval;

            
            /////////////////check for Points////////////////////////////////
            $count = db_result(db_query("SELECT COUNT(*) FROM {user_badges} where bid='43' and uid='$userlist->uid'"));
            
            if ($count > 0) {
                $cnt = $count + 1;
                $rep = $cnt * 200;
            
            } else {
                $rep = '200';
            }
            //echo $rep;
            if ($rep >= 200) {
                
                if (($mval == 0) && ($rep == $userlist->points)) {
                    //echo "SELECT COUNT(*) FROM {user_badges} where bid='43' and uid='$userlist->uid' and yearly_point='$rep' ";
                    $countret = db_result(db_query("SELECT COUNT(*) FROM {user_badges} where bid='43' and uid='$userlist->uid' and yearly_point='$rep' "));
                    if ($countret == 0) {
                        db_query("INSERT INTO {user_badges} (bid, uid,yearly_point) VALUES (%d, %d,%d)", 43, $userlist->uid, $rep);
                    }
                }
            }

        
        }
    }
}


function Tumbleweed() {
    $selquestion = "select * from question where status='1'";
    $listquestm = db_query($selquestion);
    while ($qklisy = db_fetch_object($listquestm)) {
        //echo $qklisy->qid;
        //echo "<br>";

        
        $datbt = db_query("SELECT DATE_ADD('$qklisy->date_added', INTERVAL 7 DAY)as weekday");
        $dtrange = db_fetch_object($datbt);
        
        $dtrange->weekday;
        
        $dtint = explode(" ", $dtrange->weekday);

        
        ////////////////to check whether answeres ////////////////////////////////
        $answercnt = db_result(db_query("SELECT COUNT(*) FROM {suggest_answer} where qid='$qklisy->qid' and date_added<='$dtint[0]'"));
        //echo "SELECT COUNT(*) FROM {forum_wave} where qid_rid='$qklisy->qid' and date_added<='$dtint[0]'";
        $cmtcnt = db_result(db_query("SELECT COUNT(*) FROM {forum_wave} where qid_rid='$qklisy->qid' and date_added<='$dtint[0]'"));
        $viewcnt = db_result(db_query("SELECT COUNT(*) FROM {qviews} where qid='$qklisy->qid' and view_date<='$dtint[0]'"));
        //echo $answercnt;
        if (($answercnt == 0) && ($cmtcnt == 0) && ($viewcnt < 2)) {
            $viewbad = db_result(db_query("SELECT COUNT(*) FROM {user_badges} where  uid='$qklisy->uid' and  qid='$qklisy->qid' and bid='42'"));
            if ($viewbad == 0) {
                db_query("INSERT INTO {user_badges} (bid, uid,qid) VALUES ('42', '$qklisy->uid','$qklisy->qid') ");
            }
        }
    }
}


function Taxonomist() {
    
    $seltagging = "select * from tagging where status='1'";
    $listag = db_query($seltagging);
    while ($qtag = db_fetch_object($listag)) {
        $tagcnt = db_result(db_query("SELECT COUNT(*) FROM {qtag} where tag_id='$qtag->tid'"));
        //echo $tagcnt;
        //echo "<br>";
        if ($tagcnt == 2) {
            $tagcntr = db_result(db_query("SELECT COUNT(*) FROM {user_badges} where  uid='$qtag->uid' and tid='$qtag->tid'  and bid='40'"));
            if ($tagcntr == 0) {
                db_query("INSERT INTO {user_badges} (bid, uid,tid) VALUES ('40','$qtag->uid','$qtag->tid') ");
            }
        }
    }
}

function Necromancer() {
    
    $date1 = "2007-03-24";
    $date2 = "2009-06-26";
    
    $diff = abs(strtotime($date2) - strtotime($date1));
    
    $days = floor(($diff - $years * 365 * 60 * 60 * 24 - $months * 30 * 60 * 60 * 24) / (60 * 60 * 24));


}
function Student() {
    
    $stlist = "SELECT uid , MIN(qid) as qid FROM question where status='1' GROUP BY uid  ";
    $listtrg = db_query($stlist);
    
    while ($qstude = db_fetch_object($listtrg)) {
        //echo $qstude->qid;
        //echo "<br>";
        //echo "SELECT COUNT(*) FROM {possible_answer_vote} where qid='$qstude->qid' ";
        $answercnt = db_result(db_query("SELECT COUNT(*) FROM {possible_answer_vote} where qid='$qstude->qid' "));
        //echo $answercnt;
        if ($answercnt == 1) {
            $stucntr = db_result(db_query("SELECT COUNT(*) FROM {user_badges} where  uid='$qstude->uid' and qid='$qstude->qid'  and bid='38'"));
            if ($stucntr == 0) {
                db_query("INSERT INTO {user_badges} (bid, uid,qid) VALUES ('38','$qstude->uid','$qstude->qid') ");
            }
        }
    }


}



/*
 function teacher($uid = '', $qid = '') {
 //Answered first question with at least one up vote
 
 global $gSitePath,$user,$gDocPath,$base_root;
 
 if ( empty($uid)) {
 $uid = $user->uid;
 }
 
 $count = db_result(db_query("SELECT COUNT(uid) FROM {possible_answer_vote} where qid='$qid'"));
 $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='41'"));
 $wave_like = db_query(" SELECT count( * ) FROM forum_wave AS fw JOIN user_likes AS ul ON ul.node_id = fw.fid WHERE qid_rid = '$qid' AND TYPE = '1' ");
 
 if ($count > 1 && $badgecnt == 0 && $wave_like > 1) {
 
 db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 41, $uid);
 }
 }
 */


function supporter($uid = '') {
    //- like forum post
    global $gSitePath,$user,$gDocPath,$base_root;

    
    if ( empty($uid)) {
        $uid = $user->uid;
    }
    
    $count1 = db_result(db_query("SELECT COUNT(*) FROM {user_likes} where is_wave='1' AND is_like='1' AND uid='$uid'"));
    $count2 = db_result(db_query("SELECT COUNT(*) FROM {user_likes} where is_wavelets='1' AND is_like='1' AND  uid='$uid'"));
    $count = $count1 + $count2;
    $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='39'"));
    
    if ($count > 1 && $badgecnt == 0) {
        
        db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 39, $uid);
    }


}

function pundit($uid = '') {
    //Left 10 comments with score of 10 or more
    
    global $gSitePath,$user,$gDocPath,$base_root;

    
    if ( empty($uid)) {
        $uid = $user->uid;
    }

    
    $wcnt = db_result(db_query("SELECT COUNT(uid) FROM {forum_wave} where uid='$uid'"));
    $wlikecnt = db_result(db_query(" SELECT count(*) FROM {user_likes} AS l JOIN {forum_wave} AS f ON f.fid = l.node_id WHERE l.is_wave = '1'
AND l.is_like = '1' AND f.uid = '$uid' "));
    $wlcnt = db_result(db_query("SELECT COUNT(uid) FROM {forum_wavelets} where uid='$uid'"));
    $wllikecnt = db_result(db_query("SELECT count(*) FROM {user_likes} AS l JOIN {forum_wavelets} AS f ON f.wlid = l.node_id WHERE l.is_wavelets = '1'
AND l.is_like = '1' AND f.uid = '$uid'"));
    
    $count1 = $wcnt + $wlcnt;
    $count2 = $wlikecnt + $wllikecnt;
    $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='32'"));
    
    if ($count1 > 10 && $count2 >= 10 && $badgecnt == 0) {
        
        db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 32, $uid);
    }


}

function generalist($uid = '') {
    //Active in many different tags
    
    global $gSitePath,$user,$gDocPath,$base_root,$base_path;
    
    $count = db_result(db_query("SELECT COUNT(*) FROM {qtag} as t join {question} as q  where q.uid='$uid' group by t.tid"));
    
    $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='16'"));
    
    if ($count > 50 && $badgecnt == 0) {
        
        db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 16, $uid);
    
    }


}


function legendary($uid = '') {
    //Hit the daily reputation cap on 150 days
    //30 days for 50 repatution cap
    global $gSitePath,$user,$gDocPath,$base_root;
    $sum = 0;
    $bid = substr($_GET['q'], strrpos($_GET['q'], "/") + 1);
    $strReturn = '';
    
    $userload = user_load($uid);
    $sdate = format_date($userload->created, "custom", "Y-m-d");
    $date = date('Y-m-d');
    $diff1 = db_result(db_query("SELECT DATEDIFF('".$date."','".$sdate."') as ddiff"));
    $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='22'"));
    if ($diff1 == 10) {
        
        $totalpts = db_result(db_query("SELECT sum(points) FROM {tbl_user_points} where uid='".$uid."' AND date(date_added) between '$sdate' AND '$date' group by uid"))."<br/>";
        
        if ($sum >= 20 && $badgecnt == 0) {
            
            db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 22, $uid);
        }
    
    }


}

function fanatic($uid = '') {
    global $gSitePath,$user,$gDocPath,$base_root;
    if ( empty($uid)) {
        $uid = $user->uid;
    }
    
    $query = "SELECT date(fanatic_start_date) as sdate,date(now()) as nowdate,date(fanatic_todays_date) as tdate,date(fanatic_end_date) as edate  from {user_profile} where uid='$uid'";
    $list = ExecuteQuery($query, "select");

    
    $diff1 = db_result(db_query("SELECT DATEDIFF('".$list[0]['nowdate']."','".$list[0]['tdate']."') as ddiff"));
    
    if ($diff1 == 1) {
        
        $query = "update {user_profile} set fanatic_todays_date=now() where uid='$uid'";
        db_query($query);
        
        if ($list[0]['nowdate'] == $list[0]['edate']) {
            
            $diff2 = db_result(db_query("SELECT DATEDIFF('".$list[0]['nowdate']."','".$list[0]['edate']."') as ddiff"));
            
            if ($diff2 == 0 || $diff2 == '') {
                
                $diff3 = db_result(db_query("SELECT DATEDIFF('".$list[0]['nowdate']."','".$list[0]['sdate']."') as ddiff"));
                
                //11 Enthusiast Badges
                if ($diff3 >= 50) {
                    
                    db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 11, $uid);
                    $query = "update {user_profile} set fanatic_start_date=now(),fanatic_todays_date=now(),fanatic_end_date=TIMESTAMPADD(DAY,50,NOW()) where uid='$uid'";
                    db_query($query);
                }

            
            }
        }
    
    } else {
        
        // not consecutive so check its today
        
        $diffa = db_result(db_query("SELECT DATEDIFF('".$list[0]['tdate']."','".$list[0]['nowdate']."') as ddiff"));
        
        // if not today then reset the consecutive 30 days
        if ($diffa != 0 || $diffa == '') {
            
            $query = "update {user_profile} set fanatic_start_date=now(),fanatic_todays_date=now(),fanatic_end_date=TIMESTAMPADD(DAY,50,NOW()) where uid='$uid'";
            db_query($query);
        }

    
    }


}



