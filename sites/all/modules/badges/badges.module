<?php

/**
 * Implementation of hook_perm().
 */
function badges_perm() {
  return array('Badges list', 'User list');
}

/**
 * Implementation of hook_menu().
 */
function badges_menu() {
  
  $items['badges'] = array(
    'title' => ' Badges', 
    'page callback' => 'badges_list', 
    'access arguments' => array('Badges list'), 
    'type' => MENU_SUGGESTED_ITEM, 
    'file' => 'badges.pages.inc',);
  
  $items['badges/user'] = array(
    'title' => 'Users Badges', 
    'page callback' => 'user_list', 
    'access arguments' => array('User list'), 
    'type' => MENU_SUGGESTED_ITEM, 
    'file' => 'badges.pages.inc',);

  return $items;
}

function badges_cron() {
  $query = "select uid from {users} where status='1'";
  $fetch = ExecuteQuery($query, "select");

  foreach ($fetch as $list) {

    $uid = $list['uid'];

    biographer($uid);
    citizen_patrol($uid);
    civic_duty($uid);
    patriotic_citizen($uid);
    cleanup($uid);
    commentator($uid);
    pamphleteer($uid);
    senator($uid);
    //pundit($uid);
    //generalist($uid);
    legendary($uid);
    good_question($uid);
    popular_question($uid);
    provocative_question($uid);
    resource_badges();
    debate_badges();
    question_res_deb_post_reply();
  }
  supporter_seer_oracle();
  pundit();
  philosopher();
  generalist();
  wellread();
  scholer();
  yearling();
}

///////////////won badges mail to user ///////////////
function badges_user($uid, $last_id) {
  global $user;
  $sel_ulists = "SELECT * FROM users where uid='$user->uid'";
  $user_namelistfs = ExecuteQuery($sel_ulists, "select");

  $sel_badges = "SELECT * FROM user_badges where uid='$user->uid'";
  $user_badges = ExecuteQuery($sel_badges, "select");

  $badges = "SELECT * FROM badges where bid='" . $user_badges['bid'] . "'";
  $badges_exec = ExecuteQuery($badges, "select");

  $sel_user_cmt = "SELECT * FROM notification_mail_format Where id='7'";
  $rs_mgmt = db_query($sel_user_cmt);
  $list_content = db_fetch_object($rs_mgmt);
  $subject_proj = $list_content->subject;
  $contentm = str_replace("#uname#", $user_namelistfs[0]['name'], $list_content->content);
  $contentm = str_replace("#badge#", "you" . $badges_exec['name'] . " badges ", $contentm);
  //echo $contentm;die;
  //  $ins_qry = "insert into hm_mails(from_mail_id,user_from_id,user_to_id,subject,content,mail_status,notify,posted_date)values('mgopi.php@gmail.com','mgopi.php@gmail.com','".$user_namelistfs[0]['mail']."','".$subject_proj."','".$contentm."',0,0,now())";
  // db_query($ins_qry);
}

// $mail_success = htmlmail_function($user_namelistfs[0]['mail'], $subject, $contentm, '');
///////////////won badges mail to user ///////////////
// fill profile get the biographer badge
function biographer($uid = '') {
  global $gSitePath, $user, $gDocPath, $base_root;
  $i = 0;

  if (empty($uid)) {
    $uid = $user->uid;
  }


  $data = db_fetch_object(db_query('SELECT * FROM {user_profile} WHERE uid=%d LIMIT 1', $uid));
  //print_r($data);
  if (!empty($data->real_name))
    $i++;

  if (!empty($data->bio))
    $i++;

  if ($data->gender > 0)
    $i++;

  if (!empty($data->zip))
    $i++;

  if (!empty($data->country))
    $i++;

  if (!empty($data->religion))
    $i++;

  if (!empty($data->ethnic))
    $i++;

  if (!empty($data->slant))
    $i++;


  if (!empty($data->dob))
    $i++;

  $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='1'"));
  if ($i == 9 && $badgecnt == 0) {
    db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 1, $uid);
    $last_id = db_last_insert_id('user_badges', 'badge');
    user_coins_update($uid, 1, '');
    //  hm_mails('',$last_id,'user_badges');
    // badges_user($uid,$last_id);
  }
}

function citizen_patrol($uid = '') {
  global $gSitePath, $user, $gDocPath, $base_root;


  if (empty($uid)) {
    $uid = $user->uid;
  }

  $count = db_result(db_query("SELECT COUNT(uid) FROM {question_flags} where uid='$uid'"));
  $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='2'"));
  if ($count == 1 && $badgecnt == 0) {

    db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 2, $uid);
    $last_id = db_last_insert_id('user_badges', 'badge');
    user_coins_update($uid, 2, '');

    /* New SET NOTIFY LOG */
    $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 2));
    $variable = array('bid' => '2', 'badge' => $badgeName);
    set_notify_log($uid, '', 'add_badge', $variable);
    /* New SET NOTIFY LOG */

    // hm_mails('',$last_id,'user_badges');
    //badges_user($uid,$last_id);
  }
}

function civic_duty($uid = '') {
  global $gSitePath, $user, $gDocPath, $base_root;


  if (empty($uid)) {
    $uid = $user->uid;
  }

  //$count1 = db_result(db_query("SELECT COUNT(*) FROM {possible_answer_vote} where uid='$uid' group by uid"));
  $count1 = db_result(db_query("SELECT COUNT(*) FROM {poll_votes} where uid='$uid' group by uid"));
  $count2 = db_result(db_query("SELECT COUNT(*) FROM {suggest_answer_vote} where uid='$uid' group by uid"));
  $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='3'"));
  $count = $count1 + $count2;
  // count 300
  if ($count >= 3 && $badgecnt == 0) {

    db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 3, $uid);
    $last_id = db_last_insert_id('user_badges', 'badge');

    /* New SET NOTIFY LOG */
    $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 3));
    $variable = array('bid' => '3', 'badge' => $badgeName);
    set_notify_log($uid, '', 'add_badge', $variable);
    /* New SET NOTIFY LOG */

    user_coins_update($uid, 3, '');
    //hm_mails('',$last_id,'user_badges');
    //badges_user($uid,$last_id);
  }
}

function patriotic_citizen($uid = '') {
  global $gSitePath, $user, $gDocPath, $base_root;
  if (empty($uid)) {
    $uid = $user->uid;
  }
  //$count1 = db_result(db_query("SELECT COUNT(*) FROM {possible_answer_vote} WHERE uid = '$uid' GROUP BY uid"));
  $count1 = db_result(db_query("SELECT COUNT(*) FROM {poll_votes} WHERE uid = '$uid' GROUP BY uid"));
  $count2 = db_result(db_query("SELECT COUNT(*) FROM (suggest_answer_vote) WHERE uid = '$uid' GROUP BY uid"));
  $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} WHERE uid='$uid' AND bid='45'"));
  $count = $count1 + $count2;
  // count 1000
  if ($count >= 5 && $badgecnt == 0) {
    db_query("INSERT INTO {user_badges} (bid, uid) VALUES(%d,%d)", 45, $uid);
    $last_id = db_last_insert_id('user_badges', 'badge');

    /* New SET NOTIFY LOG */
    $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 454));
    $variable = array('bid' => '45', 'badge' => $badgeName);
    set_notify_log($uid, '', 'add_badge', $variable);
    /* New SET NOTIFY LOG */

    user_coins_update($uid, 45, '');
  }
}

function cleanup($uid = '') {

  global $gSitePath, $user, $gDocPath, $base_root;


  if (empty($uid)) {
    $uid = $user->uid;
  }

  $count = db_fetch_object(db_query("SELECT * FROM {answer_withdraw} where uid='$uid' AND status='0' LIMIT 0,1"));

  if (!empty($count)) {

    db_query("update {answer_withdraw} set status='1' where uid='$uid' AND pid_sid='$count->pid_sid' ");
    db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 4, $uid);
    $last_id = db_last_insert_id('user_badges', 'badge');

    /* New SET NOTIFY LOG */
    $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 4));
    $variable = array('bid' => '4', 'badge' => $badgeName);
    set_notify_log($uid, '', 'add_badge', $variable);
    /* New SET NOTIFY LOG */

    user_coins_update($uid, 4, '');
    // hm_mails('',$last_id,'user_badges');
    // badges_user($uid,$last_id);
  }
}

function pamphleteer($uid = '') {
  global $gSitePath, $user, $gDocPath, $base_root;
  if (empty($uid)) {
    $uid = $user->uid;
  }
  //$dsql = "SELECT * FROM {debate_reply} WHERE uid = '$uid'";
  $dsql = "SELECT * FROM {comments} WHERE uid = '$uid' AND subject = 'Debate'";
  $dcomments = ExecuteQuery($dsql, 'select');
  $dagreecount = 0;
  foreach ($dcomments as $dcomment) {
    //$count = db_result(db_query("SELECT COUNT(lid) FROM {user_likes} WHERE is_debate_reply = '1' AND is_agree = '1' AND node_id = '".$dcomment['rid']."'"));
    $count = db_result(db_query("SELECT COUNT(vote_id) FROM {votingapi_vote} WHERE value = '1' AND content_id = '" . $dcomment['cid'] . "'"));
    if ($count > 0) {
      $dagreecount = $dagreecount + 1;
    }
  }
  //$rsql = "SELECT * FROM {resource_reply} WHERE uid = '$uid'";
  $rsql = "SELECT * FROM {comments} WHERE uid = '$uid' AND subject = 'Resource'";
  $rcomments = ExecuteQuery($rsql, 'select');
  $ragreecount = 0;
  foreach ($rcomments as $rcomment) {
    //$count = db_result(db_query("SELECT COUNT(lid) FROM {user_likes} WHERE is_resource_reply = '1' AND is_agree = '1' AND node_id = '".$rcomment['reid']."'"));
    $count = db_result(db_query("SELECT COUNT(vote_id) FROM {votingapi_vote} WHERE value = '1' AND content_id = '" . $rcomment['cid'] . "'"));
    if ($count > 0) {
      $ragreecount = $ragreecount + 1;
    }
  }
  $agreecount = $dagreecount + $ragreecount;
  //agreecount >=10 <99
  if ($agreecount >= 1 && $agreecount < 3) {
    $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='46'"));
    // count 10
    if ($badgecnt == 0) {
      db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 46, $uid);
      $last_id = db_last_insert_id('user_badges', 'badge');

      /* New SET NOTIFY LOG */
      $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 46));
      $variable = array('bid' => '46', 'badge' => $badgeName);
      set_notify_log($uid, '', 'add_badge', $variable);
      /* New SET NOTIFY LOG */

      user_coins_update($uid, 46, '');
    }
  }
}

function commentator($uid = '') {
  global $gSitePath, $user, $gDocPath, $base_root;
  if (empty($uid)) {
    $uid = $user->uid;
  }
  //$dsql = "SELECT * FROM {debate_reply} WHERE uid = '$uid'";
  $dsql = "SELECT * FROM {comments} WHERE uid = '$uid' AND subject = 'Debate'";
  $dcomments = ExecuteQuery($dsql, 'select');
  $dagreecount = 0;
  foreach ($dcomments as $dcomment) {
    //$count = db_result(db_query("SELECT COUNT(lid) FROM {user_likes} WHERE is_debate_reply = '1' AND is_agree = '1' AND node_id = '".$dcomment['rid']."'"));
    $count = db_result(db_query("SELECT COUNT(vote_id) FROM {votingapi_vote} WHERE value = '1' AND content_id = '" . $dcomment['cid'] . "'"));
    if ($count > 0) {
      $dagreecount = $dagreecount + 1;
    }
  }
  //$rsql = "SELECT * FROM {resource_reply} WHERE uid = '$uid'";
  $rsql = "SELECT * FROM {comments} WHERE uid = '$uid' AND subject = 'Resource'";
  $rcomments = ExecuteQuery($rsql, 'select');
  $ragreecount = 0;
  foreach ($rcomments as $rcomment) {
    //$count = db_result(db_query("SELECT COUNT(lid) FROM {user_likes} WHERE is_resource_reply = '1' AND is_agree = '1' AND node_id = '".$rcomment['reid']."'"));
    $count = db_result(db_query("SELECT COUNT(vote_id) FROM {votingapi_vote} WHERE value = '1' AND content_id = '" . $rcomment['cid'] . "'"));
    if ($count > 0) {
      $ragreecount = $ragreecount + 1;
    }
  }
  $agreecount = $dagreecount + $ragreecount;
  //agreecount >=100 <500
  if ($agreecount >= 3 && $agreecount < 5) {
    $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='5'"));
    // count 10
    if ($badgecnt == 0) {
      db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 5, $uid);
      $last_id = db_last_insert_id('user_badges', 'badge');

      /* New SET NOTIFY LOG */
      $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 5));
      $variable = array('bid' => '5', 'badge' => $badgeName);
      set_notify_log($uid, '', 'add_badge', $variable);
      /* New SET NOTIFY LOG */

      user_coins_update($uid, 5, '');
    }
  }
}

function senator($uid = '') {
  global $gSitePath, $user, $gDocPath, $base_root;
  if (empty($uid)) {
    $uid = $user->uid;
  }
  //$dsql = "SELECT * FROM {debate_reply} WHERE uid = '$uid'";
  $dsql = "SELECT * FROM {comments} WHERE uid = '$uid' AND subject = 'Debate' AND pid != 0";
  $dcomments = ExecuteQuery($dsql, 'select');
  $dagreecount = 0;
  foreach ($dcomments as $dcomment) {
    //$count = db_result(db_query("SELECT COUNT(lid) FROM {user_likes} WHERE is_debate_reply = '1' AND is_agree = '1' AND node_id = '".$dcomment['rid']."'"));
    $count = db_result(db_query("SELECT COUNT(vote_id) FROM {votingapi_vote} WHERE value = '1' AND content_id = '" . $dcomment['cid'] . "'"));
    if ($count > 0) {
      $dagreecount = $dagreecount + 1;
    }
  }
  //$rsql = "SELECT * FROM {resource_reply} WHERE uid = '$uid'";
  $rsql = "SELECT * FROM {comments} WHERE uid = '$uid' AND subject = 'Resource' AND pid != 0";
  $rcomments = ExecuteQuery($rsql, 'select');
  $ragreecount = 0;
  foreach ($rcomments as $rcomment) {
    //$count = db_result(db_query("SELECT COUNT(lid) FROM {user_likes} WHERE is_resource_reply = '1' AND is_agree = '1' AND node_id = '".$rcomment['reid']."'"));
    $count = db_result(db_query("SELECT COUNT(vote_id) FROM {votingapi_vote} WHERE value = '1' AND content_id = '" . $rcomment['cid'] . "'"));
    if ($count > 0) {
      $ragreecount = $ragreecount + 1;
    }
  }
  $agreecount = $dagreecount + $ragreecount;
  //agreecount >=500
  if ($agreecount >= 5) {
    $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='47'"));
    // count 10
    if ($badgecnt == 0) {
      db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 47, $uid);
      $last_id = db_last_insert_id('user_badges', 'badge');

      /* New SET NOTIFY LOG */
      $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 47));
      $variable = array('bid' => '47', 'badge' => $badgeName);
      set_notify_log($uid, '', 'add_badge', $variable);
      /* New SET NOTIFY LOG */

      user_coins_update($uid, 47, '');
    }
  }
}

function critic($uid = '') {
  
}

function discipline($uid = '', $qid = '') {


  global $gSitePath, $user, $gDocPath, $base_root;


  if (empty($uid)) {
    $uid = $user->uid;
  }

  //$count = db_result(db_query("SELECT COUNT(*) FROM {possible_answer_vote} where qid='$qid'"));
  $count = db_result(db_query("SELECT COUNT(*) FROM {poll_votes} where nid='$qid'"));

  if ($count >= 3) {

    db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 7, $uid);
    $last_id = db_last_insert_id('user_badges', 'badge');

    /* New SET NOTIFY LOG */
    $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 7));
    $variable = array('bid' => '7', 'badge' => $badgeName);
    set_notify_log($uid, '', 'add_badge', $variable);
    /* New SET NOTIFY LOG */

    user_coins_update($uid, 7, '');
    //  hm_mails('',$last_id,'user_badges');
    // badges_user($uid,$last_id);
  }
}

function first_edit($uid = '', $qid = '') {

  global $gSitePath, $user, $gDocPath, $base_root;
  if (empty($uid)) {
    $uid = $user->uid;
  }
}

function electorate($uid = '', $qid = '') {

  global $gSitePath, $user, $gDocPath, $base_root;
  if (empty($uid)) {
    $uid = $user->uid;
  }


  //$count = db_result(db_query("SELECT COUNT(*) FROM {possible_answer_vote} where qid='$qid'"));
  $count = db_result(db_query("SELECT COUNT(*) FROM {poll_votes} where nid='$qid'"));
  if ($count >= 10) {

    db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 9, $uid);
    $last_id = db_last_insert_id('user_badges', 'badge');

    /* New SET NOTIFY LOG */
    $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 9));
    $variable = array('bid' => '9', 'badge' => $badgeName);
    set_notify_log($uid, '', 'add_badge', $variable);
    /* New SET NOTIFY LOG */

    user_coins_update($uid, 9, '');
    // hm_mails('',$last_id,'user_badges');
    // badges_user($uid,$last_id);
  }
}

function enthusiast($uid = '') {
  global $gSitePath, $user, $gDocPath, $base_root;
  if (empty($uid)) {
    $uid = $user->uid;


    $query = "SELECT date(daily_start_date) as sdate,date(now()) as nowdate,date(daily_todays_date) as tdate,date(daily_end_date) as edate  from {user_profile} where uid='$uid'";
    $list = ExecuteQuery($query, "select");


    $diff1 = db_result(db_query("SELECT DATEDIFF('" . $list[0]['nowdate'] . "','" . $list[0]['tdate'] . "') as ddiff"));

    if ($diff1 == 1) {

      $query = "update {user_profile} set daily_todays_date=now() where uid='$uid'";
      db_query($query);

      if ($list[0]['nowdate'] == $list[0]['edate']) {

        $diff2 = db_result(db_query("SELECT DATEDIFF('" . $list[0]['nowdate'] . "','" . $list[0]['edate'] . "') as ddiff"));

        if ($diff2 == 0 || $diff2 == '') {

          $diff3 = db_result(db_query("SELECT DATEDIFF('" . $list[0]['nowdate'] . "','" . $list[0]['sdate'] . "') as ddiff"));

          //11 Enthusiast Badges
          if ($diff3 >= 30) {

            db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 11, $uid);
            $last_id = db_last_insert_id('user_badges', 'badge');
            // hm_mails('',$last_id,'user_badges');
            // badges_user($uid,$last_id);

            /* New SET NOTIFY LOG */
            $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 11));
            $variable = array('bid' => '11', 'badge' => $badgeName);
            set_notify_log($uid, '', 'add_badge', $variable);
            /* New SET NOTIFY LOG */

            user_coins_update($uid, 11, '');
            $query = "update {user_profile} set daily_start_date=now(),daily_todays_date=now(),daily_end_date=TIMESTAMPADD(DAY,30,NOW()) where uid='$uid'";
            db_query($query);
          }
        }
      }
    }
    else {

      // not consecutive so check its today

      $diffa = db_result(db_query("SELECT DATEDIFF('" . $list[0]['tdate'] . "','" . $list[0]['nowdate'] . "') as ddiff"));

      // if not today then reset the consecutive 30 days
      if ($diffa != 0 || $diffa == '') {

        $query = "update {user_profile} set daily_start_date=now(),daily_todays_date=now(),daily_end_date=TIMESTAMPADD(DAY,30,NOW()) where uid='$uid'";
        db_query($query);
      }
    }
  }
}

function yearling_old() {


  $selusers = "SELECT * FROM users as a ,user_profile as b where a.status='1' and a.uid=b.uid and a.uid > rank_id";
  $listmuser = db_query($selusers);
  while ($userlist = db_fetch_object($listmuser)) {
    //echo "<br>";
    //echo $userlist->points;
    //echo "<br>";

    $dtint = date("Y-m-d h:i:s", $userlist->created);

    $date1 = $dtint;
    $date2 = date("Y-m-d h:i:s");

    $diff = abs(strtotime($date2) - strtotime($date1));
    $months = floor(($diff - $years * 365 * 60 * 60 * 24) / (30 * 60 * 60 * 24));
    //echo "<br>";
    //echo $months;
    $b = "12";
    // $b = "1";
    //  if ($months >= 12) 
    /////////////////check for month////////////////////////////////
    if ($months >= 1) {
      $mval = $months % $b;
      //echo $mval;
      /////////////////check for Points////////////////////////////////
      $count = db_result(db_query("SELECT COUNT(*) FROM {user_badges} where bid='43' and uid='$userlist->uid'"));

      if ($count > 0) {
        $cnt = $count + 1;
        $rep = $cnt * 200;
      }
      else {
        $rep = '200';
      }
      //echo $rep;
      if ($rep >= 200) {

        if (($mval == 0) && ($rep == $userlist->points)) {
          //echo "SELECT COUNT(*) FROM {user_badges} where bid='43' and uid='$userlist->uid' and yearly_point='$rep' ";
          $countret = db_result(db_query("SELECT COUNT(*) FROM {user_badges} where bid='43' and uid='$userlist->uid' and yearly_point='$rep' "));
          if ($countret == 0) {
            db_query("INSERT INTO {user_badges} (bid, uid,yearly_point) VALUES (%d, %d,%d)", 43, $userlist->uid, $rep);
            $last_id = db_last_insert_id('user_badges', 'badge');
            user_coins_update($userlist->uid, 43, '');
            // hm_mails('',$last_id,'user_badges');
            // badges_user($uid,$last_id);
          }
        }
      }
    }
  }
}

function yearling() {
  $selusers = "SELECT * FROM users where status='1' and rank_id > 1";
  $listmuser = db_query($selusers);
  while ($userlist = db_fetch_object($listmuser)) {
    $dtint = date("Y-m-d h:i:s", $userlist->created);
    $date1 = $dtint;
    $date2 = date("Y-m-d h:i:s");


    $months = month_differece($date2, $date1);
    $b = "12";
    if ($months >= 12) {
      $monthdiff = $months % $b;
    }
    // Active member for a year, earning at least 200 points (Active citizen, judge, senator)
    if ($months >= 1) {
      $date = db_result(db_query("SELECT date_added FROM {user_badges} WHERE uid = '" . $userlist->uid . "' AND bid = '43' ORDER BY date_added DESC LIMIT 0,1"));
      $badgecreated = $date != '' ? $date : 0;
      $interval = month_differece($date2, $badgecreated);
      if ($interval >= 1) {
        db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d'", $userlist->uid, 43);

        /* New SET NOTIFY LOG */
        $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 43));
        $variable = array('bid' => '43', 'badge' => $badgeName);
        set_notify_log($userlist->uid, '', 'add_badge', $variable);
        /* New SET NOTIFY LOG */

        user_coins_update($userlist->uid, 43, '');
      }
    }
  }
}

function month_differece($month1, $month2) {
  $diff = abs(strtotime($month2) - strtotime($month1));
  $months = floor(($diff) / (30 * 60 * 60 * 24));
  return $months;
}

function Tumbleweed() {
  //$selquestion = "select * from question where status='1'";
  $selquestion = "select * from node where status='1'";
  $listquestm = db_query($selquestion);
  while ($qklisy = db_fetch_object($listquestm)) {
    //echo $qklisy->qid;
    //echo "<br>";

    $date_added = date("F d Y H:i:s", $qklisy->created);
    $datbt = db_query("SELECT DATE_ADD('$date_added', INTERVAL 7 DAY)as weekday");
    $dtrange = db_fetch_object($datbt);

    $dtrange->weekday;

    $dtint = explode(" ", $dtrange->weekday);


    ////////////////to check whether answeres ////////////////////////////////
    $answercnt = db_result(db_query("SELECT COUNT(*) FROM {suggest_answer} where qid='$qklisy->nid' and date_added<='$dtint[0]'"));
    //echo "SELECT COUNT(*) FROM {forum_wave} where qid_rid='$qklisy->qid' and date_added<='$dtint[0]'";
    $cmtcnt = db_result(db_query("SELECT COUNT(*) FROM {forum_wave} where qid_rid='$qklisy->nid' and date_added<='$dtint[0]'"));
    $viewcnt = db_result(db_query("SELECT COUNT(*) FROM {qviews} where qid='$qklisy->nid' and view_date<='$dtint[0]'"));
    //echo $answercnt;
    if (($answercnt == 0) && ($cmtcnt == 0) && ($viewcnt < 2)) {
      $viewbad = db_result(db_query("SELECT COUNT(*) FROM {user_badges} where  uid='$qklisy->uid' and  qid='$qklisy->nid' and bid='42'"));
      if ($viewbad == 0) {
        db_query("INSERT INTO {user_badges} (bid, uid,qid) VALUES ('42', '$qklisy->uid','$qklisy->nid') ");
        $last_id = db_last_insert_id('user_badges', 'badge');

        /* New SET NOTIFY LOG */
        $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 42));
        $variable = array('bid' => '42', 'badge' => $badgeName);
        set_notify_log($qklisy->uid, '', 'add_badge', $variable);
        /* New SET NOTIFY LOG */

        user_coins_update($qklisy->uid, 42, '');

        // hm_mails('',$last_id,'user_badges');
        // badges_user($uid,$last_id);
      }
    }
  }
}

function Taxonomist() {

  $seltagging = "select * from tagging where status='1'";
  $listag = db_query($seltagging);
  while ($qtag = db_fetch_object($listag)) {
    $tagcnt = db_result(db_query("SELECT COUNT(*) FROM {qtag} where tag_id='$qtag->tid'"));
    //echo $tagcnt;
    //echo "<br>";
    if ($tagcnt == 2) {
      $tagcntr = db_result(db_query("SELECT COUNT(*) FROM {user_badges} where  uid='$qtag->uid' and tid='$qtag->tid'  and bid='40'"));
      if ($tagcntr == 0) {
        db_query("INSERT INTO {user_badges} (bid, uid,tid) VALUES ('40','$qtag->uid','$qtag->tid') ");
        $last_id = db_last_insert_id('user_badges', 'badge');

        /* New SET NOTIFY LOG */
        $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 40));
        $variable = array('bid' => '40', 'badge' => $badgeName);
        set_notify_log($qtag->uid, '', 'add_badge', $variable);
        /* New SET NOTIFY LOG */

        user_coins_update($qtag->uid, 40, '');

        // hm_mails('',$last_id,'user_badges');
        // badges_user($uid,$last_id);
      }
    }
  }
}

function Necromancer() {

  $date1 = "2007-03-24";
  $date2 = "2009-06-26";

  $diff = abs(strtotime($date2) - strtotime($date1));

  $days = floor(($diff - $years * 365 * 60 * 60 * 24 - $months * 30 * 60 * 60 * 24) / (60 * 60 * 24));
}

function Student() {

  //$stlist = "SELECT uid , MIN(qid) as qid FROM question where status='1' GROUP BY uid  ";
  $stlist = "SELECT uid , MIN(nid) as nid FROM node where status='1' GROUP BY uid  ";
  $listtrg = db_query($stlist);

  while ($qstude = db_fetch_object($listtrg)) {

    //$answercnt = db_result(db_query("SELECT COUNT(*) FROM {possible_answer_vote} where qid='$qstude->nid' "));
    $answercnt = db_result(db_query("SELECT COUNT(*) FROM {poll_votes} where nid='$qstude->nid' "));
    //echo $answercnt;
    if ($answercnt == 1) {
      $stucntr = db_result(db_query("SELECT COUNT(*) FROM {user_badges} where  uid='$qstude->uid' and qid='$qstude->nid'  and bid='38'"));
      if ($stucntr == 0) {
        db_query("INSERT INTO {user_badges} (bid, uid,qid) VALUES ('38','$qstude->uid','$qstude->nid') ");
        $last_id = db_last_insert_id('user_badges', 'badge');

        /* New SET NOTIFY LOG */
        $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 38));
        $variable = array('bid' => '38', 'badge' => $badgeName);
        set_notify_log($qstude->uid, '', 'add_badge', $variable);
        /* New SET NOTIFY LOG */

        user_coins_update($qstude->uid, 38, '');
        // hm_mails('',$last_id,'user_badges');
        // badges_user($uid,$last_id);
      }
    }
  }
}

/*
  function teacher($uid = '', $qid = '') {
  //Answered first question with at least one up vote

  global $gSitePath,$user,$gDocPath,$base_root;

  if ( empty($uid)) {
  $uid = $user->uid;
  }

  $count = db_result(db_query("SELECT COUNT(uid) FROM {possible_answer_vote} where qid='$qid'"));
  $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='41'"));
  $wave_like = db_query(" SELECT count( * ) FROM forum_wave AS fw JOIN user_likes AS ul ON ul.node_id = fw.fid WHERE qid_rid = '$qid' AND TYPE = '1' ");

  if ($count > 1 && $badgecnt == 0 && $wave_like > 1) {

  db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 41, $uid);
  }
  }
 */

// supporter, seer, oracle
function supporter_seer_oracle() {
  // resource
  //$sql = "SELECT uid,node_id FROM {user_likes} WHERE is_resource = '1' AND is_agree = '1' GROUP BY node_id ORDER BY lid";
  $res_tid = get_taxonomy_id('forum', 'Resource');
  $sql = "SELECT uid,content_id FROM {votingapi_vote} WHERE value = '1' AND content_type = 'node' GROUP BY content_id ORDER BY vote_id";
  //$sql = "SELECT v.uid,v.content_id FROM {votingapi_vote} v LEFT JOIN {term_node} t ON v.content_id = t.nid WHERE v.value = '1' AND v.content_type = 'node' AND t.tid = '$tid' GROUP BY v.content_id ORDER BY v.vote_id";
  $res_agrees = ExecuteQuery($sql, 'select');
  foreach ($res_agrees as $agree) {
    $comment = comment_load($agree['content_id']);
    if ($comment['type'] == 'Resource' && $comment['pid'] == 0) {
      $uid = $agree['uid'];
      $node_id = $agree['content_id'];
      //$count_resource = db_result(db_query("SELECT COUNT(lid) FROM {user_likes} WHERE is_resource = '1' AND is_agree = '1' AND node_id = '".$node_id."'"));
      $count_resource = db_result(db_query("SELECT COUNT(vote_id) FROM {votingapi_vote} WHERE value = '1' AND content_type = 'node' AND content_id = '" . $node_id . "'"));
      // count >=10 <50
      if ($count_resource >= 1 && $count_resource < 3) {
        supporter($uid, $node_id, 'resource_agree');
      }
      if ($count_resource >= 3 && $count_resource < 5) {
        seer($uid, $node_id, 'resource_agree');
      }
      if ($count_resource >= 5) {
        oracle($uid, $node_id, 'resource_agree');
      }
    }
  }
  // resource_reply
  //$sql = "SELECT uid,node_id FROM {user_likes} WHERE is_resource_reply = '1' AND is_agree = '1' GROUP BY node_id ORDER BY lid";
  $sql = "SELECT uid,content_id FROM {votingapi_vote} WHERE value = '1' AND content_type = 'comment' GROUP BY content_id ORDER BY vote_id";
  $res_reply_agrees = ExecuteQuery($sql, 'select');
  foreach ($res_reply_agrees as $agree) {
    $comment = comment_load($agree['content_id']);
    if ($comment['type'] == 'Resource' && $comment['pid'] != 0) {
      $uid = $agree['uid'];
      $node_id = $agree['content_id'];
      //$count_resource_reply = db_result(db_query("SELECT COUNT(lid) FROM {user_likes} WHERE is_resource_reply = '1' AND is_agree = '1' AND node_id = '".$node_id."'"));
      $count_resource_reply = db_result(db_query("SELECT COUNT(vote_id) FROM {votingapi_vote} WHERE value = '1' AND content_type = 'node' AND content_id = '" . $node_id . "'"));
      // count >=10 <50
      if ($count_resource_reply >= 1 && $count_resource_reply < 3) {
        supporter($uid, $node_id, 'r_resource_agree');
      }
      if ($count_resource_reply >= 3 && $count_resource_reply < 5) {
        seer($uid, $node_id, 'r_resource_agree');
      }
      if ($count_resource_reply >= 5) {
        oracle($uid, $node_id, 'r_resource_agree');
      }
    }
  }
  // debate
  //$sql = "SELECT uid,node_id FROM {user_likes} WHERE is_debate = '1' AND is_agree = '1' GROUP BY node_id ORDER BY lid";
  $sql = "SELECT uid,content_id FROM {votingapi_vote} WHERE value = '1' AND content_type = 'node' GROUP BY content_id ORDER BY vote_id";
  $deb_agrees = ExecuteQuery($sql, 'select');
  foreach ($deb_agrees as $agree) {
    $comment = comment_load($agree['content_id']);
    if ($comment['type'] == 'Debate' && $comment['pid'] == 0) {
      $uid = $agree['uid'];
      $node_id = $agree['content_id'];
      //$count_debate = db_result(db_query("SELECT COUNT(lid) FROM {user_likes} WHERE is_debate = '1' AND is_agree = '1' AND node_id = '".$node_id."'"));
      $count_debate = db_result(db_query("SELECT COUNT(vote_id) FROM {votingapi_vote} WHERE value = '1' AND content_type = 'node' AND content_id = '" . $node_id . "'"));
      // count >=10 <50
      if ($count_debate >= 1 && $count_debate < 3) {
        supporter($uid, $node_id, 'debate_agree');
      }
      if ($count_debate >= 3 && $count_debate < 5) {
        seer($uid, $node_id, 'debate_agree');
      }
      if ($count_debate >= 5) {
        oracle($uid, $node_id, 'debate_agree');
      }
    }
  }
  // debate_reply
  //$sql = "SELECT uid,node_id FROM {user_likes} WHERE is_debate_reply = '1' AND is_agree = '1' GROUP BY node_id ORDER BY lid";
  $sql = "SELECT uid,content_id FROM {votingapi_vote} WHERE value = '1' AND content_type = 'comment' GROUP BY content_id ORDER BY vote_id";
  $deb_reply_agrees = ExecuteQuery($sql, 'select');
  foreach ($deb_reply_agrees as $agree) {
    $comment = comment_load($agree['content_id']);
    if ($comment['type'] == 'Debate' && $comment['pid'] != 0) {
      $uid = $agree['uid'];
      $node_id = $agree['content_id'];
      //$count_debate_reply = db_result(db_query("SELECT COUNT(lid) FROM {user_likes} WHERE is_debate_reply = '1' AND is_agree = '1' AND node_id = '".$node_id."'"));
      $count_debate_reply = db_result(db_query("SELECT COUNT(vote_id) FROM {votingapi_vote} WHERE value = '1' AND content_type = 'comment' AND content_id = '" . $node_id . "'"));
      // count >=10 <50
      if ($count_debate_reply >= 1 && $count_debate_reply < 3) {
        supporter($uid, $node_id, 'r_debate_agree');
      }
      if ($count_debate_reply >= 3 && $count_debate_reply < 5) {
        seer($uid, $node_id, 'r_debate_agree');
      }
      if ($count_debate_reply >= 5) {
        oracle($uid, $node_id, 'r_debate_agree');
      }
    }
  }
}

function supporter($uid, $nodeid, $rtype) {
  $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='39' AND node_id='$nodeid' AND type='$rtype'"));
  if ($badgecnt == 0) {
    db_query("INSERT INTO {user_badges} (bid, uid, node_id, type) VALUES (%d, %d, %d, '%s')", 39, $uid, $nodeid, $rtype);
    $last_id = db_last_insert_id('user_badges', 'badge');

    /* New SET NOTIFY LOG */
    $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 39));
    $variable = array('bid' => '39', 'badge' => $badgeName);
    set_notify_log($uid, '', 'add_badge', $variable);
    /* New SET NOTIFY LOG */

    user_coins_update($uid, 39, '');
  }
}

function seer($uid, $nodeid, $rtype) {
  $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='49' AND node_id='$nodeid' AND type='$rtype'"));
  if ($badgecnt == 0) {
    db_query("INSERT INTO {user_badges} (bid, uid, node_id, type) VALUES (%d, %d, %d, '%s')", 49, $uid, $nodeid, $rtype);
    $last_id = db_last_insert_id('user_badges', 'badge');

    /* New SET NOTIFY LOG */
    $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 49));
    $variable = array('bid' => '49', 'badge' => $badgeName);
    set_notify_log($uid, '', 'add_badge', $variable);
    /* New SET NOTIFY LOG */

    user_coins_update($uid, 49, '');
  }
}

function oracle($uid, $nodeid, $rtype) {
  $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='50' AND node_id='$nodeid' AND type='$rtype'"));
  if ($badgecnt == 0) {
    db_query("INSERT INTO {user_badges} (bid, uid, node_id, type) VALUES (%d, %d, %d, '%s')", 50, $uid, $nodeid, $rtype);
    $last_id = db_last_insert_id('user_badges', 'badge');

    /* New SET NOTIFY LOG */
    $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 50));
    $variable = array('bid' => '50', 'badge' => $badgeName);
    set_notify_log($uid, '', 'add_badge', $variable);
    /* New SET NOTIFY LOG */

    user_coins_update($uid, 50, '');
  }
}

function pundit_old($uid = '') {
  //Left 10 comments with score of 10 or more

  global $gSitePath, $user, $gDocPath, $base_root;


  if (empty($uid)) {
    $uid = $user->uid;
  }


  $wcnt = db_result(db_query("SELECT COUNT(uid) FROM {forum_wave} where uid='$uid'"));
  $wlikecnt = db_result(db_query(" SELECT count(*) FROM {user_likes} AS l JOIN {forum_wave} AS f ON f.fid = l.node_id WHERE l.is_wave = '1'
AND l.is_like = '1' AND f.uid = '$uid' "));
  $wlcnt = db_result(db_query("SELECT COUNT(uid) FROM {forum_wavelets} where uid='$uid'"));
  $wllikecnt = db_result(db_query("SELECT count(*) FROM {user_likes} AS l JOIN {forum_wavelets} AS f ON f.wlid = l.node_id WHERE l.is_wavelets = '1'
AND l.is_like = '1' AND f.uid = '$uid'"));

  $count1 = $wcnt + $wlcnt;
  $count2 = $wlikecnt + $wllikecnt;
  $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='32'"));

  if ($count1 > 10 && $count2 >= 10 && $badgecnt == 0) {

    db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 32, $uid);
    $last_id = db_last_insert_id('user_badges', 'badge');
    user_coins_update($uid, 32, '');
    // hm_mails('',$last_id,'user_badges');
    // badges_user($uid,$last_id);
  }
}

function generalist_old($uid = '') {
  //Active in many different tags

  global $gSitePath, $user, $gDocPath, $base_root, $base_path;

  $count = db_result(db_query("SELECT COUNT(*) FROM {qtag} as t join {question} as q  where q.uid='$uid' group by t.tid"));

  $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='16'"));

  if ($count > 50 && $badgecnt == 0) {

    db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 16, $uid);
    $last_id = db_last_insert_id('user_badges', 'badge');
    user_coins_update($uid, 16, '');
    // hm_mails('',$last_id,'user_badges');
    // badges_user($uid,$last_id);
  }
}

function legendary($uid = '') {
  //Hit the daily reputation cap on 150 days
  //30 days for 50 repatution cap
  global $gSitePath, $user, $gDocPath, $base_root;
  $sum = 0;
  $bid = substr($_GET['q'], strrpos($_GET['q'], "/") + 1);
  $strReturn = '';

  $userload = user_load($uid);
  $sdate = format_date($userload->created, "custom", "Y-m-d");
  $date = date('Y-m-d');
  $diff1 = db_result(db_query("SELECT DATEDIFF('" . $date . "','" . $sdate . "') as ddiff"));
  $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='22'"));
  if ($diff1 == 10) {

    $totalpts = db_result(db_query("SELECT sum(points) FROM {tbl_user_points} where uid='" . $uid . "' AND date(date_added) between '$sdate' AND '$date' group by uid")) . "<br/>";

    if ($sum >= 20 && $badgecnt == 0) {

      db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 22, $uid);
      $last_id = db_last_insert_id('user_badges', 'badge');

      /* New SET NOTIFY LOG */
      $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 22));
      $variable = array('bid' => '22', 'badge' => $badgeName);
      set_notify_log($uid, '', 'add_badge', $variable);
      /* New SET NOTIFY LOG */

      user_coins_update($uid, 22, '');
      // hm_mails('',$last_id,'user_badges');
      // badges_user($uid,$last_id);
    }
  }
}

function fanatic($uid = '') {
  global $gSitePath, $user, $gDocPath, $base_root;
  if (empty($uid)) {
    $uid = $user->uid;
  }

  $query = "SELECT date(fanatic_start_date) as sdate,date(now()) as nowdate,date(fanatic_todays_date) as tdate,date(fanatic_end_date) as edate  from {user_profile} where uid='$uid'";
  $list = ExecuteQuery($query, "select");


  $diff1 = db_result(db_query("SELECT DATEDIFF('" . $list[0]['nowdate'] . "','" . $list[0]['tdate'] . "') as ddiff"));

  if ($diff1 == 1) {

    $query = "update {user_profile} set fanatic_todays_date=now() where uid='$uid'";
    db_query($query);

    if ($list[0]['nowdate'] == $list[0]['edate']) {

      $diff2 = db_result(db_query("SELECT DATEDIFF('" . $list[0]['nowdate'] . "','" . $list[0]['edate'] . "') as ddiff"));

      if ($diff2 == 0 || $diff2 == '') {

        $diff3 = db_result(db_query("SELECT DATEDIFF('" . $list[0]['nowdate'] . "','" . $list[0]['sdate'] . "') as ddiff"));

        //11 Enthusiast Badges
        if ($diff3 >= 50) {

          db_query("INSERT INTO {user_badges} (bid, uid) VALUES (%d, %d)", 11, $uid);
          $last_id = db_last_insert_id('user_badges', 'badge');

          /* New SET NOTIFY LOG */
          $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 11));
          $variable = array('bid' => '11', 'badge' => $badgeName);
          set_notify_log($uid, '', 'add_badge', $variable);
          /* New SET NOTIFY LOG */

          user_coins_update($uid, 11, '');
          // hm_mails('',$last_id,'user_badges');
          // badges_user($uid,$last_id);
          $query = "update {user_profile} set fanatic_start_date=now(),fanatic_todays_date=now(),fanatic_end_date=TIMESTAMPADD(DAY,50,NOW()) where uid='$uid'";
          db_query($query);
        }
      }
    }
  }
  else {

    // not consecutive so check its today

    $diffa = db_result(db_query("SELECT DATEDIFF('" . $list[0]['tdate'] . "','" . $list[0]['nowdate'] . "') as ddiff"));

    // if not today then reset the consecutive 30 days
    if ($diffa != 0 || $diffa == '') {

      $query = "update {user_profile} set fanatic_start_date=now(),fanatic_todays_date=now(),fanatic_end_date=TIMESTAMPADD(DAY,50,NOW()) where uid='$uid'";
      db_query($query);
    }
  }
}

// good question
function good_question($uid='') {
  //$sql = "SELECT * FROM question WHERE uid = '$uid'";
  $sql = "SELECT * FROM node WHERE uid = '$uid'";
  $quests = ExecuteQuery($sql, 'select');
  foreach ($quests as $quest) {
    //$count = db_result(db_query("SELECT COUNT(*) FROM {possible_answer_vote} AND qid = '".$quest['qid']."'"));
    $count = db_result(db_query("SELECT COUNT(*) FROM {poll_votes} AND nid = '" . $quest['nid'] . "'"));
    $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='18' AND qid = '" . $quest['nid'] . "'"));
    // count 50
    if ($count >= 1 && $badgecnt == 0) {
      db_query("INSERT INTO {user_badges} (uid,bid,qid) VALUES(%d,%d,%d)", $uid, 18, $quest['nid']);
      $last_id = db_last_insert_id('user_badges', 'badge');

      /* New SET NOTIFY LOG */
      $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 18));
      $variable = array('bid' => '18', 'badge' => $badgeName);
      set_notify_log($uid, '', 'add_badge', $variable);
      /* New SET NOTIFY LOG */

      user_coins_update($uid, 18, '');
    }
  }
}

// popular question
function popular_question($uid = '') {
  //$sql = "SELECT * FROM question WHERE uid = '$uid'";
  $sql = "SELECT * FROM node WHERE uid = '$uid'";
  $quests = ExecuteQuery($sql, 'select');
  foreach ($quests as $quest) {
    //$count = db_result(db_query("SELECT COUNT(*) FROM {possible_answer_vote} WHERE qid = '".$quest['qid']."'"));
    $count = db_result(db_query("SELECT COUNT(*) FROM {poll_votes} AND nid = '" . $quest['nid'] . "'"));
    $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='30' AND qid = '" . $quest['nid'] . "'"));
    // count 200
    if ($count >= 2 && $badgecnt == 0) {
      db_query("INSERT INTO {user_badges} (uid,bid,qid) VALUES(%d,%d,%d)", $uid, 30, $quest['nid']);
      $last_id = db_last_insert_id('user_badges', 'badge');

      /* New SET NOTIFY LOG */
      $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 30));
      $variable = array('bid' => '30', 'badge' => $badgeName);
      set_notify_log($uid, '', 'add_badge', $variable);
      /* New SET NOTIFY LOG */

      user_coins_update($uid, 30, '');
    }
  }
}

// propocative question
function provocative_question($uid = '') {
  //$sql = "SELECT * FROM question WHERE uid = '$uid'";
  $sql = "SELECT * FROM node WHERE uid = '$uid'";
  $quests = ExecuteQuery($sql, 'select');
  foreach ($quests as $quest) {
    //$count = db_result(db_query("SELECT COUNT(*) FROM {possible_answer_vote} WHERE qid = '".$quest['qid']."'"));
    $count = db_result(db_query("SELECT COUNT(*) FROM {poll_votes} AND nid = '" . $quest['nid'] . "'"));
    $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='51' AND qid = '" . $quest['nid'] . "'"));
    // count 1000
    if ($count >= 3 && $badgecnt == 0) {
      db_query("INSERT INTO {user_badges} (uid,bid,qid) VALUES(%d,%d,%d)", $uid, 51, $quest['nid']);
      $last_id = db_last_insert_id('user_badges', 'badge');

      /* New SET NOTIFY LOG */
      $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 51));
      $variable = array('bid' => '51', 'badge' => $badgeName);
      set_notify_log($uid, '', 'add_badge', $variable);
      /* New SET NOTIFY LOG */

      user_coins_update($uid, 51, '');
    }
  }
}

// add scrutineer badge 
function scrutineer($uid = '', $qid = '') {
  // get scrutineer badge id
  $count = db_result(db_query("SELECT COUNT(*) FROM {user_badges} WHERE uid = '$uid' AND bid = '44' AND qid = '$qid'"));
  if ($count == 0) {
    db_query("INSERT INTO {user_badges} (uid, bid, qid) VALUES(%d,%d,%d)", $uid, 44, $qid);

    $last_id = db_last_insert_id('user_badges', 'badge');

    /* New SET NOTIFY LOG */
    $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 44));
    $variable = array('bid' => '44', 'badge' => $badgeName);
    set_notify_log($uid, '', 'add_badge', $variable);
    /* New SET NOTIFY LOG */

    user_coins_update($uid, 44, '');
  }
}

/////// paper boy, newsstand, librarian ///////////////////

function resource_badges() {
  $tid = get_taxonomy_id('forum', 'Resource');
  $rtype = 'resource';
  $sql = "SELECT n.nid, n.uid FROM {node} n LEFT JOIN {term_node} t ON n.nid = t.nid WHERE n.type = 'forum' AND t.tid = '$tid'";
  $resources = db_query($sql);
  while ($resource = db_fetch_object($resources)) {
    $count1 = 0;
    $count2 = 0;
    $rid = $resource->nid;
    $uid = $resource->uid;
    $count1 = db_result(db_query("SELECT COUNT(*) AS total FROM {votingapi_vote} WHERE content_id = '$rid' AND content_type = 'node'"));
    $sql_res = "SELECT cid FROM {comments} WHERE nid = '$rid'";
    $comments = ExecuteQuery($sql_res, 'select');
    foreach ($comments as $comment) {
      $count2 += db_result(db_query("SELECT COUNT(*) AS total FROM {votingapi_vote} WHERE content_id = '" . $comment['cid'] . "' AND content_type = 'comment'"));
    }
    $total = $count1 + $count2;
    // paper boy, bronze
    // Resource Posted by user gets 5 agrees >4 <20
    $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='52' AND node_id = '$rid' AND type = '$rtype'"));
    if ($total > 1 && $total < 3 && $badgecnt == 0) {
      db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d', node_id = '%d', type = '%s'", $uid, 52, $rid, $rtype);
      $last_id = db_last_insert_id('user_badges', 'badge');

      /* New SET NOTIFY LOG */
      $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 52));
      $variable = array('bid' => '52', 'badge' => $badgeName);
      set_notify_log($uid, '', 'add_badge', $variable);
      /* New SET NOTIFY LOG */

      user_coins_update($uid, 52, '');
    }
    // newsstand, silver
    // Resource Posted by user gets 20 agrees >19 <50

    $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='53' AND node_id = '$rid' AND type = '$rtype'"));
    if ($total > 2 && $total < 5 && $badgecnt == 0) {
      db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d', node_id = '%d', type = '%s'", $uid, 53, $rid, $rtype);
      $last_id = db_last_insert_id('user_badges', 'badge');

      /* New SET NOTIFY LOG */
      $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 53));
      $variable = array('bid' => '53', 'badge' => $badgeName);
      set_notify_log($uid, '', 'add_badge', $variable);
      /* New SET NOTIFY LOG */

      user_coins_update($uid, 53, '');
    }
    // librarian, gold
    // Resource Posted by user gets 50 agrees >49

    $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='54' AND node_id = '$rid' AND type = '$rtype'"));
    if ($total > 4 && $badgecnt == 0) {
      db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d', node_id = '%d', type = '%s'", $uid, 54, $rid, $rtype);
      $last_id = db_last_insert_id('user_badges', 'badge');

      /* New SET NOTIFY LOG */
      $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 54));
      $variable = array('bid' => '54', 'badge' => $badgeName);
      set_notify_log($uid, '', 'add_badge', $variable);
      /* New SET NOTIFY LOG */


      user_coins_update($uid, 54, '');
    }
  }
}

/////// nice post, well put, consensus builder //////////
function debate_badges() {
  $tid = get_taxonomy_id('forum', 'Debate');
  $rtype = 'debate';
  $sql = "SELECT n.nid, n.uid FROM {node} n LEFT JOIN {term_node} t ON n.nid = t.nid WHERE n.type = 'forum' AND t.tid = '$tid'";
  $debates = db_query($sql);
  while ($debate = db_fetch_object($debates)) {
    $count1 = 0;
    $count2 = 0;
    $did = $debate->nid;
    $uid = $debate->uid;
    $count1 = db_result(db_query("SELECT COUNT(*) AS total FROM {votingapi_vote} WHERE content_id = '$did' AND content_type = 'node' AND value = '1'"));
    $sql_res = "SELECT cid FROM {comments} WHERE nid = '$did'";
    $comments = ExecuteQuery($sql_res, 'select');
    foreach ($comments as $comment) {
      $count2 += db_result(db_query("SELECT COUNT(*) AS total FROM {votingapi_vote} WHERE content_id = '" . $comment['cid'] . "' AND content_type = 'comment' AND value = '1'"));
    }
    $total = $count1 + $count2;

    // nice post, bronze
    // Debate Posted by user gets 5 agrees >4 <20

    $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='55' AND node_id = '$did' AND type = '$rtype'"));
    if ($agree['total'] > 1 && $agree['total'] < 3 && $badgecnt == 0) {
      db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d', node_id = '%d', type = '%s'", $uid, 55, $did, $rtype);
      $last_id = db_last_insert_id('user_badges', 'badge');

      /* New SET NOTIFY LOG */
      $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 55));
      $variable = array('bid' => '55', 'badge' => $badgeName);
      set_notify_log($uid, '', 'add_badge', $variable);
      /* New SET NOTIFY LOG */

      user_coins_update($uid, 55, '');
    }
    // well put, silver
    // Debate Posted by user gets 20 agrees >19 <50
    $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='56' AND node_id = '$did' AND type = '$rtype'"));
    if ($agree['total'] > 2 && $agree['total'] < 5 && $badgecnt == 0) {
      db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d', node_id = '%d', type = '%s'", $uid, 56, $did, $rtype);
      $last_id = db_last_insert_id('user_badges', 'badge');

      /* New SET NOTIFY LOG */
      $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 56));
      $variable = array('bid' => '56', 'badge' => $badgeName);
      set_notify_log($uid, '', 'add_badge', $variable);
      /* New SET NOTIFY LOG */

      user_coins_update($uid, 56, '');
    }
    // consensus builder, gold
    // Debate Posted by user gets 50 agrees >49

    $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='$uid' AND bid='57' AND node_id = '$did' AND type = '$rtype'"));
    if ($agree['total'] > 4 && $badgecnt == 0) {
      db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d', node_id = '%d', type = '%s'", $uid, 57, $did, $rtype);
      $last_id = db_last_insert_id('user_badges', 'badge');

      /* New SET NOTIFY LOG */
      $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 57));
      $variable = array('bid' => '57', 'badge' => $badgeName);
      set_notify_log($uid, '', 'add_badge', $variable);
      /* New SET NOTIFY LOG */

      user_coins_update($uid, 57, '');
    }
  }
}

//Conversation Piece, Cocktail Party, Healthy Debate
function question_res_deb_post_reply() {
  // resource
  $res_tax_tid = get_taxonomy_id('forum', 'Resource');
  $sql = "SELECT COUNT(*) as total, c.nid AS resid, c.field_ref_qid_nid AS qid FROM {content_type_forum} c LEFT JOIN {term_node} t ON c.nid = t.nid WHERE t.tid = '$res_tax_tid' GROUP BY c.field_ref_qid_nid";
  //$sql = "SELECT COUNT(*) as total, qid, uid FROM resource GROUP BY qid";
  $ress = ExecuteQuery($sql, 'select');
  foreach ($ress as $res) {
    $resource_post = $res['total'];
    $uid = db_result(db_query("SELECT uid FROM {node} WHERE nid = '%d'", $res['qid']));

    $resource_reply_post = db_result(db_query("SELECT COUNT(cid) FROM {comments} WHERE nid = '%d'", $res['resid']));

//        $resource_reply_post = db_result(db_query("SELECT SUM(total_res) AS total_resource_post FROM
//                                                    (SELECT COUNT(rid) AS total_res, qid FROM
//                                                    (SELECT r.rid, r.qid FROM resource_reply p LEFT JOIN
//                                                    resource r ON p.rid = r.rid WHERE r.qid = '".$res['qid']."')
//                                                     AS test GROUP BY rid) AS summation GROUP BY qid"));

    $resource_total = $resource_post + $resource_reply_post;
    // >19 <50 Conversation Piece
    if ($resource_total > 1 && $resource_total < 3) {
      $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='" . $uid . "' AND bid='58' AND qid = '" . $res['qid'] . "'"));
      if ($badgecnt == 0) {
        db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d', qid = '%d'", $uid, 58, $res['qid']);
        $last_id = db_last_insert_id('user_badges', 'badge');

        /* New SET NOTIFY LOG */
        $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 58));
        $variable = array('bid' => '58', 'badge' => $badgeName);
        set_notify_log($uid, '', 'add_badge', $variable);
        /* New SET NOTIFY LOG */

        user_coins_update($uid, 58, '');
      }
    }
    // >49 <100 Cocktail Party
    if ($resource_total > 2 && $resource_total < 5) {
      $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='" . $uid . "' AND bid='59' AND qid = '" . $res['qid'] . "'"));
      if ($badgecnt == 0) {
        db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d', qid = '%d'", $uid, 59, $res['qid']);
        $last_id = db_last_insert_id('user_badges', 'badge');

        /* New SET NOTIFY LOG */
        $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 59));
        $variable = array('bid' => '59', 'badge' => $badgeName);
        set_notify_log($uid, '', 'add_badge', $variable);
        /* New SET NOTIFY LOG */

        user_coins_update($uid, 59, '');
      }
    }
    // >99 Healthy Debate
    if ($resource_total > 4) {
      $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='" . $uid . "' AND bid='60' AND qid = '" . $res['qid'] . "'"));
      if ($badgecnt == 0) {
        db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d', qid = '%d'", $uid, 60, $res['qid']);
        $last_id = db_last_insert_id('user_badges', 'badge');

        /* New SET NOTIFY LOG */
        $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 60));
        $variable = array('bid' => '60', 'badge' => $badgeName);
        set_notify_log($uid, '', 'add_badge', $variable);
        /* New SET NOTIFY LOG */

        user_coins_update($uid, 60, '');
      }
    }
  }

  // debate
  $deb_tax_tid = get_taxonomy_id('forum', 'Debate');
  $sql = "SELECT COUNT(*) as total, c.nid AS debid, c.field_ref_qid_nid AS qid FROM {content_type_forum} c LEFT JOIN {term_node} t ON c.nid = t.nid WHERE t.tid = '$deb_tax_tid' GROUP BY c.field_ref_qid_nid";
  //$sql = "SELECT COUNT(*) as total, qid, uid FROM debate GROUP BY qid";
  $debs = ExecuteQuery($sql, 'select');
  foreach ($debs as $deb) {
    $debate_post = $deb['total'];

    $uid = db_result(db_query("SELECT uid FROM {node} WHERE nid = '%d'", $deb['qid']));

    $debate_reply_post = db_result(db_query("SELECT COUNT(cid) FROM {comments} WHERE nid = '%d'", $deb['debid']));

//        $debate_reply_post = db_result(db_query("SELECT SUM(total_res) AS total_resource_post FROM
//                                                 (SELECT COUNT(did) AS total_res, qid FROM
//                                                 (SELECT r.did, r.qid FROM debate_reply p LEFT JOIN
//                                                 debate r ON p.did = r.did WHERE r.qid = '".$deb['qid']."')
//                                                  AS test GROUP BY did) AS summation GROUP BY qid"));
    $debate_total = $debate_post + $debate_reply_post;
    // >19 <50 Conversation Piece
    if ($debate_total > 1 && $debate_total < 3) {
      $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='" . $uid . "' AND bid='58' AND qid = '" . $deb['qid'] . "'"));
      if ($badgecnt == 0) {
        db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d', qid = '%d'", $uid, 58, $deb['qid']);
        $last_id = db_last_insert_id('user_badges', 'badge');

        /* New SET NOTIFY LOG */
        $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 58));
        $variable = array('bid' => '58', 'badge' => $badgeName);
        set_notify_log($uid, '', 'add_badge', $variable);
        /* New SET NOTIFY LOG */

        user_coins_update($uid, 58, '');
      }
    }
    // >49 <100 Cocktail Party
    if ($debate_total > 2 && $debate_total < 5) {
      $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='" . $uid . "' AND bid='59' AND qid = '" . $deb['qid'] . "'"));
      if ($badgecnt == 0) {
        db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d', qid = '%d'", $uid, 59, $deb['qid']);
        $last_id = db_last_insert_id('user_badges', 'badge');

        /* New SET NOTIFY LOG */
        $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 59));
        $variable = array('bid' => '59', 'badge' => $badgeName);
        set_notify_log($uid, '', 'add_badge', $variable);
        /* New SET NOTIFY LOG */

        user_coins_update($uid, 59, '');
      }
    }
    // >99 Healthy Debate
    if ($debate_total > 4) {
      $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='" . $uid . "' AND bid='60' AND qid = '" . $deb['qid'] . "'"));
      if ($badgecnt == 0) {
        db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d', qid = '%d'", $uid, 60, $deb['qid']);
        $last_id = db_last_insert_id('user_badges', 'badge');

        /* New SET NOTIFY LOG */
        $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 60));
        $variable = array('bid' => '60', 'badge' => $badgeName);
        set_notify_log($uid, '', 'add_badge', $variable);
        /* New SET NOTIFY LOG */

        user_coins_update($uid, 60, '');
      }
    }
  }
}

// pundit
function pundit() {
  $sql = "SELECT cat_id,uid FROM {pundit_section} LIMIT 0,5";
  $pundits = ExecuteQuery($sql, 'select');
  // check second level category
//   $sql = "SELECT cat_id FROM {category} WHERE parent_id = '0'";
//   $cats = ExecuteQuery($sql,'select');
//   foreach($cats as $cat){
//       $catids[] = $cat['cat_id'];
//   }
//   $values = implode(",",$catids);
//
//   foreach($pundits as $pundit){
//   $sub = db_result(db_query("SELECT COUNT(cat_id) FROM {category} WHERE parent_id IN ($values) AND cat_id = '".$pundit['cat_id']."'"));
//       if($sub == 1){
//            // set pundit badge
//            $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='".$pundit['uid']."' AND bid='32' AND cat_id = '".$pundit['cat_id']."'"));
//            if($badgecnt == 0){
//                db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d', cat_id = '%d'", $pundit['uid'],32,$pundit['cat_id']);
//                $last_id =  db_last_insert_id('user_badges','badge');
//                user_coins_update($pundit['uid'],32,'');
//            }
//       }
//   }


  /* Node conversion */
  $sql = "SELECT tid FROM {term_hierarchy} WHERE parent = '0'";
  $cats = ExecuteQuery($sql, 'select');
  foreach ($cats as $cat) {
    $catids[] = $cat['tid'];
  }
  $values = implode(",", $catids);

  foreach ($pundits as $pundit) {
    $sub = db_result(db_query("SELECT COUNT(tid) FROM {term_hierarchy} WHERE parent IN ($values) AND tid = '" . $pundit['cat_id'] . "'"));
    if ($sub == 1) {
      // set pundit badge
      $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='" . $pundit['uid'] . "' AND bid='32' AND cat_id = '" . $pundit['cat_id'] . "'"));
      if ($badgecnt == 0) {
        db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d', cat_id = '%d'", $pundit['uid'], 32, $pundit['cat_id']);
        $last_id = db_last_insert_id('user_badges', 'badge');

        /* New SET NOTIFY LOG */
        $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 32));
        $variable = array('bid' => '32', 'badge' => $badgeName);
        set_notify_log($pundit['uid'], '', 'add_badge', $variable);
        /* New SET NOTIFY LOG */

        user_coins_update($pundit['uid'], 32, '');
      }
    }
  }
}

//philosopher
function philosopher() {
  $sql = "SELECT cat_id,uid FROM {pundit_section} LIMIT 0,5";
  $pundits = ExecuteQuery($sql, 'select');
//    foreach($pundits as $pundit){
//        $count = db_result(db_query("SELECT COUNT(cat_id) FROM category WHERE cat_id = '".$pundit['cat_id']."' AND parent_id = 0"));
//        if($count == 1){
//            // set philosopher badge
//            $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='".$pundit['uid']."' AND bid='61' AND cat_id = '".$pundit['cat_id']."'"));
//            if($badgecnt == 0){
//                db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d', cat_id = '%d'", $pundit['uid'],61,$pundit['cat_id']);
//                $last_id =  db_last_insert_id('user_badges','badge');
//                user_coins_update($pundit['uid'],61,'');
//            }
//        }
//    }

  /* Node conversion */
  foreach ($pundits as $pundit) {
    $count = db_result(db_query("SELECT COUNT(tid) FROM term_hierarchy WHERE tid = '" . $pundit['cat_id'] . "' AND parent = 0"));
    if ($count == 1) {
      // set philosopher badge
      $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='" . $pundit['uid'] . "' AND bid='61' AND cat_id = '" . $pundit['cat_id'] . "'"));
      if ($badgecnt == 0) {
        db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d', cat_id = '%d'", $pundit['uid'], 61, $pundit['cat_id']);
        $last_id = db_last_insert_id('user_badges', 'badge');

        /* New SET NOTIFY LOG */
        $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 61));
        $variable = array('bid' => '61', 'badge' => $badgeName);
        set_notify_log($pundit['uid'], '', 'add_badge', $variable);
        /* New SET NOTIFY LOG */

        user_coins_update($pundit['uid'], 61, '');
      }
    }
  }
}

//provocateur
function provocateur($qid, $said) {
  $userid = db_result(db_query("SELECT uid FROM {suggest_answer} WHERE said = '$said' AND qid = '$qid'"));
  $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='" . $userid . "' AND bid='62' AND qid = '$qid'"));
  if ($badgecnt == 0) {
    db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d', qid = '%d'", $userid, 62, $qid);
    $last_id = db_last_insert_id('user_badges', 'badge');

    /* New SET NOTIFY LOG */
    $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 62));
    $variable = array('bid' => '62', 'badge' => $badgeName);
    set_notify_log($userid, '', 'add_badge', $variable);
    /* New SET NOTIFY LOG */

    user_coins_update($userid, 62, '');
  }
}

// generalist
// User has voted on at least 5 questions is 10 bottom level categories (i.e categories without children subcategories)
function generalist() {
  //$sql = "SELECT DISTINCT(scat) FROM {question_cat} WHERE scat!='0' LIMIT 0,10";
//    $scats = ExecuteQuery($sql, 'select');
//    foreach($scats as $scat){
//        $arr[]=$scat['scat'];
//    }

  $vid = _get_vid('Sections');
  $sql = "SELECT tid FROM {term_data} WHERE vid = '$vid' ORDER BY tid";
  $cats = ExecuteQuery($sql, 'select');
  foreach ($cats as $cat) {
    $cat_count = db_result(db_query("SELECT COUNT(tid) FROM {term_hierarchy} WHERE parent = '" . $cat['tid'] . "'"));
    if ($cat_count == 0) {
      $arr[] = $cat['tid'];
    }
  }
  $arr = array_slice($arr, 0, 10);
  $subcategories = implode(",", $arr);
  //$sql = "SELECT COUNT(uid) AS ucount, uid FROM {possible_answer_vote} GROUP BY uid";
  $sql = "SELECT COUNT(uid) AS ucount, uid FROM {poll_votes} GROUP BY uid";
  $users = ExecuteQuery($sql, 'select');
  foreach ($users as $user) {
    if ($user['ucount'] >= 5) {
      $quest_count = 0;
      //$sql = "SELECT qid FROM {possible_answer_vote} WHERE uid = '".$user['uid']."'";
      $sql = "SELECT nid FROM {poll_votes} WHERE uid = '" . $user['uid'] . "'";
      $quests = ExecuteQuery($sql, 'select');
      foreach ($quests as $quest) {
        $count = db_result(db_query("SELECT COUNT(nid) FROM {term_node} WHERE tid IN ($subcategories) AND nid = '" . $quest['nid'] . "'"));
        if ($count > 0) {
          $quest_count = $quest_count + 1;
        }
      }
      if ($quest_count >= 5) {
        $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='" . $user['uid'] . "' AND bid='16'"));
        if ($badgecnt == 0) {
          db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d'", $user['uid'], 16);
          $last_id = db_last_insert_id('user_badges', 'badge');

          /* New SET NOTIFY LOG */
          $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 16));
          $variable = array('bid' => '16', 'badge' => $badgeName);
          set_notify_log($user['uid'], '', 'add_badge', $variable);
          /* New SET NOTIFY LOG */

          user_coins_update($user['uid'], 16, '');
        }
      }
    }
  }
}

// Well Read
// User has voted on at least 10 questions is 20 bottom level categories (i.e categories without children subcategories)
function wellread() {
//    $sql = "SELECT DISTINCT(scat) FROM {question_cat} WHERE scat!='0' LIMIT 0,20";
//    $scats = ExecuteQuery($sql, 'select');
//    foreach($scats as $scat){
//        $arr[]=$scat['scat'];
//    }

  $vid = _get_vid('Sections');
  $sql = "SELECT tid FROM {term_data} WHERE vid = '$vid' ORDER BY tid";
  $cats = ExecuteQuery($sql, 'select');
  foreach ($cats as $cat) {
    $cat_count = db_result(db_query("SELECT COUNT(tid) FROM {term_hierarchy} WHERE parent = '" . $cat['tid'] . "'"));
    if ($cat_count == 0) {
      $arr[] = $cat['tid'];
    }
  }
  $arr = array_slice($arr, 0, 20);

  $subcategories = implode(",", $arr);
  $sql = "SELECT COUNT(uid) AS ucount, uid FROM {possible_answer_vote} GROUP BY uid";
  $users = ExecuteQuery($sql, 'select');
  foreach ($users as $user) {
    if ($user['ucount'] >= 10) {
      $quest_count = 0;
      $sql = "SELECT nid FROM {poll_votes} WHERE uid = '" . $user['uid'] . "'";
      $quests = ExecuteQuery($sql, 'select');
      foreach ($quests as $quest) {
        $count = db_result(db_query("SELECT COUNT(tid) FROM {term_node} WHERE tid IN ($subcategories) AND nid = '" . $quest['nid'] . "'"));
        if ($count > 0) {
          $quest_count = $quest_count + 1;
        }
      }
      if ($quest_count >= 10) {
        $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='" . $user['uid'] . "' AND bid='63'"));
        if ($badgecnt == 0) {
          db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d'", $user['uid'], 63);
          $last_id = db_last_insert_id('user_badges', 'badge');

          /* New SET NOTIFY LOG */
          $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 63));
          $variable = array('bid' => '63', 'badge' => $badgeName);
          set_notify_log($user['uid'], '', 'add_badge', $variable);
          /* New SET NOTIFY LOG */


          user_coins_update($user['uid'], 63, '');
        }
      }
    }
  }
}

// scholer
// User has voted on at least 20 questions is 30 bottom level categories (i.e categories without children subcategories)
function scholer() {
//    $sql = "SELECT DISTINCT(scat) FROM {question_cat} WHERE scat!='0' LIMIT 0,30";
//    $scats = ExecuteQuery($sql, 'select');
//    foreach($scats as $scat){
//        $arr[]=$scat['scat'];
//    }

  $vid = _get_vid('Sections');
  $sql = "SELECT tid FROM {term_data} WHERE vid = '$vid' ORDER BY tid";
  $cats = ExecuteQuery($sql, 'select');
  foreach ($cats as $cat) {
    $cat_count = db_result(db_query("SELECT COUNT(tid) FROM {term_hierarchy} WHERE parent = '" . $cat['tid'] . "'"));
    if ($cat_count == 0) {
      $arr[] = $cat['tid'];
    }
  }
  $arr = array_slice($arr, 0, 30);

  $subcategories = implode(",", $arr);
  $sql = "SELECT COUNT(uid) AS ucount, uid FROM {possible_answer_vote} GROUP BY uid";
  $users = ExecuteQuery($sql, 'select');
  foreach ($users as $user) {
    if ($user['ucount'] >= 20) {
      $quest_count = 0;
      $sql = "SELECT nid FROM {poll_votes} WHERE uid = '" . $user['uid'] . "'";
      $quests = ExecuteQuery($sql, 'select');
      foreach ($quests as $quest) {
        $count = db_result(db_query("SELECT COUNT(tid) FROM {term_node} WHERE tid IN ($subcategories) AND nid = '" . $quest['nid'] . "'"));
        if ($count > 0) {
          $quest_count = $quest_count + 1;
        }
      }
      if ($quest_count >= 20) {
        $badgecnt = db_result(db_query("SELECT COUNT(bid) FROM {user_badges} where uid='" . $user['uid'] . "' AND bid='64'"));
        if ($badgecnt == 0) {
          db_query("INSERT INTO {user_badges} SET uid = '%d', bid = '%d'", $user['uid'], 64);
          $last_id = db_last_insert_id('user_badges', 'badge');

          /* New SET NOTIFY LOG */
          $badgeName = db_result(db_query("SELECT name FROM {badges} WHERE bid = '%d'", 64));
          $variable = array('bid' => '64', 'badge' => $badgeName);
          set_notify_log($user['uid'], '', 'add_badge', $variable);
          /* New SET NOTIFY LOG */


          user_coins_update($user['uid'], 64, '');
        }
      }
    }
  }
}

/*
 * Recalculates the user total coins value
 *
 * @uid     - User Id
 * @bid     - Badge Id
 * @keyname - Coin Name
 *
 * @returns New user's total coins value
 */
function user_coins_update($uid = '', $bid = '', $keyname = '') {
  // odyachenko disable coins
  $user = user_load(array('uid' => $uid));
  return $user->total_coins;

  # get badge name if bid is set
  if( $bid ) {
    $keyname = db_result(db_query("SELECT btype FROM {badges} WHERE bid = '%s'", $bid));
  }
  # get coin
  $coin = db_result(db_query("SELECT * FROM {tbl_coins} WHERE key_name = '%s'", $keyname));
  # add user coin
  db_query("INSERT INTO {user_coins} SET coin_key = '%s', coin_type = '%s', coin_count = '%d', uid = '%d'",
    $keyname, $coin['type'], $coin['coin_count'], $uid
  );
  # update user total coins
  $user = user_load(array('uid' => $uid));
  if( $coin['type'] == 'earn' ) {
    $user->total_coins += $coin['coin_count'];
    $message_id = 'add_coins';
  } else {
    $user->total_coins -= $coin['coin_count'];
    $message_id = 'lose_coins';
  }
  # notify log
  set_notify_log($uid, '', $message_id, array('coin_count' => $coin['coin_count'], 'coin_type' => $coin['type']));
  # save user
  user_save($user);
  return $user->total_coins;
}

/*
 * Load a comment by cid
 *
 * @uses _comment_load() from comment.module
 */
function comment_load($cid = '') {
  $comment = _comment_load($cid);
  return array(
    'type' => $comment->subject,
    'pid'  => $comment->pid,
  );
}

// get vocabulary id
function _get_vid($vocabulary_name) {
// replace dashes with spaces
  $vocabulary_name = str_replace('-', ' ', $vocabulary_name);

// find the vid
  $result = db_query("SELECT vid FROM {vocabulary} WHERE name = '%s'", $vocabulary_name);
  $vid = db_fetch_object($result)->vid;

  if ($vid) {
    return $vid;
  }
  else {
    return FALSE;
  }
}

function get_coins($key) {
  $coins = db_result(db_query("SELECT coin_count FROM {tbl_coins} WHERE key_name = '$key'"));
  return $coins;
}