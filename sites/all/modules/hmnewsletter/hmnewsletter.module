<?php

/**
 * Implementation of hook_perm().
 * @return array
 */
function hmnewsletter_perm() {
  return array('Send Newsletters');
}


/**
 * Implementation of hook_menu().
 */
function hmnewsletter_menu() 
{	
	$items['content/hmnewsletter'] = array(
		'title' => 'HMNewsLetter',
		'page callback' => 'getFollowers',		
		'access arguments' => array('Send Newsletters'),
		'type' => MENU_NORMAL_ITEM,	
	);
	
	return $items;
}

/**
 * To get the follower and followers.
 */
function getFollowers()
{	
	global $gSitePath, $user, $gDocPath, $base_root, $base_path, $theme_path, $theme, $conf;
	
	$path	= drupal_get_path('theme', 'newtheme');
	
	$follwerQ = db_query("
							SELECT `uid`, `follower_id` FROM {follower}
							ORDER BY `uid`
					");
	
	$follwers = array();
	$allfollwers = array();
	while($follwer = db_fetch_array($follwerQ))
	{
		if(!in_array($follwer['uid'], $follwers[$follwer['follower_id']]) && $follwer['uid'] != $follwer['follower_id'])
		{
			$follwers[$follwer['uid']][] = $follwer['follower_id'];
		}
		
		if(!in_array($follwer['uid'], $allfollwers))
		{
			$allfollwers[] = $follwer['follower_id'];
		}
	}	
		
	/*		
		
		print_r($allfollwers);				
		print_r($follower_activites);	
	*/
	echo '<pre>';
		print_r($follwers);	
		print_r($allfollwers);				
	exit;
	if(findtask() <= 3)
	{
		$subject = $conf['site_name'].': Monthly update';
	}
	else
	{
		$subject = $conf['site_name'].': Weekly update';
	}
	
	$follower_activites = getfolloweractivites($allfollwers);	
	
	foreach($follwers as $key => $value)
	{		
		$receiver_id = '';
		$mailcontent = '';		
		foreach($value as $val)
		{
			if(is_array($follower_activites[$val]))
			{	
				$follower_details = load_user($follower_activites[$val][0]['uid']);
				$receiver_id = $key;
				$mailcontent .= '
									<div class="avatar-box">
										<div class="avatar-box-left"><a href="'.$base_path.'profile/'.$follower_details->name.'">';
										$mailcontent 	.= 	UserPicture($follower_details->uid);
										
				$mailcontent .= '
											</a><p align="center">'.$follower_details->real_name.'</p>
										</div>                    
										<div class="avatar-box-right">';	
										$mailcontent .= preparemailcontent($follower_activites[$val], $receiver_id);				
				$mailcontent .= '
										</div> 
										<div class="clr"></div>
									</div>
								';
			}
		}
		//Save mails
		if($receiver_id != '')
		{	
			$receiver = load_user($receiver_id);
			$mail = preparemail($mailcontent, $receiver);	
//			echo "
//						INSERT INTO {hm_mails}
//						(`from_mail_id`, `user_from_id`, `user_to_id`, `subject`, `content`, `posted_date`, `mail_type`)
//						VALUES('".$conf['site_mail']."', '".$conf['site_mail']."', '$receiver->mail', '$subject', '$mail', now(), 'html')
//					";

			if(!empty($receiver->mail))
			{
			db_query("INSERT INTO {hm_mails} 
						(`from_mail_id`, `user_from_id`, `user_to_id`, `subject`, `content`, `posted_date`, `mail_type`) 
						VALUES('%s', '%s', '%s', '%s', '%s', now(), '%s')
					",$conf['site_mail'],$conf['site_mail'],$receiver->mail,$subject,$mail,'html');
					}
		}		
	}	
	return '';
}

/*
	Prepare mail
*/
function preparemail($mailcontent, $receiver)
{
	global $gSitePath, $user, $gDocPath, $base_root, $base_path, $theme_path, $theme, $conf;
	
	$path	= drupal_get_path('theme', 'newtheme');

	$mail = '';
	
	$imgw	= $gSitePath.$path."/images/logo_mail.gif";
	
	$imag	= $config['file_path'].$img;
	
	// To send HTML mail, the Content-type header must be set
	$headers  = 'MIME-Version: 1.0' . "\r\n";
	$headers .= 'Content-type: text/html; charset=iso-8859-1' . "\r\n";
	$headers .= 'From: '.$conf['site_name'].' <'.$conf['site_mail'].'>' . "\r\n";

	$mail 	.= '
			   <html>
				<head>
				 <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
				 <title>'.$conf['site_name'].'</title>
				 <style type="text/css">
				  <!--
				   *{ margin:0px; padding:0px;}
					body{ margin:0px; padding:0px;}
					img{ border:none; outline:none;}
					a{ color:#000; text-decoration:none;}
					a:hover{ text-decoration:underline;}
					.clr{ clear:both;}
						
					#email-main{ width:622px; margin:0 auto; min-height:200px; height:auto !important; height:200px; border:2px #8f8c8c solid;}
					#email-main #header{ background:#8f8c8c; padding:7px 0px; padding-left:10px;}
					#email-main #header .email-logo{ background:url('.$gSitePath.$path.'/images/email-logo.jpg) no-repeat; width:229px; height:27px;}
					#email-main #content{ margin:0px; padding:10px;}
					#email-main #content h1{ font:normal 22px Arial, Helvetica, sans-serif; color:#000; text-decoration:none;}
					#email-main #content h1 a{ font:normal 22px Arial, Helvetica, sans-serif; color:#000; text-decoration:none;}
					#email-main #content h1 a:hover{ font:normal 22px Arial, Helvetica, sans-serif; color:#000; text-decoration: underline;}
					#email-main #content h3{ font:normal 16px Arial, Helvetica, sans-serif; color:#666; text-decoration: underline;}
					#email-main #content p{ font:bold 13px Arial, Helvetica, sans-serif; color:#666666; padding:5px 0px;}
					#email-main #content p strong{ font:normal 12px Arial, Helvetica, sans-serif; color:#666666; padding:5px 0px;}
					#email-main #content h2 { font:bold 13px Arial, Helvetica, sans-serif; color:#000; padding-bottom:10px; text-decoration:none;}
					#email-main #content h2 a{ font:bold 13px Arial, Helvetica, sans-serif; color:#000; padding-bottom:10px; text-decoration:underline;}
					#email-main #content h2 a:hover{ text-decoration:none;}
					#email-main #content p a{ color:#000; text-decoration:underline; font:bold 12px Arial, Helvetica, sans-serif; color: #960;}
					#email-main #content p a:hover{ text-decoration:none;}	
					#email-main #content b{ font:normal 11px Arial, Helvetica, sans-serif; color:#666666;}
					#email-main #content .avatar-intro{ width:290px; min-height:100px; height: auto !important; height:100px; padding:10px; background:#fafafa; border:1px #ccc solid; margin-top:10px; margin-bottom:10px;}
					#email-main #content .avatar-intro ul{ padding:10px;}
					#email-main #content .avatar-intro ul li{ float:left; list-style:none; font:bold 12px Verdana, Geneva, sans-serif; color:#000; padding:5px 10px; border-right:1px #ccc solid;}
					#email-main #content .avatar-intro ul .border-none{ border:none;}
					#email-main #content .avatar-intro ul li strong{ont:bold 12px Verdana, Geneva, sans-serif; color:#999;}
					#email-main #content .avatar-intro ul li a{ float:left; list-style:none; font:bold 12px Verdana, Geneva, sans-serif; color:#000;}
					#email-main #content .avatar-intro ul li a:hover{ float:left; list-style:none; font:bold 12px Verdana, Geneva, sans-serif; color:#000; text-decoration:underline;}
					#email-main #content .avatar-intro-left{ float:left; width:70px;}
					#email-main #content .avatar-intro-right{ float:left; width:200px;}
					#email-main #content .avatar-box{ width:590px; background:#f0f0f0; padding:7px; margin-top:10px; border-bottom:1px #999 dotted; border-top:1px #999 dotted; margin-bottom:5px;}
					#email-main #content .avatar-box .avatar-box-left{ float:left; width:70px;}
					#email-main #content .avatar-box .avatar-box-left img{ border:1px #ccc solid;}
					#email-main #content .avatar-box .avatar-box-right{ float:left; width:478px; padding-left:10px;}
					.email-btn{ background:url('.$gSitePath.$path.'/images/email-btn-bg.jpg) repeat-x; padding:4px 10px; border:none; cursor:pointer; font:normal 17px Arial, Helvetica, sans-serif; color:#fff; text-decoration:none;}
					.email-btn:hover{ background:url('.$gSitePath.$path.'/images/email-btn-bg-h.jpg) repeat-x; padding:4px 10px; border:none; cursor:pointer; font:normal 17px Arial, Helvetica, sans-serif; color:#fff; text-decoration:none;}
				  -->
				 </style>
				</head>
				<body>
				<div id="email-main">
				 <div id="header">
				  <div class="email-logo"></div>
				  <div class="clr"></div>
				 </div>       
				<div class="clr"></div>
				<div id="content">
				 <p>Hi '.$receiver->real_name.'!</p>';
				 
				 $mess = '';
				 if(findtask() <= 3)
				 {
					$month_dates	= week_date_month(strtotime(date('d-m-Y')));
					$start_date		= strtotime($month_dates[0]);
					
					$mess 			= 'Here is your montly summary of Followers activity from <a href="'.$base_path.'">'.$conf['site_name'].'</a>';
				 }
				 else
				 {
					$month_dates	= week_date(strtotime(date('d-m-Y')));
					$start_date		= strtotime($month_dates[0]);
					
					$mess 			= 'Here is your weekly summary of Followers activity from <a href="'.$base_path.'">'.$conf['site_name'].'</a>';
				 }	
	
				$mail 	.= 	'<h1>Network Updates, '.date('M d', $start_date).' - '.date('M d').'</h1> <br /><div class="clr"></div><h3>'. $mess.'</h3>';
				
				$tweets 	= db_result(db_query("SELECT count(distinct `nid`) AS 'tweets' FROM node WHERE `uid` = $receiver->uid"));

				$following 	= db_result(db_query("SELECT count(distinct `uid`) AS 'following' FROM follower WHERE `follower_id` = $receiver->uid"));

				$followers 	= db_result(db_query("SELECT count(distinct `follower_id`) AS 'followers' FROM follower WHERE `uid` = $receiver->uid"));
				
				$mail 	.= 	'
								<div class="avatar-intro">
								 <div class="avatar-intro-left">';								
				$mail 	.= 	UserPicture($receiver->uid);								
				$mail 	.= 	'
								</div>
								 <div class="avatar-intro-right">
								  <h2>'.$receiver->real_name.'</h2>
								  <p><a href="'.$base_path.'profile/'.$receiver->name.'">Profile</a></p>
								  <b>'.$receiver->bio.'</b>
								 </div>
								 <div class="clr"></div>								
								 <div>
								  <ul>
								   <li>'.number_format($tweets).'<br /><strong>Post</strong></li>
								   <li>'.number_format($following).'<br /><strong>Following</strong></li>
								   <li class="border-none">'.number_format($followers).'<br /><strong>Followers</strong></li>								
								  </ul>
								 </div>
								 <div class="clr"></div>
								</div>
				';				
				$mail	.=	 $mailcontent;
				$mail 	.= 	'   
							 <div class="clr"></div>
							 <div align="center"><a href="'.$base_path.'"><input name="" type="button" value="View All Updates" class="email-btn"/></a></div>
							 <div class="clr"></div>
							 </div>
							</div>
							</body>
						   </html>
						';
	return $mail;
}

/*
	Prepare mail content
*/
function preparemailcontent($follower_activites, $receiver_id)
{
	global $gSitePath, $user, $gDocPath, $base_root, $base_path, $theme_path, $theme, $conf;
	
	$path	= drupal_get_path('theme', 'newtheme');
	
	$uid_details = load_user($follower_activites[0]['uid']);
	$uid_target_details = load_user($follower_activites[0]['uid_target']);
	
	foreach($follower_activites as $activites)
	{		
		switch($activites['message_id'])
		{
			CASE 'heartbeat_become_friends':				
				$mail .= '	
					<h2><a href="'.$base_path.'profile/'.$uid_details->name.'">'.$uid_details->real_name.'</a> is following  
						<a href="'.$base_path.'profile/'.$uid_target_details->name.'">';							
							$mail 	.= UserPicture_small($activites['uid_target']);							
				$mail .= '	
						</a>
					</h2>
					<b>'.hmnews_ago($activites['timestamp']).'.</b>					
				';				
			break;
			
			CASE 'Add_question':				
				$mail .= '<p>'.$activites['message'].'</p><b>'.hmnews_ago($activites['timestamp']).'.</b>';			
			break;
			
			CASE 'question_flag':
				$mail .= '<p>'.$activites['message'].'</p><b>'.hmnews_ago($activites['timestamp']).'.</b>';
			break;
			
			CASE 'debate_add':				
				$mail .= '<p>'.$activites['message'].'</p><b>'.hmnews_ago($activites['timestamp']).'.</b>';
			break;
			
			CASE 'debate_agree':
				$mail .= '<p>'.$activites['message'].'</p><b>'.hmnews_ago($activites['timestamp']).'.</b>';
			break;
			
			CASE 'debate_disagree':
				$mail .= '<p>'.$activites['message'].'</p><b>'.hmnews_ago($activites['timestamp']).'.</b>';
			break;
			
			CASE 'debate_reply':
				$mail .= '<p>'.$activites['message'].'</p><b>'.hmnews_ago($activites['timestamp']).'.</b>';
			break;
			
			default:
				$mail .= '<p>'.$activites['message'].'</p><b>'.hmnews_ago($activites['timestamp']).'.</b>';
			break;
		}		
	}	
	return $mail;
}

/*
	Get Followers activites
*/
function getfolloweractivites($allfollwers)
{
	$follower_activites = array();
	foreach($allfollwers as $key => $value)
	{
		//Recent 5 activites
		if(findtask() <= 3)
		{
			$month_dates	= week_date_month(strtotime(date('d-m-Y')));
			$start_date		= $month_dates[0];					
			
			$recent_activitiesQ = db_query("
											SELECT `uid`, `message_id`, `message`, `uid_target`, `timestamp` FROM {heartbeat_activity}
											WHERE `uid` = $value
											AND DATE(FROM_UNIXTIME(`timestamp`)) >= '$start_date' 
											AND DATE(FROM_UNIXTIME(`timestamp`)) <= CURDATE()
											ORDER BY `timestamp` DESC LIMIT 10
										");		
		}
		else
		{
			$month_dates	= week_date(strtotime(date('d-m-Y')));
			$start_date		= $month_dates[0];
			
			$recent_activitiesQ = db_query("
											SELECT `uid`, `message_id`, `message`, `uid_target`, `timestamp` FROM heartbeat_activity
											WHERE `uid` = $value
											AND DATE(FROM_UNIXTIME(`timestamp`)) >= '$start_date' 
											AND DATE(FROM_UNIXTIME(`timestamp`)) <= CURDATE()
											ORDER BY `timestamp` DESC LIMIT 5
										");
		}
		//create mail templates for each users
		while($recent_activities = db_fetch_array($recent_activitiesQ))
		{
			$follower_activites[$value][] =  $recent_activities;
		}
	}
	return $follower_activites;
}

/*
	Getgate and find week end or month end
*/
function findtask()
{
	$mdates = week_date_month(strtotime(date('d-m-Y')));
	$dayno	= array_keys($mdates, date('Y-m-d'));	
	return $remaining_days = count($mdates) - $dayno[0];	
}

function week_date($current_date)
{
	$ts 	= $current_date;
	$year 	= date('Y', $ts);
	$week 	= date('W', $ts);
	
	for($i=1; $i<=7; $i++) 
	{	
		$ts = strtotime($year.'W'.$week.$i);
		$week_date_array[] = date("Y-m-d", $ts);		
	}
	return $week_date_array;
}

function week_date_month($current_date)
{
	$ts 	= $current_date;
	$year 	= date('Y', $ts);
	$week 	= date('W', $ts);
	$month 	= date('m', $ts);
	
	$number_of_days = cal_days_in_month(CAL_GREGORIAN, $month, $year);
	
	for($i=1; $i<=$number_of_days; $i++) 
	{	
		if($i < 10)
		{ 
			$i = "0".$i; 
		}
		$ts = strtotime($year.$month.$i);
		$week_date_array[] = date("Y-m-d", $ts);		
	}
	return $week_date_array;
}

/*
	Implement hook_cron()
*/
function hmnewsletter_cron()
{
	//getFollowers();
}

/*
	Get date time
*/
function hmnews_ago($timestamp) 
{
    $difference = time() - $timestamp;
    $periods = array("second", "minute", "hour", "day", "week", "month", "years", "decade");
    $lengths = array("60", "60", "24", "7", "4.35", "12", "10");
    for ($j = 0; $difference >= $lengths[$j]; $j++)
        $difference /= $lengths[$j];
    $difference = round($difference);
    if ($difference != 1)
        $periods[$j].= "s";
    $text = "$difference $periods[$j] ago";
    return $text;
}

?>