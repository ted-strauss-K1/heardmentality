<?php

define('POLL_CHARACT', 3);

/**
 * @param bool $nid
 * @return array
 */
function poll_charact_get()
{
  static $cache = null;
  if (is_null($cache)) {
    $cache = array();
    $result = db_query("SELECT cid, chtext FROM {poll_charact}");
    while ($row = db_fetch_array($result)) {
      $cache[$row['cid']] = $row['chtext'];
    }
  }
  return $cache;
}

/**
 * @param $chtext
 */
function poll_charact_add($chtext)
{
  db_query("INSERT INTO {poll_charact} SET chtext = '%s'", $chtext);
}

/**
 * @param $cid
 */
function poll_charact_delete($cid)
{
  db_query("DELETE FROM {poll_charact} WHERE cid = '%d'", $cid);
//  Don't need this as we have the constraints
//  db_query("DELETE FROM {poll_charact_values} WHERE cid = '%d'", $cid);
}

/**
 * @param $cid
 * @param $chtext
 */
function poll_charact_edit($cid, $chtext)
{
  db_query("UPDATE {poll_charact} SET chtext = '%s' WHERE cid = '%d'", $chtext, $cid);
}

/**
 * @param $nid
 * @param $chorder
 * @param $cid
 * @param $value
 */
function poll_charact_value_set($nid, $chorder, $cid, $value)
{
  db_query("REPLACE {poll_charact_values} SET value = '%s' WHERE nid = '%d' AND chorder = '%d' AND cid = '%d'", $value, $nid, $chorder, $cid);
}

function poll_charact_values_get($nid, $chorder, $reset = false)
{
  static $cache = null;
  if (is_null($cache[$nid]) || $reset) {
    $cache[$nid] = array();
    $result = db_query("
      SELECT pc.chorder, pc.chtext, pch.cid, pch.chtext AS name, IFNULL(pcv.value, '%d') AS value
      FROM {poll_charact} pch JOIN {poll_choices} pc LEFT JOIN {poll_charact_values} pcv
        ON pcv.nid = pc.nid AND pcv.cid = pch.cid AND pcv.chorder = pc.chorder
      WHERE pc.nid = '%d' ORDER BY pc.chorder ASC", POLL_CHARACT, $nid
    );
    while ($row = db_fetch_array($result)) {
      $cache[$nid][$row['chorder']][$row['cid']] = $row;
    }
  }
  return $cache[$nid][$chorder];
}

/**
 * @param $nid
 * @return mixed
 */
function poll_charact_values($nid)
{
  static $cache = array();

  if (is_null($cache[$nid])) {
    $result = db_query("SELECT pc.cid, pch.chorder, pc.chtext, IFNULL(pcv.value, '%d') AS chval FROM {poll_choices} pch, {poll_charact} pc LEFT JOIN {poll_charact_values} pcv ON pc.cid = pcv.cid AND pcv.nid = pch.nid AND pcv.chorder = pch.chorder WHERE pch.nid =  '%d'", POLL_CHARACT, $nid);
    while ($row = db_fetch_array($result)) {
      $cache[$nid][$row['chorder']][$row['cid']] = $row;
    }
  }

  return $cache[$nid];
}

/**
 * Implementation of hook_nodeapi()
 */
function poll_charact_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL)
{
  if ($node->type == 'poll') {
    if ($op == 'delete') {
      db_query("DELETE FROM {poll_charact_values} WHERE nid = '%d'", $node->nid);
    }
  }
}