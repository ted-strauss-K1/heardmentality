<?php

/**
 * Include User Pages
 */
include_once "user_profile.inc";

/**
 * Implementaton of hook_enable()
 */
function user_profile_enable() {
  # set correct username definition
  if (module_exists('email_registration')) {
    db_query("UPDATE {system} SET weight = '%d' WHERE name = '%s'", 100, 'user_profile');
  }
}

/**
 * Define privacy prefix
 */
define('USER_PROFILE_PRIVACY_PREFIX', 'private_');

/**
 * Implementaton of hook_init()
 */
function user_profile_init() {
  # get privacy values for profile fields
  if (user_is_logged_in()) {
    global $user;
    profile_load_profile($user);
    $private_fields = profile_privacy_get_user_privacy($user->uid);
    foreach ($private_fields as $field_name => $private) {
      $user->{USER_PROFILE_PRIVACY_PREFIX . $field_name} = $private;
    }
  }
}

/**
 * Implementation of hook_profile_privacy_access_info()
 *
 * @return array
 */
function user_profile_profile_privacy_access_info() {
  return array(
    'authorized' => array(
      'label'           => t('Authorized'),
      'description'     => t('All authorized users can see this piece of information about you'),
      'access callback' => 'user_is_logged_in',
    ),
    'followers'  => array(
      'label'           => t('Followers'),
      'description'     => t('Only followers can see this piece of information about you'),
      'access callback' => 'user_profile_privacy_follower_access_callback',
    ),
  );
}

/**
 * Profile privacy values
 *
 * @return array
 */
function user_profile_profile_privacy_values() {
  static $values = NULL;
  if (is_null($values)) {
    $values = module_invoke_all('profile_privacy_access_info');
  }
  return $values;
}

/**
 * Implementation of hook_form_alter()
 *
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function user_profile_form_alter(&$form, &$form_state, $form_id) {
  # alter register form
  if ($form_id == 'user_register') {
    $form['#title'] = '';
    $form['mail']['#title'] = __("What's your email address?", array('@code' => 'user_profile-18'));
    $form['mail']['#description'] = '';
    $form['pass']['#description'] = '';
    $form['name']['#description'] = '';
    if ('admin' != arg(0)) {
      $form['submit']['#value'] = __('Sign up', array('@code' => 'user_profile-19'));
    }
    $form['#validate'][] = 'user_profile_register_form_validate';
    $form['news'] = array(
      '#type'          => 'checkbox',
      '#title'         => __('Yes, send me useful news about Heard Mentality.', array('@code' => 'user_profile-20')),
      '#default_value' => 1,
    );
    $form['terms'] = array(
      '#type'  => 'checkbox',
      '#title' => __('I agree to the', array('@code' => 'user_profile-24')) . ' ' . l(__('Terms of use', array('@code' => 'user_profile-21')), 'terms', array('attributes' => array('target' => '_blank'))) . ' ' . __('and', array('@code' => 'user_profile-22')) . ' ' . l(__('Privacy Policy', array('@code' => 'user_profile-23')), 'privacy', array('attributes' => array('target' => '_blank'))),
    );
  }

  # alter lofin form
  if ($form_id == 'user_login') {
    $form['name']['#description'] = '';
    $form['pass']['#description'] = '';
  }

  # alter redirects
  if ($form_id == 'user_register') {
    // if we want to redirect to edit page
    // $form['#redirect'] = array("user/profile/edit");
    //$form['#redirect'] = $_GET['q'];
    //unset($_REQUEST['destination']);
  }
  if ($form_id == 'user_login') {
    // if we want to redirect to view page
    // $form['#redirect'] = "user/profile/view";
    //$form['#redirect'] = $_GET['q'];
    //unset($_REQUEST['destination']);
  }

  # alter profile fields form to cache values
  if ($form_id == 'profile_field_form') {
    $form['#submit'][] = 'user_profile_cache_fields';
  }

  # put ulogin to the bottom of form
  if (isset($form['ulogin'])) {
    $form['ulogin']['#weight'] = 100;
  }
}

/**
 * @param $form
 * @param $form_state
 */
function user_profile_register_form_validate($form, $form_state) {
  $value = $form_state['values']['terms'];
  if (0 == $value) {
    form_set_error('terms', __('You must agree with the Terms of Use and Privacy Policy to get an account.', array('@code' => 'user_profile-25')));
  }
}

/**
 *
 */
define('PROFILE_FIELDMAP', 'profile_fieldmap');

/**
 * Save the field map
 */
function user_profile_cache_fields() {
  $result = db_query('SELECT * FROM {profile_fields}');
  $fields = array();
  while ($field = db_fetch_object($result)) {
    if ($field->name == 'profile_lat' || $field->name == 'profile_lng') {
      $fields[$field->name] = $field;
    }
  }

  variable_set(PROFILE_FIELDMAP, $fields);
}

/**
 * Implementation of hook_block()
 *
 * @param string $op
 * @param int    $delta
 * @param array  $edit
 *
 * @return mixed
 */
function user_profile_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':

      foreach (array('right', 'bottom') as $place) {
        $blocks['user-profile-' . $place] = array(
          'info' => 'User Profile Complete Percent (' . ucfirst($place) . ')',
        );
      }
      return $blocks;

    case 'view':

      foreach (array('right', 'bottom') as $place) {
        if ($delta == 'user-profile-' . $place) {
          $block['subject'] = '';
          $block['content'] = theme('user_profile_' . $place);
        }
      }

      return $block;
  }
}


/**
 *
 *
 * @param $account
 * @param $field
 *
 * @return mixed
 */
function user_profile_privacy_follower_access_callback($account, $field) {
  static $list = array();
  if (!isset($list[$account->uid])) {
    if (module_exists('follower')) {
      $list[$account->uid] = FALSE !== follower_status($account->uid);
    }
    else {
      $list[$account->uid] = FALSE;
    }
  }
  return $list[$account->uid];
}



