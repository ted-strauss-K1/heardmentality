<?php

/**
 * Implementation of hook_enable()
 */
function poll_translate_enable()
{
  db_query("UPDATE {system} SET weight = '%d' WHERE name = 'poll_translate'", 100);
}

/**
 * Implementation of hook_nodeapi()
 *
 * There we replace some data in SIDE poll with CORE one
 *
 * @param $node
 * @param $op
 * @param null $a3
 * @param null $a4
 */
function poll_translate_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL)
{
  if ($node->type == 'poll') {
    switch ($op) {
      case 'load' :
        if ($node->tnid != 0 && $node->tnid != $node->nid) {
          $node->origin = node_load($node->tnid);
          # choices
          foreach ($node->choice as $chorder => &$choice) {
            $choice['chvotes'] = $node->origin->choices[$chorder]['chvotes'];
          }
          # poll suggestions
          if (module_exists("poll_suggest")) {
            $node->vote_suggest = $node->origin->vote_suggest;
            foreach ($node->choice_suggest as $i => &$choice) {
              $choice['chid'] = $node->origin->choice_suggest[$i]['chid'];
            }
          }
        }
        break;
    }
  }
}


/**
 * Implementation of hook_content_translate_node()
 *
 * @param $node
 * @param $language_to
 */
function poll_translate_content_translate_node($node, $language_to)
{
  if (!$node) {
    return;
  }
  # check if the node is translated to that language already
  if (db_result(db_query("SELECT * FROM {node} WHERE tnid = '%d' AND language = '%s'", $node->nid, $language_to))) {
    return;
  }

  $language_from = $node->language;

  # Collect data to translate
  $list = array();
  if ($title = strip_tags($node->title)) {
    $list[] = $title;
  }
  if ($body = strip_tags($node->body)) {
    $list[] = $body;
  }
  foreach ($node->choice as $choice) {
    if (!empty($choice['chtext'])) {
      $list[] = $choice['chtext'];
    }
    if (!empty($choice['chtext_short'])) {
      $list[] = $choice['chtext_short'];
    }
  }
  if (module_exists('poll_suggest')) {
    foreach ($node->choice_suggest as $choice) {
      if (!empty($choice['chtext'])) {
        $list[] = $choice['chtext'];
      }
    }
  }

  # Translate
  $translations = mstapi_exec($language_from, $language_to, $list);

  # set the node as translated
  if ($node->tnid == 0) {
    db_query("UPDATE {node} SET tnid = '%d' WHERE nid = '%d'", $node->nid, $node->nid);
  }

  # Create new node based on existing
  $_node = clone($node);
  $_node->tnid = $node->nid;
  $_node->language = $language_to;
  foreach ($_node->choice as $chorder => &$choice) {
    $choice['chvotes'] = 0;
  }
  unset($_node->nid);

  # use translations
  $_node->title = $translations[strip_tags($_node->title)];
  $_node->body = $translations[strip_tags($_node->body)];
  foreach ($_node->choice as $chorder => &$choice) {
    $choice['chtext'] = $translations[$choice['chtext']];
    poll_ext_chtext_short_set($_node->nid, $chorder, $translations[$choice['chtext_short']]);
  }
  node_save($_node);

  if (module_exists('poll_suggest')) {
    foreach ($_node->choice_suggest as $choice) {
      poll_suggest_add($_node->nid, $translations[$choice['chtext']], $choice['uid']);
    }
  }
}


