<?php

/**
 * Implementation of hook_enable()
 */
function poll_translate_enable()
{
  db_query("UPDATE {system} SET weight = '%d' WHERE name = 'poll_translate'", 100);
}

/**
 * Implementation of hook_nodeapi()
 *
 * There we replace some data in SIDE poll with CORE one
 *
 * @param $node
 * @param $op
 * @param null $a3
 * @param null $a4
 */
function poll_translate_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL)
{
  if ($node->type == 'poll') {
    switch ($op) {
      case 'presave' :
        if ($node->t) {
          foreach ($node->t as $language => $data) {
            foreach ($data as $field => $list) {
              if (is_array($list)) {
                foreach ($list as $field_order => $text) {
                  content_translate_add('node', $node->nid, $language, $field, $text, $field_order);
                }
              } else {
                content_translate_add('node', $node->nid, $language, $field, $list);
              }
            }
          }
          unset($node->t);
        }
      break;
      case 'load' :
        $node->t = content_translate_get('node', $node->nid);
      break;
    }
  }
}


/**
 * Implementation of hook_content_translate_node()
 *
 * @param $node
 * @param $language_to
 */
function poll_translate_content_translate_node($node, $language_to)
{
  if (!$node) {
    return;
  }

  # translation array
  if (!isset($node->t)) {
    $node->t = array();
  }

  # check if the node was translated to that language
  if (isset($node->t[$language_to])) {
    return;
  } else {
    $node->t[$language_to] = array();
  }

  # pointer
  $t = &$node->t[$language_to];

  # language to translate from
  $language_from = $node->language;

  # Collect data to translate
  $list = array();
  if ($title = strip_tags($node->title)) {
    $list[] = $title;
  }
  if ($body = strip_tags($node->body)) {
    $list[] = $body;
  }
  foreach ($node->choice as $choice) {
    if (!empty($choice['chtext'])) {
      $list[] = $choice['chtext'];
    }
    if (!empty($choice['chtext_short'])) {
      $list[] = $choice['chtext_short'];
    }
  }
  if (module_exists('poll_suggest')) {
    foreach ($node->choice_suggest as $choice) {
      if (!empty($choice['chtext'])) {
        $list[] = $choice['chtext'];
      }
    }
  }

  # Translate
  $translations = mstapi_exec($language_from, $language_to, $list);

  # put the translations to node
  $t['title'] = $translations[strip_tags($node->title)];
  $t['body'] = $translations[strip_tags($node->body)];
  foreach ($node->choice as $choice) {
    $t['choice'][$choice['chorder']] = $translations[$choice['chtext']];
    $t['choice_short'][$choice['chorder']] = $translations[$choice['chtext_short']];
  }
  if (module_exists('poll_suggest')) {
    foreach ($node->choice_suggest as $choice) {
      $t['choice_suggest'][$choice['chid']] = $translations[$choice['chtext']];
    }
  }

  node_save($node);
}


