<?php

/*
 * Implementation of hook_init()
 */
function follower_init() {
  drupal_add_js( drupal_get_path('module', 'follower').'/follower.js' );
  drupal_add_js( 'misc/jquery.form.js' );
}

/*
 * Follower path
 */
define('FOLLOWER_PATH', 'follower');

/*
 * Implementation of hook_menu()
 */
function follower_menu() {
  $menu = array();

  $menu[FOLLOWER_PATH] = array(
    'page callback'     => 'follower_page',
    'page arguments'    => array(1),
    'access arguments'  => array('access content'),
    'type'              => MENU_CALLBACK,
  );

  $menu[FOLLOWER_PATH . '/save'] = array(
    'page callback'     => 'follower_page_save',
    'access arguments'  => array('access content'),
    'type'              => MENU_CALLBACK,
  );

  return $menu;
}

/*
 * Implementation of hook_theme()
 */
function follower_theme() {
  $theme = array();

  $theme['follower_button'] = array(
    'arguments' => array(
      'follow' => NULL,
    ),
  );

  return $theme;
}

/*
 * Follower Button theme call
 */
function theme_follower_button($follow) {
  if (user_is_logged_in()) {
    $text = follower_status($follow->uid) === false ? t('Follow') : t('Unfollow');
    return l(t($text), FOLLOWER_PATH.'/'.$follow->uid.'/',
      array('attributes' => array(
        'class' => 'button light follower',
        'name'  => $follow->uid,
      ))
    );
  }
}

/*
 * Follower popup contents
 */
function follower_page($follow_uid) {
  $form = drupal_get_form('follower_form', user_load($follow_uid));
  $response = array( 'text' => $form );
  $response += follower_strings();
  drupal_json($response);
}

/*
 * Text
 */
function follower_strings() {
  return array(
    'follow' => t('Follow'),
    'unfollow' => t('Unfollow'),
    'followtext' => t('You now follow this user'),
    'unfollowtext' => t('You now unfollow this user'),
  );
}
/*
 * Follower form
 */
function follower_form(&$form, $follow) {
  $form = array();

  $form['#attributes'] = array(
    'class' => 'follower_form'
  );
  $form['#action'] = '/'.FOLLOWER_PATH . '/save';

  if (user_is_logged_in()) {
    $text = follower_status($follow->uid) === false ? t('follow') : t('unfollow');
    $text = t('Are you sure you want to ') . $text . t(' this user?');
    $form['title'] = array(
      '#type'  => 'markup',
      "#value" => $text,
    );
  }

  $form['follow_uid'] = array(
    '#type'  => 'hidden',
    "#value" => $follow->uid,
  );
  $form['rtid'] = array(
    '#type' => 'hidden',
    '#default_value' => 1,
  );

  return $form;
}

/*
 * Follower form submit
 */
function follower_page_save() {
  global $user;
  $post = $_POST;
  if (($rid = follower_status($post['follow_uid'])) === false) {
    $relationship = new stdClass();
    $relationship->requester = $user;
    $relationship->requestee = user_load($post['follow_uid']);
    $relationship->type = user_relationships_type_load($post['rtid']);
    user_relationships_request_relationship($relationship);
    if (module_exists("notifications")) {
      # TODO -- add notification
      # @see add_follow_notify
    }
  } else {
    $relationship = user_relationships_load($rid);
    user_relationships_delete_relationship($relationship, $user);
  }
  $response = follower_strings();
  drupal_json($response);
}

/*
 * Check if user follows another
 */
function follower_status($follow_uid, $uid = '') {
  if (empty($uid)) {
    global $user;
    $uid = $user->uid;
  }
  return db_result(db_query("SELECT rid FROM {user_relationships} WHERE requester_id = '%d' AND requestee_id = '%d'", $uid, $follow_uid));
}