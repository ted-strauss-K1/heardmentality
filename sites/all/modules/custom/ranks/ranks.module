<?php

/*
 * Implementation of hook_perm()
 */
function ranks_perm() {
  return array('Administer Ranks');
}

/*
 * Implementation of hook_menu()
 */
function ranks_menu() {
  $menu = array();

  # ranks menu edit
  $menu['admin/ranks'] = array(
    'title' => t('Ranks'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ranks_form'),
    'access arguments' => array('Administer Ranks'),
    'type' => MENU_SUGGESTED_ITEM,
    'file' => 'ranks.admin.inc',
  );

  return $menu;
}

/*
 * Get the list of ranks
 */
function ranks_get() {
  static $ranks = null;
  if (is_null($ranks)) {
    $ranks = array();
    $result = db_query('SELECT * FROM {module_ranks} ORDER BY points ASC');
    while( $rank = db_fetch_array($result) ) {
      $ranks[] = $rank;
    }
    if( empty($ranks) ) {
      $ranks[] = array('id' => 0, 'name' => 'Citizen', 'points' => 0);
    }
  }
  return $ranks;
}

/**
 * Implementation of hook_user()
 */
function ranks_user($op, &$edit, &$account, $category = NULL) {
  switch ($op) {
    case 'load' :
      $account->rank = ranks_user_rank($account->uid);
      break;
  }
}

/**
 * Implementation of hook_init()
 */
function ranks_init() {
  global $user;
  $edit = array();
  ranks_user('load', $edit, $user);
}

/**
 * Get the user's rank
 */
function ranks_user_rank($uid) {
  $ranks = ranks_get();
  $up = up_userpoints_get($uid);
  $rank = $ranks[0];
  for( $i = 0; $i < count($ranks); $i++ ) {
    if ($up >= $ranks[$i]['points'] ) {
      $rank = $ranks[$i];
    } else {
      break;
    }
  }
  # rules event to see if user got new rank
  return $rank + array('up' => $up);
}