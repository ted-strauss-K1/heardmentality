<?php

/**
 * Get the node type vocabularies
 *
 * @param string $type
 * @return mixed
 */
function taxonomy_node_type_vocabularies($type = 'poll')
{
  static $vids = array();

  if (is_null($vids[$type])) {
    $vids[$type] = array();
    $result = db_query("SELECT vid FROM {vocabulary_node_types} WHERE type = '%s'", $type);
    while ($vid = db_result($result)) {
      $vids[$type][] = $vid;
    }
  }

  return $vids[$type];
}

/**
 * Get Bottom-level Categories  (Leaves of taxonomy)
 *
 * @param $vid
 * @return mixed
 */
function taxonomy_bottom_level_terms($vid)
{
  static $_list = array();

  if (isset($list[$vid])) {
    return $list[$vid];
  }
  $list = array();
  $terms = taxonomy_get_tree($vid);
  foreach ($terms as $term) {
    $list[$term->tid] = $term;
    foreach ($term->parents as $parent) {
      if ($parent != 0) {
        unset($list[$parent]);
      }
    }
  }
  $_list[$vid] = array_keys($list);

  return $_list[$vid];
}

/**
 * Get the node type terms
 *
 * @param string $type
 * @return mixed
 */
function taxonomy_node_type_terms($type = 'poll') {
  static $terms = array();

  if (is_null($terms[$type])) {
    $terms[$type] = array();

    $vids = taxonomy_node_type_vocabularies($type);
    foreach ($vids as $vid) {
      foreach (taxonomy_get_tree($vid) as $term) {
        $terms[$type][$term->tid] = $term;
      }
    }

  }

  return $terms[$type];
}