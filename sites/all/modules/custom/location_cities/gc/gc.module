<?php

//
include_once "gc.php";

/**
 *
 */
function gc_menu() {
  $menu = array();

  $menu['gc'] = array(
    'page callback' => 'gc',
    'access arguments' => array('administer site configuration'),
  );

  return $menu;
}

/**
 *
 */
function gc() {
  $function = 'gc_' . $_REQUEST['action'];
  if (function_exists($function)) {
    $function();
  }
}

/**
 * @return array
 */
function gc_countries() {
  return location_get_iso3166_list();
}

/**
 * @return array
 */
function gc_countries_gids() {
  $cid = 'gc_countries_gids';

  # check cache
  if (0 !== ($cache = cache_get($cid))) {
    return $cache->data;
  }

  # fetch data
  $countries = gc_countries();
  $country2gid = array();
  $file = gc_directory('data') . '/countryInfo.txt';
  $f = fopen($file, 'r');
  $cols = array();
  while ($s = fgets($f)) {
    if (!$cols) {
      if (false !== strpos($s, "#ISO")) {
        $cols = gc_readtabline(substr(strtolower($s), 1));
      }
      continue;
    }

    $data = array_combine($cols, gc_readtabline($s));

    $iso = strtolower($data['iso']);
    $gid  = $data['geonameid'];

    if (isset($countries[$iso])) {
      $country2gid[$iso] = $gid;
    }
  }
  fclose($f);

  # save cache
  cache_set($cid, $country2gid);

  #
  return $country2gid;
}

/**
 *
 */
function gc_regions() {
  $cid = 'gc_countries_regions';

  # check cache
  if (0 !== ($cache = cache_get($cid))) {
    return $cache->data;
  }

  # fetch data
  $regions = array();
  $country2gid = gc_countries_gids();
  foreach ($country2gid as $iso => $gid) {

    # geonames request
    $response = geonames_query('children',
      array('style' => 'full', 'geonameid' => $gid),
      array('qs' => 'f'));
    if ($response && $response->results) {
      foreach ($response->results as $result) {

        $name = $result["name"];
        $iso_code = $result["iso3166-2"];
        $adm_code = $result["admincode1"];
        $fcode = $result["fcode"];
        $gid = $result["geonameid"];

        if ('ADM1' != $fcode) {
          continue;
        }

        if (!$iso_code) {
          $iso_code = $adm_code;
          // echo $iso . ' ' . $adm_code . ' ' . $name . ' '  . "\n";
        }

        if (!$adm_code) {
          // echo $iso . ' ' . $adm_code . ' ' . $name . ' '  . "\n";
        }

        $regions['name'][$gid] = $name;
        $regions['code'][$gid] = array('country' => $iso, 'province' => $iso_code);
        $regions['data'][$iso][$iso_code] = $gid;
        $regions['code_adm'][$gid] = array('country' => $iso, 'province' => $adm_code);
        $regions['data_adm'][$iso][$adm_code] = $gid;

      }
    }
  }

  # save cache
  cache_set($cid, $regions);

  #
  return $regions;
}


/**
 *
 */
function gc_cities() {
  $cid = 'gc_cities';
  $cid_r = 'gc_countries_regions';

  # check cache
  if (0 !== ($cache = cache_get($cid))) {
    return $cache->data;
  }

  $cities = array();
  $regions = gc_regions();

  #
  $file = gc_directory('data') . '/cities15000.txt';
  $f = fopen($file, 'r');
  $cols = explode(",",
    "geonameid,name,asciiname,alternatenames,latitude,longitude,feature class,feature code,country code,cc2,".
      "admin1 code,admin2 code,admin3 code,admin4 code,population,elevation,dem,timezone,modification date");
  while ($s = fgets($f)) {
    $data = array_combine($cols, gc_readtabline($s));

    $gid = $data['geonameid'];
    $name = $data["asciiname"];
    $iso = strtolower($data["country code"]);
    $adm_code = $data["admin1 code"];

    if (!$adm_code || !$regions['data_adm'][$iso][$adm_code]) {
      if ($data['population'] > 3000000) {
        $regions['name'][$gid] = $name;
        $regions['code'][$gid] = array('country' => $iso, 'province' => $adm_code);
        $regions['data'][$iso][$adm_code] = $gid;
        $regions['code_adm'][$gid] = array('country' => $iso, 'province' => $adm_code);
        $regions['data_adm'][$iso][$adm_code] = $gid;
      }
      continue;
    } else {
      $gid2 = $regions['data_adm'][$iso][$adm_code];

      $cities['name'][$gid] = $name;
      $cities['code'][$gid] = $gid2;
      $cities['back'][$gid2][] = $gid;
    }



  }
  fclose($f);

  # save cache
  cache_set($cid, $cities);
  cache_set($cid_r, $regions);

  #
  return $cities;
}

/**
 *
 */
function gc_supported() {
  $countries = gc_countries();
  $regions_data = gc_regions();
  $cities_data = gc_cities();

  $dir_reg = gc_directory('supported_reg');
  $dir_cit = gc_directory('supported_cit');

  foreach ($countries as $country_code => $country_name) {

    $file_cit = $dir_cit . '/location.'.$country_code.'.inc';
    file_put_contents($file_cit, "<?php\n");

    $list_reg = array();

    foreach ($regions_data['data'][$country_code] as $region_code => $region_gid) {
      $region_code = preg_replace('/\W/', '_', $region_code);
      $region_name = $regions_data['name'][$region_gid];

      $list_reg[$region_code] = $region_name;

      $list_cit = array();

      $cities = $cities_data['back'][$region_gid];
      foreach ($cities as $city_gid) {
        $city_name = $cities_data['name'][$city_gid];

        $list_cit[$city_gid] = $city_name;
      }

      //
      $func_cit = location_cities_function_name($country_code . '_' . $region_code);

      file_put_contents($file_cit, "\n\n" . gc_function_text($func_cit, $list_cit), FILE_APPEND);
    }

    //
    $func_reg = 'location_province_list_' . $country_code;
    $file_reg = $dir_reg . '/location.'.$country_code.'.inc';

    file_put_contents($file_reg, "<?php\n\n". gc_function_text($func_reg, $list_reg));
  }

  // echo gc_function_text('x', array('x'=>'y', 't'=>'z'));

}

/**
 *
 */
function gc_translate_reg() {
  //

  $countries = location_get_iso3166_list();
  foreach ($countries as $country_code => $country_name) {
    register_t($country_name, 'location');

    $regions = location_get_provinces($country_code);
    foreach ($regions as $region_code => $region_name) {
      register_t($region_name, 'location');

      $cities = location_get_cities($country_code, $region_code);
      foreach ($cities as $city_code => $city_name) {
        register_t($city_name, 'location');
      }
    }
  }

}

/**
 *
 */
function gc_translate_set() {

  // INSERT INTO locales_target (SELECT ls.lid, ls.source, 'ru', 0,0,0,0 FROM locales_source ls WHERE ls.textgroup = 'location') 

}
