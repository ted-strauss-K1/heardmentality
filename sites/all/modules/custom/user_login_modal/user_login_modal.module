<?php

/**
 * No form here. Just come along.
 *
 * @return array
 */
function user_login_modal_form() {
  $form = array();

  $form['#suffix'] = theme('user_login_modal_form_content');

  return $form;
}

/**
 * Implementation of hook_theme()
 *
 * @return array
 */
function user_login_modal_theme() {
  $theme = array();

  $theme['user_login_modal_form_content'] = array(
    'arguments' => array(),
    'template'  => 'user_login_modal',
  );

  $theme['user_login_modal'] = array(
    'arguments' => array(),
  );

  $theme['user_login_modal_class'] = array(
    'arguments' => array('force' => FALSE),
  );

  return $theme;
}

/**
 * Access to the custom forms from colorbox/form path
 *
 * @param $form_id
 *
 * @return bool
 */
function user_login_modal_colorbox_form_access($form_id) {
  return user_is_anonymous() && ('user_login_modal_form' == $form_id);
}

/**
 * Theme "user_login_modal"
 *
 * @return string
 */
function theme_user_login_modal() {
  global $user;
  return '<p>
    <a id="dialog_link"
        class="ui-state-default ui-corner-all login ' . theme('user_login_modal_class') . '"
        href="' . (user_is_logged_in() ? '#' : url('user/login')) . '"><i class="icon-user"></i><span>' . (user_is_logged_in() ? $user->name : t('Login')) . '</span></a></p>';
}

/**
 * @param bool $force
 *
 * @return string
 */
function user_login_modal_class($force = FALSE) {
  return !$force && user_is_logged_in() ? '' : 'openlogin_box';
}

/**
 * @param bool $force
 *
 * @return string
 */
function theme_user_login_modal_class($force = FALSE) {
  return user_login_modal_class($force);
}

/**
 * Implementation of hook_preprocess_page()
 *
 * @param $vars
 */
function user_login_modal_preprocess_page(&$vars) {
  $vars['user_login_modal'] = theme('user_login_modal');

  // drupal_add_js('misc/ahah.js');
  drupal_add_js(drupal_get_path('module', 'user_login_modal') . '/user_login_modal.js');
  drupal_add_css(drupal_get_path('module', 'user_login_modal') . '/user_login_modal.css');

  $vars['styles'] = drupal_get_css();
  $vars['script'] = drupal_get_js();
}

/**
 * @param $vars
 */
function user_login_modal_form_alter(&$form, &$form_state, $form_id) {
  if ('user_login' == $form_id || 'user_register' == $form_id) {
    if (('colorbox' == arg(0)) && ('form' == arg(1))) {
      $form['#action'] = url(str_replace('_', '/', $form_id));
    }
    user_login_modal_form_redirect($form);
  }
}

/**
 * This function handles redirects from login/register forms
 *
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function user_login_modal_form_redirect(&$form) {
  $redirect = '';

  // destination
  if ($_REQUEST['redirect']) {
    $redirect = $_REQUEST['redirect'];
  }

  //
  if (!$redirect && $form['#action']) {
    $redirect = $form['#action'];
  }

  //
  if (!$redirect && isset($_GET['q'])) {
    $redirect = $_GET['q'];
  }


  // check that user has access to the path
  $access = TRUE;
  $redirect = trim($redirect, '/');

  // get router items
  $router = menu_get_item($redirect);
  if (!$router || !$router['access']) {
    $access = FALSE;
  }

  // login paths
  $args = arg(NULL, $redirect);
  if (('user' == $args[0]) && in_array($args[1], array('login', 'register'))) {
    $access = FALSE;
  }

  // 403/404 paths
  foreach (array(403, 404) as $error) {
    if ($path = variable_get('site_' . $error, '')) {
      if ($path == $redirect) {
        $access = FALSE;
      }
    }
  }

  $form['#redirect'] = $access ? $redirect : 'user/profile/view';
}
