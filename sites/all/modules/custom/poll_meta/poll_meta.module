<?php

/**
 * Include admin panel management
 */
include_once "poll_meta.admin.inc";

/**
 * Define average (default) value
 */
define('POLL_META_AVG', 3);

/**
 * @param bool $nid
 * @return array
 */
function poll_meta_get()
{
  static $cache = NULL;

  if (is_null($cache)) {
    $cache = array();
    $result = db_query("SELECT cid, chtext FROM {poll_meta}");
    while ($row = db_fetch_array($result)) {
      $cache[$row['cid']] = $row['chtext'];
    }
  }

  return $cache;
}

/**
 * @param $chtext
 */
function poll_meta_add($chtext)
{
  db_query("INSERT INTO {poll_meta} SET chtext = '%s'", $chtext);
}

/**
 * @param $cid
 */
function poll_meta_delete($cid)
{
  db_query("DELETE FROM {poll_meta} WHERE cid = '%d'", $cid);
//  Don't need this as we have the constraints
//  db_query("DELETE FROM {poll_meta_values} WHERE cid = '%d'", $cid);
}

/**
 * @param $cid
 * @param $chtext
 */
function poll_meta_edit($cid, $chtext)
{
  db_query("UPDATE {poll_meta} SET chtext = '%s' WHERE cid = '%d'", $chtext, $cid);
}

/**
 * @param $nid
 * @param $chorder
 * @param $cid
 * @param $value
 */
function poll_meta_value_set($nid, $chorder, $uid, $cid, $value)
{
  db_query("REPLACE {poll_meta_values} SET value = '%s', nid = '%d', chorder = '%d', uid = '%d', cid = '%d'",
    $value, $nid, $chorder, $uid, $cid);
}

/**
 * @param $nid
 * @param bool $reset
 * @return mixed
 */
function poll_meta_values_get($nid, $uid, $reset = FALSE)
{
  static $cache = NULL;

  if (is_null($cache[$nid][$uid]) || $reset) {
    $cache[$nid][$uid] = array();

    $result = db_query("
      SELECT pc.chorder, pm.cid, pm.chtext, IFNULL(pmv.value, '%d') val
      FROM {poll_choices} pc
      JOIN {poll_meta} pm
      LEFT JOIN {poll_meta_values} pmv ON pmv.cid = pm.cid AND pmv.nid = pc.nid AND pmv.chorder = pc.chorder AND pmv.uid = '%d'
      WHERE pc.nid = '%d'
      ORDER BY pc.chorder, pm.cid", POLL_META_AVG, $uid, $nid
    );
    while ($row = db_fetch_array($result)) {
      $cache[$nid][$uid][$row['chorder']][$row['cid']] = $row;
    }
  }

  return $cache[$nid][$uid];
}

/**
 * @param $node
 * @param $op
 * @param null $a3
 * @param null $a4
 */
function poll_meta_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL)
{
  if ($node->type == 'poll') {
    switch ($op) {
      case 'delete' :
        db_query("DELETE FROM {poll_meta_values} WHERE nid = '%d'", $node->nid);
      break;
      case 'load' :
        global $user;
        $meta = poll_meta_values_get($node->nid, $user->uid);
        if ($node->choice) {
          foreach ($node->choice as &$choice) {
            $choice['meta'] = array();
            if (!empty($meta[$choice['chorder']])) {
              foreach ($meta[$choice['chorder']] as $cid => $value) {
                $choice['meta'][$cid] = array(
                  'chtext' => $value['chtext'],
                  'value' => $value['val'],
                );
              }
            }
          }
        }
      break;
    }
  }
}

/**
 * Implementation of hook_user()
 *
 * @param $op
 * @param $edit
 * @param $account
 * @param null $category
 */
function poll_meta_user($op, &$edit, &$account, $category = NULL)
{
  switch ($op) {
    case 'delete' :
      db_query("DELETE FROM {poll_meta_values} WHERE uid = '%d'", $account->nid);
    break;
  }
}