<?php

define('EXTRACT_PERIOD', 'd');

/**
 *
 */
function extract_cron()
{
  extract_exec();
  exit; // todo remove exit
}

/**
 * @param $needle
 * @param $haystack
 * @param bool $strict
 */
function array_remove_value($needle, &$haystack, $strict = false)
{
  if (($key = array_search($needle, $haystack, $strict)) !== false) {
    unset($haystack[$key]);
  }
}

function extract_menu() {
  $menu = array();

  $menu['extract'] = array(
    'page callback' => 'extract_exec',
    'access callback' => true,
    'type' => MENU_CALLBACK,
  );

  return $menu;
}

/**
 *
 */
function extract_exec()
{
  # file naming
  $path = 'extract.';
  switch (EXTRACT_PERIOD) {
    case 'd' :
      $path .= date('Y.m.d');
      break;
  }

  # check if file exists
  $filename = $path . '.csv';
  $filepath = 'data/' . $filename;
  $path_rel = drupal_get_path('module', 'extract') . '/' . $filepath;
  $path_abs = dirname(__FILE__) . '/' . $filepath;
  if (true || !file_exists($path_abs)) {
    set_time_limit(0);

    $f = fopen($path_abs, 'w+');

    if (!$f) {
      exit( "Cannot write to path: " . $path_abs );
      return;
    }

    # keys to look for
    $keys = array(
      'id', 'issue_id', 'issue_text', 'issue_category_l1', 'issue_category_l2', 'issue_category_l3', 'vote_answer_id', 'vote_answer_text', 'vote_increment', 'current_vote_flag', 'vote_timestamp', 'userid', 'gender', 'zip', 'country', 'state', 'city', 'religion', 'ethnicity', 'income', 'marital', 'education', 'sorient', 'age', 'left_right', 'lib_auth', 'radic_cons', 'dove_hawk',
    );

    # current year
    $y = date('Y');

    # select profile fields
    $q = "SELECT REPLACE(name, 'profile_', '') name, options FROM profile_fields WHERE type = 'selection' AND options <> ''";
    $result = db_query($q);
    while ($row = db_fetch_array($result)) {
      $selections[$row['name']] = explode("\n", $row['options']);
    }

    # select terms
    $q = "SELECT th.*, td.name FROM term_data td INNER JOIN ((SELECT * FROM th1) UNION (SELECT * FROM th2) UNION (SELECT * FROM th3)) th ON td.tid = th.tid";
    $result = db_query($q);
    while ($row = db_fetch_array($result)) {
      $terms[$row['tid']] = $row;
    }

    # select vote history
    # see charts.module for details
    $votes = array();
    $result = db_query("
      SELECT c.nid, v.*, DATE(v.cdate) AS date
      FROM {cpoll_choices} c
      INNER JOIN {cpoll_votes} v ON v.chid = c.chid
      ORDER BY v.cdate ASC");
    $cvotes = array();
    while ($row = db_fetch_array($result)) {
      if (isset($cvotes[$row['nid']][$row['uid']])) {
        $vote = $cvotes[$row['nid']][$row['uid']];
        $vote['status'] = 0;
        $votes[] = $vote;
      }
      $cvotes[$row['nid']][$row['uid']] = $row;
      $row['status'] = 1;
      $votes[] = $row;
    }

    # build query
    if (true) {
      $query = "
        SELECT
          v.vid,
          CONCAT(v.uid, '-', c.nid, '-', c.chid) AS id,
          c.nid issue_id,
          nr.title issue_text,
          (SELECT GROUP_CONCAT(tn1.tid)
            FROM term_node tn1
            WHERE
            tn1.nid = nr.nid AND
            tn1.vid = nr.vid AND
            tn1.tid IN (SELECT tid FROM th1)) issue_category_l1,
          (SELECT GROUP_CONCAT(tn2.tid)
            FROM term_node tn2
            WHERE
            tn2.nid = nr.nid AND
            tn2.vid = nr.vid AND
            tn2.tid IN (SELECT tid FROM th2)) issue_category_l2,
          (SELECT GROUP_CONCAT(tn3.tid)
            FROM term_node tn3
            WHERE
            tn3.nid = nr.nid AND
            tn3.vid = nr.vid AND
            tn3.tid IN (SELECT tid FROM th3)) issue_category_l3,
          v.chid vote_answer_id,
          c.chtext vote_answer_text,
          0 vote_increment,
          v.status current_vote_flag,
          UNIX_TIMESTAMP(v.cdate) vote_timestamp,
          MD5(CONCAT(v.uid, '=', v.uid)) userid,
          (SELECT value
            FROM profile_values pv INNER JOIN profile_fields pf ON pf.fid = pv.fid
            WHERE pf.name = 'profile_gender' AND pv.uid = v.uid) gender,
          (SELECT value
            FROM profile_values pv INNER JOIN profile_fields pf ON pf.fid = pv.fid
            WHERE pf.name = 'profile_zip' AND pv.uid = v.uid) zip,
          (SELECT value
            FROM profile_values pv INNER JOIN profile_fields pf ON pf.fid = pv.fid
            WHERE pf.name = 'profile_country' AND pv.uid = v.uid) country,
          (SELECT value
            FROM profile_values pv INNER JOIN profile_fields pf ON pf.fid = pv.fid
            WHERE pf.name = 'profile_state' AND pv.uid = v.uid) state,
          (SELECT value
            FROM profile_values pv INNER JOIN profile_fields pf ON pf.fid = pv.fid
            WHERE pf.name = 'profile_city' AND pv.uid = v.uid) city,
          (SELECT value
            FROM profile_values pv INNER JOIN profile_fields pf ON pf.fid = pv.fid
            WHERE pf.name = 'profile_religion' AND pv.uid = v.uid) religion,
          (SELECT value
            FROM profile_values pv INNER JOIN profile_fields pf ON pf.fid = pv.fid
            WHERE pf.name = 'profile_ethnicity' AND pv.uid = v.uid) ethnicity,
          (SELECT value
            FROM profile_values pv INNER JOIN profile_fields pf ON pf.fid = pv.fid
            WHERE pf.name = 'profile_income' AND pv.uid = v.uid) income,
          (SELECT value
            FROM profile_values pv INNER JOIN profile_fields pf ON pf.fid = pv.fid
            WHERE pf.name = 'profile_marital' AND pv.uid = v.uid) marital,
          (SELECT value
            FROM profile_values pv INNER JOIN profile_fields pf ON pf.fid = pv.fid
            WHERE pf.name = 'profile_education' AND pv.uid = v.uid) education,
          (SELECT value
            FROM profile_values pv INNER JOIN profile_fields pf ON pf.fid = pv.fid
            WHERE pf.name = 'profile_sorient' AND pv.uid = v.uid) sorient,
          (SELECT value
            FROM profile_values pv INNER JOIN profile_fields pf ON pf.fid = pv.fid
            WHERE pf.name = 'profile_yob' AND pv.uid = v.uid) age,
          (SELECT AVG(value)
            FROM cpoll_meta_values pmv
            WHERE pmv.chid = v.chid AND pmv.cid = 1) left_right,
          (SELECT AVG(value)
            FROM cpoll_meta_values pmv
            WHERE pmv.chid = v.chid AND pmv.cid = 2) lib_auth,
          (SELECT AVG(value)
            FROM cpoll_meta_values pmv
            WHERE pmv.chid = v.chid AND pmv.cid = 3) radic_cons,
          (SELECT AVG(value)
            FROM cpoll_meta_values pmv
            WHERE pmv.chid = v.chid AND pmv.cid = 4) dove_hawk
        FROM cpoll_votes v
        INNER JOIN cpoll_choices c ON c.chid = v.chid
        INNER JOIN node n ON n.nid = c.nid
        INNER JOIN node_revisions nr ON n.nid = nr.nid AND n.vid = nr.vid";
    }

    # write header
    fwrite($f, implode(",", $keys));
    fwrite($f, "\n");


    $analysis = array();
    $result = db_query($query);
    while ($row = db_fetch_array($result)) {

      foreach (array('left_right', 'lib_auth', 'radic_cons', 'dove_hawk') as $name) {
        if (!$row[$name]) {
          $row[$name] = CPOLL_META_AVG;
        }
      }

      // age rewrite
      if (!is_numeric($row['age'])) {
        $row['age'] = 'undefined';
      } else {
        $age = $y - intval($row['age']);
        if ($age >= 51) {
          $row['age'] = '>50';
        } elseif ($age >= 31) {
          $row['age'] = '31-50';
        } else {
          $row['age'] = '<=30';
        }
      }

      // timestamp rewrite
      $row['vote_timestamp'] = date('Y/m/d H:i:s', $row['vote_timestamp']);

      // categories rewrite
      static $node_cats = array();
      if (is_null($node_cats[$row['issue_id']])) {
        $cats = array();

        $l1 = array_filter(explode(',', $row['issue_category_l1']));
        $l2 = array_filter(explode(',', $row['issue_category_l2']));
        $l3 = array_filter(explode(',', $row['issue_category_l3']));

        foreach ($l3 as $tid) {
          $codes = explode(',', $terms[$tid]['code'], 3);
          array_remove_value($codes[0], $l1);
          array_remove_value($codes[1], $l2);
          $cats[] = $codes;
        }
        foreach ($l2 as $tid) {
          $codes = explode(',', $terms[$tid]['code'], 2);
          array_remove_value($codes[0], $l1);
          $cats[] = $codes;
        }
        foreach ($l1 as $tid) {
          $codes = explode(',', $terms[$tid]['code'], 1);
          $cats[] = $codes;
        }

        $node_cats[$row['issue_id']] = $cats;
      }
      $cats = $node_cats[$row['issue_id']];

      //
      $row['issue_category_l1'] = '%cat1';
      $row['issue_category_l2'] = '%cat2';
      $row['issue_category_l3'] = '%cat3';

      // addslashes
      foreach ($row as $k => &$v) {
        if (isset($selections[$k])) {
          $v = isset($selections[$k][$v]) && !empty($selections[$k][$v]) ? $selections[$k][$v] : 'undefined';
        } elseif (in_array($k, array('zip', 'country', 'state', 'city')) && empty($v)) {
          $v = 'undefined';
        }
        $v = "\"" . str_replace('"', '\"', $v) . "\"";
      }
      $row['vid'] = str_replace('"', '', $row['vid']);

      // prepare the lines
      if (empty($cats)) {
        $row['issue_category_l1'] = '';
        $row['issue_category_l2'] = '';
        $row['issue_category_l3'] = '';

        $analysis[$row['vid']][] = $row;
      } else {
        foreach ($cats as $line) {
          $tmp = $row;
          $tmp['issue_category_l1'] = $terms[intval($line[0])]['name'];
          $tmp['issue_category_l2'] = $terms[intval($line[1])]['name'];
          $tmp['issue_category_l3'] = $terms[intval($line[2])]['name'];

          $analysis[$row['vid']][] = $tmp;
        }
      }
    }

    foreach ($votes as $vote) {
      $vid = $vote['vid'];
      $rows = $analysis[$vid];
      foreach ($rows as $row) {
        unset($row['vid']);
        $row['vote_increment'] = $vote['status'] ? 1 : -1;
        $row = implode(",", $row) . "\n";
        fwrite($f, $row);
      }
    }

    fclose($f);
  }

  // todo send email
  if (file_exists($path_abs) && ($path_abs != variable_get('extract_file_sent', ''))) {
    $sender = variable_get('site_mail', 'dyachenko.oleg@gmail.com');
    $recipient = 'jaminstrauss@gmail.com';
//    $recipient = 'dyachenko.oleg@gmail.com';
    $subject = 'Extract from HeardMentality ('.$_SERVER["SERVER_NAME"].')' . $filename;
    $body = 'See attachment'; //body text in HTML format
    $plaintext = TRUE; //whether to send messages in plaintext-only
    $headers = array();
    $attachments[] = array(
      'filepath' => $path_rel , //you have to use relative paths.
      'filename' => $filename , // can use any alias name here
      'filemime' => 'text/csv' , // mime file type
      'list' => TRUE,
    );

    $message = mimemail($sender, $recipient, $subject, $body, $plaintext, $headers, $text = NULL, $attachments, $mailkey, $send= True);
//    var_dump($message['result']);
    variable_set('extract_file_sent', $path_abs);
  }
}