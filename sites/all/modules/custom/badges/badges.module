<?php

include('badges.implementations.inc');

/*
 * Implementation of hook_init()
 */
function badges_init()
{
  //
}

/*
 * define a permission name 
 */
define('BADGES_ADMIN', 'Administer Badges');

/*
 * Implementation of hook_perm()
 */
function badges_perm()
{
  return array('Manage Badges');
}

/*
 * Implementation of hook_menu()
 */
function badges_menu()
{
  $menu = array();

  $menu['admin/settings/badges'] = array(
    'title' => t('Badges Configuration'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('badges_form'),
    'access arguments' => array(BADGES_ADMIN),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'badges.admin.inc',
  );
  $menu['admin/settings/badges/list'] = array(
    'title' => t('List'),
    'access arguments' => array(BADGES_ADMIN),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -2,
    'file' => 'badges.admin.inc',
  );
  $menu['admin/settings/badges/import'] = array(
    'title' => t('Import'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('badges_import'),
    'access arguments' => array(BADGES_ADMIN),
    'type' => MENU_LOCAL_TASK,
    'weight' => -1,
    'file' => 'badges.admin.inc',
  );
  $menu['admin/settings/badges/export'] = array(
    'title' => t('Export'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('badges_export'),
    'access arguments' => array(BADGES_ADMIN),
    'type' => MENU_LOCAL_TASK,
    'weight' => 0,
    'file' => 'badges.admin.inc',
  );

  $menu['badges'] = array(
    'title' => t('Badges'),
    'page callback' => 'theme',
    'page arguments' => array('badges_list'),
    'access callback' => true,
  );

  return $menu;
}

/**
 * Implementation of hook_theme()
 *
 * @return array
 */
function badges_theme()
{
  $theme = array();

  $theme['badges_list'] = array(
    'arguments' => array(),
  );

  return $theme;
}

/*
 * Badge machine name
 */
function badge_machine_name($name)
{
  $name = preg_replace('/[^a-zA-Z\_]/', '_', $name);
  $name = preg_replace('/\_+/', '_', $name);
  $name = preg_replace('/(^_|_$)/', '', $name);
  $name = strtolower($name);
  return $name;
}

/*
 * Badge process function name
 */
function badge_process_fn($name)
{
  return 'badge_process_' . badge_machine_name($name);
}

/*
 * Badge id by process_fn name
 */
function badge_process_fn_invert($fname)
{
  $badges = badges_get();
  foreach ($badges as $badge) {
    if ($fname == $badge['fname']) {
      return $badge;
    }
  }
  return false;
}

/*
 * Badge implementation check
 */
function badge_implemented($name)
{
  return function_exists(badge_process_fn($name));
}

/*
 * Badges get
 */
function badges_get()
{
  static $badges = array();
  if (!empty($badges)) {
    return $badges;
  }
  $result = db_query('SELECT * FROM {module_badges} ORDER BY status ASC');
  while ($badge = db_fetch_array($result)) {
    $badge['mname'] = badge_machine_name($badge['name']);
    $badge['fname'] = badge_process_fn($badge['name']);
    $badge['implemented'] = badge_implemented($badge['name']);
    $badges[] = $badge;
  }
  return $badges;
}

/*
 * Badge types
 */
function badges_types()
{
  static $types = array();
  if (empty($types)) {
    $result = db_query("SELECT * FROM {module_badges_types}");
    while ($row = db_fetch_object($result)) {
      $types[$row->id] = $row->name;
    }
  }
  return $types;
}


/*
* Add user badge
*/
function badges_add_userbadge($uid, $badge_id)
{
  db_query("INSERT INTO {module_badges_userbadges} SET uid = '%d', badge_id = '%d'", $uid, $badge_id);
  if (module_exists('activity_stream')) {
    activity_stream_add_activity(ACTIVITY_STREAM_BADGE, array(
      'badge_id' => $badge_id,
    ));
  }
}

/*
 * Get user badges
 */
function badges_get_userbadges($uid)
{
  static $values = array();
  if (!isset($values[$uid])) {
    $list = array(
      '#stat' => array(),
      '#list' => array(),
    );
    $result = db_query("SELECT mb.*, mbt.name AS badgetype FROM {module_badges_userbadges} mbu INNER JOIN {module_badges} mb ON mb.id = mbu.badge_id RIGHT OUTER JOIN {module_badges_types} mbt ON mbt.id = mb.type WHERE mb.status = '%d' AND mbu.uid = '%d' ORDER BY mbt.id DESC", 1, $uid);
    while ($row = db_fetch_array($result)) {
      if (!isset($list['#stat'][$row['badgetype']])) {
        $list['#stat'][$row['badgetype']] = 0;
      }
      $list['#stat'][$row['badgetype']]++;
      if (!isset($list['#list'][$row['id']])) {
        $list['#list'][$row['id']] = $row;
        $list['#list'][$row['id']]['#count'] = 0;
      }
      $list['#list'][$row['id']]['#count']++;
    }
    $values[$uid] = $list;
  }
  return $values[$uid];
}

/**
 * Callback for "badges"
 */
function theme_badges_list()
{
  $output = '<div class="badges">';
  $result = db_query("
    SELECT mb.info, mb.name AS badge_name, mbt.name, COUNT(mbu.id) AS count
    FROM {module_badges} mb
    INNER JOIN {module_badges_types} mbt ON mb.type = mbt.id
    LEFT JOIN {module_badges_userbadges} mbu ON mb.id = mbu.badge_id
    WHERE mb.status = '%d'
    GROUP BY mb.id ORDER BY count DESC, mbt.id DESC", 1);
  while ($badge = db_fetch_array($result)) {
    $output .= sprintf('<div class="medal"><span class="%s" id="medal1" title="%s Medal">&nbsp;</span>&nbsp;x&nbsp;%d&nbsp;&nbsp;%s <p>%s</p></div>',
      $badge['name'], ucfirst($badge['name']), $badge['count'], $badge['badge_name'], $badge['info']);


  }
  $output .= '</div>';
  return $output;
}