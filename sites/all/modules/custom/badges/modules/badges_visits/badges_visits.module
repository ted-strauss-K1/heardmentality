<?php

/**
 * Implementation of hook_badges()
 *
 * @return array
 */
function badges_visits_badges()
{
  $badges = array();

  $badges['visits_silver'] = array(
    'function' => 'badges_visits_check',
    'function multiple' => 'badges_visits_check_multiple',
    'name' => t('Enthusiast'),
    'info' => t('Visited the site each day for 30 consecutive days'),
    'type' => 'silver',
    'arguments' => array('days' => 30),
  );
  $badges['visits_gold'] = array(
    'function' => 'badges_visits_check',
    'function multiple' => 'badges_visits_check_multiple',
    'name' => t('Fanatic'),
    'info' => t('Visited the site each day for 100 consecutive days'),
    'type' => 'silver',
    'arguments' => array('days' => 100),
  );

  return $badges;
}

/**
 * @param $uid
 * @return bool
 */
function badges_visits_check($uid, $arguments = array())
{
  static $cache;

  if (is_null($cache[$arguments['days']])) {
    $cache[$arguments['days']] = array();

    $result = db_query("SELECT uid, COUNT(DISTINCT DATE(date_added)) count FROM log WHERE date_added >= ADDDATE(CURDATE(), INTERVAL -" . $arguments['days'] . " DAY) GROUP BY uid ORDER BY uid");
    while ($row = db_fetch_array($result)) {
      $cache[$arguments['days']][$row['uid']] = $row['count'];
    }
  }

  return isset($cache[$arguments['days']][$uid]) ? $cache[$arguments['days']][$uid] == $arguments['days'] : false;
}

/**
 * @param array $uids
 * @return array
 */
function badges_visits_check_multiple($uids = array(), $arguments = array())
{
  $output = array();

  foreach ($uids as $uid) {
    $output[$uid] = badges_visits_check($uid, $arguments);
  }

  return $output;
}
