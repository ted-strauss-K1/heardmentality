<?php

/**
 * Implementation of hook_badges()
 *
 * @return array
 */
function badges_issue_badges()
{
  $badges = array();

  $badges['issue_bronze'] = array(
    'function' => 'badges_issue_check',
    'function multiple' => 'badges_issue_check_multiple',
    'name' => t('Conversation Piece'),
    'info' => t('Created a question that resulted in 20 debate posts or resource posts (including replies)'),
    'type' => 'bronze',
    'arguments' => array('count' => 20),
  );
  $badges['issue_silver'] = array(
    'function' => 'badges_issue_check',
    'function multiple' => 'badges_issue_check_multiple',
    'name' => t('Cocktail Party'),
    'info' => t('Created a question that resulted in 50 debate posts or resource posts (including replies)'),
    'type' => 'silver',
    'arguments' => array('count' => 50),
  );
  $badges['issue_gold'] = array(
    'function' => 'badges_issue_check',
    'function multiple' => 'badges_issue_check_multiple',
    'name' => t('Healthy Debate'),
    'info' => t('Created a question that resulted in 100 debate posts or resource posts (including replies)'),
    'type' => 'gold',
    'arguments' => array('count' => 100),
  );

  return $badges;
}

/**
 * @param $uid
 * @return bool
 */
function badges_issue_check($uid, $arguments = array())
{
  static $cache;

  if (is_null($cache)) {
    $cache = array();

    $result = db_query("
      SELECT n.uid, COUNT(DISTINCT(ctf.nid)) + COUNT(DISTINCT(c.cid)) count
      FROM {content_type_forum} ctf
      INNER JOIN {node} n ON n.nid = ctf.field_issue_nid
      LEFT JOIN {comments} c ON c.nid = ctf.nid GROUP BY n.nid");
    while ($row = db_fetch_array($result)) {
      if (!isset($cache[$row['uid']]) || ($cache[$row['uid']] < $row['count'])) {
        $cache[$row['uid']] = $row['count'];
      }
    }
  }

  return isset($cache[$uid]) ? $cache[$uid] >= $arguments['count'] : false;
}

/**
 * @param array $uids
 * @return array
 */
function badges_issue_check_multiple($uids = array(), $arguments = array())
{
  $output = array();

  foreach ($uids as $uid) {
    $output[$uid] = badges_issue_check($uid, $arguments);
  }

  return $output;
}