<?php

/**
 * Implementation of hook_install()
 */
function poll_ext_install()
{
//  $ret = array();
//  $field = array(
//    'type' => 'varchar',
//    'length' => 128,
//    'not null' => TRUE,
//    'default' => '',
//    'description' => 'The short text for this choice.',
//  );
//  db_add_field($ret, 'poll_choices', 'chtext_short', $field);

  drupal_install_schema('poll_ext');

  db_query("
    CREATE TRIGGER poll_vote_add AFTER INSERT ON poll_votes
    FOR EACH ROW BEGIN
       INSERT INTO poll_votes_history SET
       date_voted = NOW(),
       status = 1,
       nid = NEW.nid,
       uid = NEW.uid,
       chorder = NEW.chorder, hostname = NEW.hostname;
    END;
  ");

//  !! deprecated
//  db_query("
//    CREATE TRIGGER poll_vote_del AFTER DELETE ON poll_votes
//    FOR EACH ROW BEGIN
//       UPDATE poll_votes_history SET status = 0 WHERE
//       nid = OLD.nid AND
//       uid = OLD.uid AND
//       chorder = OLD.chorder AND
//       hostname = OLD.hostname;
//    END;
//  ");

  db_query("
    CREATE TRIGGER poll_vote_del AFTER DELETE ON poll_votes
    FOR EACH ROW BEGIN
       INSERT INTO poll_votes_history SET
       status = 0,
       nid = OLD.nid,
       uid = OLD.uid,
       chorder = OLD.chorder,
       hostname = OLD.hostname,
       date_voted = NOW();
    END;
  ");


}

/**
 * Implementation of hook_uninstall()
 */
function poll_ext_uninstall()
{
//  $ret = array();
//  db_drop_field($ret, 'poll_choices', 'chtext_short');

  db_query("DROP TRIGGER {poll_vote_add}");
  db_query("DROP TRIGGER {poll_vote_del}");

  drupal_uninstall_schema('poll_ext');
}

/**
 * Implementation of hook_schema()
 */
function poll_ext_schema()
{
  $schema = array();

  $schema['poll_votes_history'] = array(
    'description' => 'Stores per-{users} votes history for each {poll}.',
    'fields' => array(
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The {poll} node this vote is for.',
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {users}.uid this vote is from unless the voter was anonymous.',
      ),
      'chorder' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => -1,
        'description' => "The {users}'s vote for this poll.",
      ),
      'hostname' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The IP address this vote is from unless the voter was logged in.',
      ),
      'status' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 1,
      ),
      'date_voted' => array(
        'type' => 'datetime',
        'not null' => TRUE,
      ),
    ),
    'indexes' => array(
      'hostname' => array('hostname'),
      'uid' => array('uid'),
    ),
  );

  $schema['poll_choices_short'] = array(
    'description' => 'Stores information about all choices for all {poll}s.',
    'fields' => array(
      'chid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Unique identifier for a poll choice.',
      ),
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {node}.nid this choice belongs to.',
      ),
      'chtext' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The text for this choice.',
      ),
      'chorder' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The sort order of this choice among all choices for the same node.',
      )
    ),
    'indexes' => array(
      'nid' => array('nid'),
    ),
    'primary key' => array('chid'),
    'unique keys' => array(
      'nodechoice' => array('nid', 'chorder'),
    ),
  );

  return $schema;
}