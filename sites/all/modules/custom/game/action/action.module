<?php

/**
 * Implements hook_menu()
 *
 * @return array
 */
function action_menu () {
  $menu = array();

  // callbacks to queue and de-queue actions
  $menu['action/queue'] = array(
    'page callback'   => 'action_queue',
    'page arguments'  => array(),
    'access callback' => true,
  );
  $menu['action/dequeue'] = array(
    'page callback'   => 'action_dequeue',
    'page arguments'  => array(),
    'access callback' => true,
  );

  return $menu;
}

/**
 * Function to queue action
 *
 * @param array $params
 */
function action_queue ($params = null) {
  if (is_null($params)) {
    $params = $_REQUEST;
    unset($params['q']);
  }
  if (isset($params['operation']) && $params['operation']) {

    $op = $params['operation'];
    unset($params['operation']);

    $uid = intval($params['uid']);
    unset($params['uid']);

    db_query("INSERT INTO {action_queue} SET uid = '%s', op = '%s', timestamp = '%d', params = '%s'", $uid, $op, isset($params['timestamp']) ? $params['timestamp'] : time(), serialize($params));
  }
}

/**
 * Function to dequeue actions
 */
function action_dequeue () {
  // todo execute actions

  $query = "SELECT * FROM {action_queue}";
  $vars = array();

  $result = db_query($query, $vars);
  while ($item = db_fetch_array($result)) {
    var_dump($item);

    $op = $item['op'];
    $params = unserialize($item['params']);
    $params['operation'] = $op;
    #
    if ($params['logged'] && user_is_anonymous()) {
      continue;
    }
    module_invoke_all('invoke_action', $item['timestamp'], $params);
    db_query("DELETE FROM {action_queue} WHERE id = '%s'", $item['id']);
  }
  exit;
}
