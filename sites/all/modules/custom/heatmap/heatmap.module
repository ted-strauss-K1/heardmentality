<?php

/**
 * Implementation of hook_theme()
 *
 * @return array
 */
function heatmap_theme()
{
  $theme = array();

  $theme['heatmap'] = array(
    'arguments' => array(),
    'template' => 'heatmap',
    'preprocess functions' => array('theme_heatmap_preprocess'),
  );

  return $theme;
}

/**
 * Theme "heatmap" preprocess function
 *
 * @param $vars
 */
function theme_heatmap_preprocess(&$vars)
{
  drupal_add_js(drupal_get_path('module', 'heatmap') . '/heatmap.js');

  $columns = array();
  $item = new stdClass();
  $item->type = 'string';
  $item->name = 'Country';
  $columns[] = $item;

  $cases = array();
  $cases['users'] = array(
    'name' => t('Users'),
    'result' => db_query("SELECT gc.name AS country, COUNT(*) AS count FROM {profile_fields} pf INNER JOIN {profile_values} pv ON pv.fid = pf.fid INNER JOIN {geonames_countryinfo} gc ON gc.iso_alpha2 = pv.value WHERE pf.name = 'profile_country' GROUP BY gc.iso_alpha2"),
  );

  $cases['nodes'] = array(
    'name' => t('Issues'),
//    'result' => db_query("SELECT gc.name AS country, COUNT(*) AS count FROM {content_field_issue_country} cfic INNER JOIN {node} n ON n.nid = cfic.nid AND n.type = '%s' INNER JOIN {geonames_countryinfo} gc ON gc.name = cfic.field_issue_country_value GROUP BY gc.iso_alpha2", 'poll'),
    'result' => db_query("SELECT cfic.field_issue_country_value AS country, COUNT(*) AS count FROM {content_field_issue_country} cfic WHERE cfic.field_issue_country_value IS NOT NULL GROUP BY cfic.field_issue_country_value"),
  );

  $cases['online'] = array(
    'name' => t('Online'),
    'result' => db_query("SELECT gc.name AS country, COUNT(*) AS count FROM {profile_fields} pf INNER JOIN {profile_values} pv ON pv.fid = pf.fid INNER JOIN {users} u ON u.uid = pv.uid AND u.access >= '%d' INNER JOIN {geonames_countryinfo} gc ON gc.iso_alpha2 = pv.value WHERE pf.name = 'profile_country' GROUP BY gc.iso_alpha2", time() - variable_get('user_block_seconds_online', 900)),
  );

  $cases['votes'] = array(
    'name' => t('Votes'),
//    'result' => db_query("SELECT gc.name AS country, COUNT(*) AS count FROM {poll_votes} AS pv INNER JOIN {content_field_issue_country} cfic ON cfic.nid = pv.nid INNER JOIN {geonames_countryinfo} gc ON gc.name = cfic.field_issue_country_value GROUP BY gc.iso_alpha2"),
    'result' => db_query("SELECT cfic.field_issue_country_value AS country, COUNT(*) AS count FROM {poll_votes} AS pv INNER JOIN {content_field_issue_country} cfic ON cfic.nid = pv.nid WHERE cfic.field_issue_country_value IS NOT NULL GROUP BY cfic.field_issue_country_value"),
  );

  foreach ($cases as $key => $case) {
    $vars['count_' . $key] = 0;
    $cols = $columns;
    $item = new stdClass();
    $item->type = 'number';
    $item->name = $case['name'];
    $cols[] = $item;
    $data = array();
    while ($row = db_fetch_array($case['result'])) {
      $data[] = array($row['country'], (int)$row['count']);
      $vars['count_' . $key] += (int)$row['count'];
    }
    drupal_add_js(array('heatmap' => array($key => array(
      'columns' => $cols,
      'dataset' => $data,
    ))), 'setting');
  }

  drupal_add_js(array('heatmap' => array('current' => 'users')), 'setting');
}

/**
 * Implementation of hook_block()
 *
 * @param string $op
 * @param int $delta
 * @param array $edit
 * @return mixed
 */
function heatmap_block($op = 'list', $delta = 0, $edit = array())
{
  switch ($op) {
    case 'list':
      $blocks['heatmap'] = array(
        'info' => t('Front Heatmap'),
      );
      return $blocks;

    case 'view':
      switch ($delta) {
        case 'heatmap':
          $block['subject'] = t("THE HERD");
          $block['content'] = theme('heatmap');
        break;
      }
      return $block;
  }
}