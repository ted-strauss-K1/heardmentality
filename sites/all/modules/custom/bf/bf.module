<?php

/**
 *
 */
define('BILL_FEEDS_URL', 'http://www.govtrack.us/data/us/112/bills');

/**
 * Get govtrack.us current url
 *
 * @return string
 */
function bf_get_path() {
  return BILL_FEEDS_URL;
}

/**
 * @return bool
 */
function bf_get_list() {
  set_time_limit(0);
  # make the request
  $result = drupal_http_request(bf_get_path());
  # error
  if (!$result->data) {
    return FALSE;
  }
  # data
  $data = $result->data;
  # fetch
  if (preg_match_all('/<a\s+href="([^\"]+.xml)"/', $data, $m)) {
    foreach ($m[0] as $i => $full) {
      bf_issue(bf_get_path().'/'.$m[1][$i]);
      break;
    }
  }
}

/**
 * @param $url
 */
function bf_issue($url) {
  $account = user_load(1);

  # get data
  if (false !== ($data = bf_get_feed($url))) {
    $doc = new DOMDocument();
    $doc->loadXML($data);

    // generic info
    $node = new stdClass();
    $node->type = 'poll';
    $node->language = 'en';
    $node->uid = $account->uid;
    $node->status = 1;
    $node->created = time();
    $node->changed = time();
    $node->comment = 0;
    $node->promote = 0;
    $node->moderate = 0;
    $node->sticky = 0;
    $node->tnid = 0;
    $node->translate = 0;
    $node->format = 0;
    $node->name = $account->name;
    $node->picture = $account->picture;
    $node->body = '';
    $node->choice = array();
    $node->field_arguments = array();
    $node->allowsuggestions = false;
    $node->taxonomy = array();

    // fetched info

    # title
    $title = $doc->getElementsByTagName('title');
    $titles = array();
    foreach ($title as $value) {
      $titles[$value->getAttribute('type')][] = $value->nodeValue;
    }
    $title = '';
    if (isset($titles['popular'])) {
      $title = $titles['popular'][0];
    } elseif (isset($titles['short'])) {
      $title = $titles['short'][0];
    } else {
      foreach ($titles as $type => $list) {
        foreach ($list as $item) {
          $title = $item;
          break 2;
        }
      }
    }
    if (!$title) {
      $title = $url;
    }
    $node->title = $title;

    # summary
    $summary = $doc->getElementsByTagName('summary');
    foreach ($summary as $value) {
      $summary = $value->nodeValue;
    }
    $node->field_description[0]['value'] = $summary;

    # terms
    foreach ($doc->getElementsByTagName('term') as $value) {
      $term = bf_term_by_name($value->getAttribute('name'));
      $node->taxonomy[ $term->tid ] = $term;
    }


//    $node->choice[] = array(
//      'chtext' => '',
//      'chvotes' => '',
//      'chorder' => '',
//    );
//    $node->field_arguments[] = array(
//      'nid' => '',
//    );

    // node_save($node);
    unset($node);

  }
}

/**
 * @param $url
 * @return bool
 */
function bf_get_feed($url) {
  # cache?
  if ($data = db_fetch_object(db_query("SELECT * FROM {bill_feeds} WHERE url = '%s'", $url))) {
    if ($data->nid) {
      return false;
    }
    $data = $data->content;
  }
  # request
  else {
    # make the request
    $result = drupal_http_request($url);
    # error
    if (!$result->data) {
      return FALSE;
    }
    # data
    $data = $result->data;
    # cache!
    db_query("REPLACE INTO {bill_feeds} SET url = '%s', content = '%s', date_added = '%s'",
      $url, $data, date("y-m-d H:i:s")
    );
  }

  return $data;
}

/**
 * @return bool
 */
function bf_term() {
  $terms = taxonomy_get_term_by_name('Bill Feeds');
  return $terms ? $terms[0] : false;
}

/**
 * @param $name
 * @return array
 */
function bf_term_by_name($name) {
  static $root_term, $root_term_children;

  if (is_null($root_term)) {
    $root_term = bf_term();
  }

  if (is_null($root_term_children)) {
    $root_term_children = taxonomy_get_children($root_term->tid, 0, 'name');
  }

  # get the term
  if (isset($root_term_children[$name])) {
    return $root_term_children[$name];
  } else {
    $term = array(
      'name' => $name,
      'vid' => $root_term->vid,
      'parent' => $root_term->tid,
    );
    taxonomy_save_term($term);
    return taxonomy_get_term($term['tid']);
  }
}