<?php
/**
 * Implementation of hook_perm().
 */
function question_perm() {
  return array('Question user','Question add','Question save','Question ajax','Question edit','Question delete');
}


/**
 * Implementation of hook_menu().
 */
 
function question_menu() {	

$items['question'] = array(
    'title' => ' My Question',
    'page callback' => 'my_question',
    'access arguments' => array('Question user'),
    'type' => MENU_SUGGESTED_ITEM,
    'file' => 'question.pages.inc',
  );
$items['question/add'] = array(
    'title' => ' Add Question',
    'page callback' => 'question_add',
    'access arguments' => array('Question add'),
    'type' => MENU_SUGGESTED_ITEM,
    'file' => 'question.pages.inc',
  );
$items['question/save'] = array(
    'title' => ' Save Question',
    'page callback' => 'question_save',
    'access arguments' => array('Question save'),
    'type' => MENU_SUGGESTED_ITEM,
    'file' => 'question.pages.inc',
  );
  $items['question/ajax'] = array(
    'title' => ' Ajax Function',
    'page callback' => 'question_ajax',
	 'access arguments' => array('Question ajax'),
     'type' => MENU_CALLBACK,
    'file' => 'question.pages.inc',
  );
 $items['question/edit'] = array(
    'title' => 'Edit Question',
    'page callback' => 'edit_question',
	 'access arguments' => array('Question edit'),
     'type' => MENU_SUGGESTED_ITEM,
    'file' => 'question.pages.inc',
  );
  $items['question/delete'] = array(
    'title' => 'Delete Category',
    'page callback' => 'drupal_get_form',
	'page arguments' => array('question_delete_confirm', 3),
    'access arguments' => array('Question delete'),
    'type' => MENU_CALLBACK,
    'file' => 'question.pages.inc',
  );
  return $items;
}


// mysql query execution	
	function ExecuteQuery($Query, $Qrytype)
	{
		if(!empty($Query) && !empty($Qrytype))
		{
			switch(strtolower($Qrytype))
			{
				case "select":
					$Result = db_query($Query) ;
					if($Result)
					{	
						$ResultSet = array();
						while($ResultSet1 = mysql_fetch_array($Result))
							$ResultSet[] = $ResultSet1;
						return $ResultSet;
					}
					else return false;
					break;
				case "update":
					$Result = db_query($Query);
					if($Result)
					{
						$AffectedNums = mysql_affected_rows();
						return $AffectedNums;
					}
					else return false;
					break;
				case "norows":
					$Result = db_query($Query) ;
					if($Result)
					{
						$Totalrows = mysql_num_rows($Result);
						return $Totalrows;
					}
					else return false;
					break;	
					
				case "insert":
					$Result = db_query($Query) ;
					if($Result)
					{
						$LastInsertedRow = mysql_insert_id();
						return $LastInsertedRow;
					}
					else return false;
					break;
				case "delete":
					$Result = db_query($Query) ;
					if($Result)
						return true;
					else
						return false;
			}
		}
		
	}
//function to update profileabadge by post
 function updateProfileBadge(){
   global $user;
   $query = "SELECT post_count FROM {profile_badges} where uid='".$user->uid."'";
   $list = ExecuteQuery($query, "select");
   $post_count = $list[0]['post_count'];
   $badge_type_id =1;
	  if( $post_count > 40){
		   $badge_type_id =3;
	  }elseif( $post_count > 14){
  		   $badge_type_id = 2;
	  }elseif( $post_count < 14){
  		   $badge_type_id	=1;
	  }
      $result = db_query("update {profile_badges} set badge_type_id ='$badge_type_id'  where uid='".$user->uid."'");


	}