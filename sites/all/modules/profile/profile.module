<?php
/**
 * Implementation of hook_perm().
 */
function profile_perm() {
    return array('Profile Edit', 'Profile View', 'Profile Privacy', 'User Sign In');
}
/**
 * Implementation of hook_menu().
 */
function profile_menu() {
    $items['profile'] = array('title'=>'Profile', 'page callback'=>'profile_view', 'access arguments'=>array('Profile View'), 'type'=>MENU_SUGGESTED_ITEM, 'file'=>'profile.pages.inc', );
    $items['profile/edit'] = array('title'=>' Edit Profile', 'page callback'=>'profile_edit', 'access arguments'=>array('Profile Edit'), 'type'=>MENU_CALLBACK, 'file'=>'profile.pages.inc', );
    
    $items['profile/privacy_settings'] = array('title'=>' Privacy Profile', 'page callback'=>'privacy_settings', 'access arguments'=>array('Profile Privacy'), 'type'=>MENU_CALLBACK, 'file'=>'profile.pages.inc', );
    
    $items['profile/deletefollow'] = array('title'=>' Profile', 'page callback'=>'save_follow_profile', 'access arguments'=>array('Profile View'), 'type'=>MENU_CALLBACK, 'file'=>'profile.pages.inc', );
    
    $items['profile/savefollowerlink'] = array('title'=>' Profile', 'page callback'=>'save_follower_profile', 'access arguments'=>array('Profile View'), 'type'=>MENU_CALLBACK, 'file'=>'profile.pages.inc', );
    $items['postmessage'] = array('title'=>' Profile', 'page callback'=>'save_message', 'access arguments'=>array('Profile View'), 'type'=>MENU_CALLBACK, 'file'=>'profile.pages.inc', );
    $items['profile/inbox'] = array('title'=>' Profile', 'page callback'=>'inbox_flex', 'access arguments'=>array('Profile Edit'), 'type'=>MENU_CALLBACK, 'file'=>'profile.pages.inc', );
   
    $items['google/map'] = array('title'=>'Facts', 'page callback'=>'google_map', 'access arguments'=>array('User Sign In'), 'type'=>MENU_SUGGESTED_ITEM, 'file'=>'profile.pages.inc', );
    $items['tour/home'] = array('title'=>'Take a tour', 'page callback'=>'amber_tour', 'access arguments'=>array('User Sign In'), 'type'=>MENU_SUGGESTED_ITEM, 'file'=>'profile.pages.inc', );
    
    return $items;
}

function userTypes() {
    $ques_query = "SELECT * FROM {user_types}";
    $list = ExecuteQuery($ques_query, "select");
    $usertypes = array();
    $i = 0;
    foreach ($list as $options) {
        $usertypes[$i] = $options['id'];
        $usertypes[$i] = $options['name'];
        $i++;
    }
    return $usertypes;
}
function load_user($uid = '') {
    
    $query = "select * from {users} as u join {user_profile} as up on u.uid=up.uid  where u.uid='$uid'";
    $result = db_fetch_object(db_query($query));
    return $result;
}
function checkPrivacySettings($uid = null) {
    $ques_query = "SELECT * FROM {privacy_settings} where uid='".$uid."'";
    $list = ExecuteQuery($ques_query, "select");
    $userFields = array();
    $i = 0;
    foreach ($list as $options) {
        $userFields[$i]['id'] = $options['id'];
        $userFields[$i]['email'] = $options['email'];
        $userFields[$i]['real_name'] = $options['real_name'];
        $userFields[$i]['image'] = $options['image'];
        $userFields[$i]['bio'] = $options['bio'];
        $userFields[$i]['gender'] = $options['gender'];
        $userFields[$i]['zip'] = $options['zip'];
        $userFields[$i]['country'] = $options['country'];
        $userFields[$i]['religion'] = $options['religion'];
        $userFields[$i]['ethnic'] = $options['ethnic'];
        $userFields[$i]['slant'] = $options['slant'];
        $userFields[$i]['facebook'] = $options['facebook'];
        $userFields[$i]['twitter'] = $options['twitter'];
        $userFields[$i]['following'] = $options['following'];
        $userFields[$i]['followers'] = $options['followers'];
        $userFields[$i]['medal'] = $options['medal'];
        $userFields[$i]['answers'] = $options['answers'];
        $userFields[$i]['questions'] = $options['questions'];
        $userFields[$i]['dob'] = $options['dob'];
        $i++;
    }
    if (isset($userFields[0]) && count($userFields[0]) > 0) {
        return $userFields[0];
    }

}
// to check only follower or followee will see the profile
function checkFollowStatus($login_user_id = null, $profile_user_id = null) {
    
    $ques_query = "SELECT *  from {follower}  where uid='".$login_user_id."'  AND follower_status='1' AND  follower_id='".$profile_user_id."' UNION
	SELECT *  from {follower}  where uid='".$profile_user_id."'  AND follower_status='1' AND  follower_id='".$login_user_id."'
	";
    $list = ExecuteQuery($ques_query, "select");
    $isfollow = FALSE;
    if (isset($list) && count($list) > 0) {
        $isfollow = TRUE;
        return $isfollow;
    }
    return $isfollow;
}

// To check user points for user privacy settings
function checkUserPoints($uid = null) {
    $ques_query = "SELECT points FROM {user_profile} where  uid='".$uid."'";
    $list = ExecuteQuery($ques_query, "select");
    if (isset($list[0]['points'])) {
        return $list[0]['points'];
    }
    return 0;

}

// To check user votes to display in profile
function checkUpAndDownVotes($uid = null) {
    $ques_query = "(SELECT count(*) as upcount,(SELECT count(*) FROM {question_like} where  uid='".$uid."' AND like_yes= '-1') as downcount FROM {question_like} where  uid='".$uid."' AND like_yes= '1' )";
    $list = ExecuteQuery($ques_query, "select");
    if (isset($list[0])) {
        return $list[0];
    }
    return 0;

}
function get_question($qid = '') {
    global $gSitePath,$user,$gDocPath,$base_root;
    
    $sel_userms = "SELECT * FROM {question} where qid='$qid' ";
    $rs_userms = db_query($sel_userms);
    return $resulrnames = db_fetch_object($rs_userms);
}


function get_state($code = '') {
    
    global $gSitePath,$user,$gDocPath,$base_root,$base_path;
    
    $query = array('postalcode'=>$code, 'maxrows'=>1);
    $result = geonames_query('postalcodesearch', $query);
    
    print_r($result);
    
    return $reuslt;

}

function UserPicture($mid,$profile='') {
    global $gSitePath,$user,$gDocPath,$base_root,$base_path;
    $selimage = "select image,image_url,image_avatar,avatar from {user_profile} where uid='$mid'";
    $rs_image = db_query($selimage);
    $resultimage = db_fetch_object($rs_image);
	$selected_avatar=$resultimage->avatar;
    $default = $gSitePath.drupal_get_path('module', 'profile').'/snap/noimage.jpg';
	if($profile)
	$resultimage->image_avatar=1;
	
    switch ($resultimage->image_avatar) {
        case '2':
             $image_path = file_create_path('avatar_selection');
			
              $ipath = $gSitePath.$image_path.'/'.$selected_avatar;
	
            if (file_check_location($image_path.'/'.$selected_avatar)) {
            	$PROFILE_IMAGE ='<img src="'.$ipath.'" alt="avatar" ALIGN=ABSMIDDLE width="65" class="uprofile"  height="56" >';
              //  $PROFILE_IMAGE = theme('image',$ipath);
            } else {
               $PROFILE_IMAGE = '<img src="'.$default.'" alt="photo" ALIGN=ABSMIDDLE class="uprofile" width="65"  height="56" >';
            }
            
            break;
        default:
            
            if ($resultimage->image != 'noimage.jpg') {
                 $upload_dir=variable_get('user_picture_path','pictures');

                 $img_path =$resultimage->image;
                
                if (file_exists($img_path)) {
                   
                    $PROFILE_IMAGE = '<img src="'.$gSitePath.$img_path.'" class="uprofile" alt="photo" ALIGN=ABSMIDDLE width="65"  height="56" >';
                } else {
                    
                    $PROFILE_IMAGE = '<img src="'.$default.'" alt="photo" class="uprofile" ALIGN=ABSMIDDLE width="65"  height="56" >';
                }
            } elseif ($resultimage->image_url != '') {


                $PROFILE_IMAGE = '<img src="'.$resultimage->image_url.'" class="uprofile" align="absmiddle" alt="photo" width="65"  height="56">';

            
            } else {
                //echo $resultimage->image;
                $img_path = $gSitePath.drupal_get_path('module', 'profile').'/snap/'.$resultimage->image;
                $PROFILE_IMAGE = '<img src="'.$img_path.'" class="uprofile" align="absmiddle" alt="photo" width="65" ALIGN=ABSMIDDLE  height="56" >';
            }
            break;
    }
    
    return $PROFILE_IMAGE;
}

function UserPicture_small($mid) {
    
    global $gSitePath,$user,$gDocPath,$base_root,$base_path;
     $selimage = "select image,image_url,image_avatar,avatar from {user_profile} where uid='$mid'";
    $rs_image = db_query($selimage);
    
    $resultimage = db_fetch_object($rs_image);
    $default = $gSitePath.drupal_get_path('module', 'profile').'/snap/noimage.jpg';
    switch ($resultimage->image_avatar) {
        case '2':
          $image_path = file_create_path('avatar_selection');
         
          //  $image_path=file_directory_path().'/avatar_selection';
            $selected_avatar = $resultimage->avatar;
            $ipath = $gSitePath.$image_path.'/'.$selected_avatar;
	
            if (file_exists($image_path.'/'.$selected_avatar)) {
                 //$PROFILE_IMAGE = theme_image($ipath,'thumbnail','Avatar',array('width'=>'30px','align'=>'absmiddle','height'=>'30px'),FALSE);
                 $PROFILE_IMAGE =' <img src="'.$ipath.'" alt="photo" ALIGN=ABSMIDDLE width="30" class="uprofile"  height="30" >';
            } else {
                $PROFILE_IMAGE = '<img src="'.$default.'" align="absmiddle" height="30" class="uprofile" width="30" alt="Photo" >';
            }
            
            break;
        default:
            
            if ($resultimage->image != 'noimage.jpg') {
                $img_path =$resultimage->image;
                if (file_exists($img_path)) {
                  // echo $gSitePath.$img_path;
                  
                    $PROFILE_IMAGE = '<img src="'.$gSitePath.$img_path.'" ALIGN=ABSMIDDLE class="uprofile" alt="Photo" height="30" width="30" >';
                   
                } else {
                    $PROFILE_IMAGE = '<img src="'.$default.'" align="absmiddle" class="uprofile" height="30" width="30" alt="Photo" >';
                }
            
            } elseif ($resultimage->image_url != '') {
                
               //echo $resultimage->image_url;
                if($resultimage->image_url!='')
                   {
                     $PROFILE_IMAGE = '<img src="'.$resultimage->image_url.'" class="uprofile" align="absmiddle" height="30" width="30" alt="Profile image" >';
                   }
                   else
                   {
                       $PROFILE_IMAGE = '<img src="'.$default.'" align="absmiddle" class="uprofile" height="30" width="30" alt="Photo" >';
                   }
               
            } else {
                //echo $resultimage->image;
                $img_path = $gSitePath.drupal_get_path('module', 'profile').'/snap/'.$resultimage->image;

                if(file_exists($img_path))
                   {
                      $PROFILE_IMAGE = '<img src="'.$img_path.'" align="absmiddle" class="uprofile" height="30" width="30" alt="Profile image" >';
                   }
                   else
                   {
                       $PROFILE_IMAGE = '<img src="'.$default.'" align="absmiddle" class="uprofile" height="30" width="30" alt="Photo" >';
                   }

               
            }
            break;
    }
    
    return $PROFILE_IMAGE;
}


function save_message() {
    //print_r($_REQUEST);
    global $gSitePath,$user,$gDocPath,$base_root,$base_path;
    $uid = $_REQUEST['actions'];
    if (! empty($uid) && ! empty($_REQUEST['msgs']) && ! empty($user->uid)) {
        db_query("insert into messages (from_id,to_id,message) values('".$user->uid."','".$uid."','".$_REQUEST['msgs']."')");
        
        echo '<div class="messages success">Message sent successfully!</div>';
    
    } elseif (! empty($_REQUEST['muid']) && ! empty($_REQUEST['frmsgs'])) {
        
        foreach ($_REQUEST['muid'] as $uids) {
            
            db_query("insert into messages (from_id,to_id,message) values('".$user->uid."','".$uids."','".$_REQUEST['frmsgs']."')");

        
        }
        echo '<div class="messages success">Message sent successfully!</div>';
    } else {
        echo '<div class="messages error">Sorry Error Occurs!</div>';
    
    }
    exit;

}

drupal_add_js(drupal_get_path('module', 'profile').'/js/tab.js');
function user_facts() {
    global $gSitePath,$user,$gDocPath,$base_root;
    $time_period = variable_get('user_block_seconds_online', 900);
    $output = '';
    
    $usercnt = '';
    $quest = '';
    $ans = '';
    //$usercnt = db_result(db_query("select count(uid) from {users} where status='1' and country REGEXP '[^0-9]'"));

    $usercnt = db_result(db_query(" select count(u.uid) from users as u join user_profile as up on u.uid=up.uid where u.status=1 and up.country REGEXP '[^0-9]'"));
   // $quest = db_result(db_query("select count(*) from {question} as q join {users} as u on q.uid=u.uid where q.status='1'"));
    $quest = db_result(db_query("select count(*) from {question} as q join {users} as u on q.uid=u.uid where q.status='1' and q.country REGEXP '[^0-9]'"));
    $ans = db_result(db_query("select count(*) from {possible_answer_vote} as a join {question} as q on q.qid=a.qid where q.status='1' and q.country REGEXP '[^0-9]'"));
    $userslist = db_query('SELECT count(*) access FROM {users} WHERE access >= %d AND uid != 0 ORDER BY access DESC', time() - $time_period);
     //$get_ans = db_queryd('SELECT count(*) as count,up.* FROM users as u join user_profile as up on u.uid=up.uid  WHERE u.access >= %d AND u.uid != 0 AND up.country REGEXP \'[^0-9]\'', time() - $time_period);
     //exit;
    $total_users = db_result($userslist);
    
    $output .= '
    <div><img src="'.$gSitePath.path_to_theme().'/images/map.gif" alt="map" width="155"/>
</div>
<div>
         <div class="fa-item">
          <ul>
        
          <li><a href="JavaScript:void(0);" title="Double Click To Launch" ondblclick="return loadtab(\''.$gSitePath.'google/map/users'.$qid.'\',\'Facts And Figures : Total Users '.$usercnt.'\')">'.$usercnt.' Users</a></li>
          <li><a href="javascript:void(0);" title="Double Click To Launch" ondblclick="return loadtab(\''.$gSitePath.'google/map/online'.$qid.'\',\'Facts And Figures : Online Users '.$total_users.'\')">'.$total_users.' Online</a></li>
          <li><a href="javascript:void(0)" title="Double Click To Launch" ondblclick="return loadtab(\''.$gSitePath.'google/map/questions'.$qid.'\',\'Facts And Figures : Total Questions '.$quest.'\')">'.$quest.' Questions</a></li>
          <li><a href="javascript:void(0)" title="Double Click To Launch" ondblclick="return loadtab(\''.$gSitePath.'google/map/answer'.$qid.'\',\'Facts And Figures : Toatal Answers '.$ans.'\')">'.$ans.' Answers</a></li>
          </ul>
          </div>
          
          </div>
<div class="clr"></div>
  ';
    return $output;
}

function load_bubble($uid = '') {
    //<img src="' . $gSitePath . path_to_theme() . '/images/yellow-dot.png" alt="yellow badge" />2 <img src="' . $gSitePath . path_to_theme() . '/images/violet-dot.png" alt="violet-badges" />4 <img src="' . $gSitePath . path_to_theme() . '/images/brown-dot.png" alt="brown badges" />40
    $medal = updateProfileBadge($uid);
    $details = load_user($uid);
    $uname = $details->first_name.' '.$details->last_name;
    $output = '<table border="0" class="sitetour" ><tr><td>'.UserPicture($uid).'</td><td><p>'.$uname.'</p><p>'.$medal.'</p></td></tr></table>';
    
    return $output;

}
/// vijay link color

function drupal_link_color($userid, $quesid) {
    
    if ($userid) {
        $linkcolor = db_query("select count(*) as count from {possible_answer_vote} where qid='".$quesid."' and uid='".$userid."'  ");
        $get_linkcolor = db_fetch_object($linkcolor);
        //         if($get_linkcolor->count==0)
        //         {
        //            // return "color:red";
        //         }
        if ($get_linkcolor->count == 1) {
            // return "color:green";
            return "font-weight:bold";
        }
    }
    // return "color:#CC6600";

}


?>
